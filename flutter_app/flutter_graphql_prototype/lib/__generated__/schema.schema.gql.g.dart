// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'schema.schema.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

const GSortDirection _$gSortDirectionASC = const GSortDirection._('ASC');
const GSortDirection _$gSortDirectionDESC = const GSortDirection._('DESC');

GSortDirection _$gSortDirectionValueOf(String name) {
  switch (name) {
    case 'ASC':
      return _$gSortDirectionASC;
    case 'DESC':
      return _$gSortDirectionDESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSortDirection> _$gSortDirectionValues =
    new BuiltSet<GSortDirection>(const <GSortDirection>[
  _$gSortDirectionASC,
  _$gSortDirectionDESC,
]);

Serializer<GPageBelongsToAggregateInput>
    _$gPageBelongsToAggregateInputSerializer =
    new _$GPageBelongsToAggregateInputSerializer();
Serializer<GPageBelongsToConnectFieldInput>
    _$gPageBelongsToConnectFieldInputSerializer =
    new _$GPageBelongsToConnectFieldInputSerializer();
Serializer<GPageBelongsToConnectionSort>
    _$gPageBelongsToConnectionSortSerializer =
    new _$GPageBelongsToConnectionSortSerializer();
Serializer<GPageBelongsToConnectionWhere>
    _$gPageBelongsToConnectionWhereSerializer =
    new _$GPageBelongsToConnectionWhereSerializer();
Serializer<GPageBelongsToConnectOrCreateFieldInput>
    _$gPageBelongsToConnectOrCreateFieldInputSerializer =
    new _$GPageBelongsToConnectOrCreateFieldInputSerializer();
Serializer<GPageBelongsToConnectOrCreateFieldInputOnCreate>
    _$gPageBelongsToConnectOrCreateFieldInputOnCreateSerializer =
    new _$GPageBelongsToConnectOrCreateFieldInputOnCreateSerializer();
Serializer<GPageBelongsToCreateFieldInput>
    _$gPageBelongsToCreateFieldInputSerializer =
    new _$GPageBelongsToCreateFieldInputSerializer();
Serializer<GPageBelongsToDeleteFieldInput>
    _$gPageBelongsToDeleteFieldInputSerializer =
    new _$GPageBelongsToDeleteFieldInputSerializer();
Serializer<GPageBelongsToDisconnectFieldInput>
    _$gPageBelongsToDisconnectFieldInputSerializer =
    new _$GPageBelongsToDisconnectFieldInputSerializer();
Serializer<GPageBelongsToFieldInput> _$gPageBelongsToFieldInputSerializer =
    new _$GPageBelongsToFieldInputSerializer();
Serializer<GPageBelongsToNodeAggregationWhereInput>
    _$gPageBelongsToNodeAggregationWhereInputSerializer =
    new _$GPageBelongsToNodeAggregationWhereInputSerializer();
Serializer<GPageBelongsToUpdateConnectionInput>
    _$gPageBelongsToUpdateConnectionInputSerializer =
    new _$GPageBelongsToUpdateConnectionInputSerializer();
Serializer<GPageBelongsToUpdateFieldInput>
    _$gPageBelongsToUpdateFieldInputSerializer =
    new _$GPageBelongsToUpdateFieldInputSerializer();
Serializer<GPageConnectInput> _$gPageConnectInputSerializer =
    new _$GPageConnectInputSerializer();
Serializer<GPageConnectOrCreateInput> _$gPageConnectOrCreateInputSerializer =
    new _$GPageConnectOrCreateInputSerializer();
Serializer<GPageConnectOrCreateWhere> _$gPageConnectOrCreateWhereSerializer =
    new _$GPageConnectOrCreateWhereSerializer();
Serializer<GPageConnectWhere> _$gPageConnectWhereSerializer =
    new _$GPageConnectWhereSerializer();
Serializer<GPageCreateInput> _$gPageCreateInputSerializer =
    new _$GPageCreateInputSerializer();
Serializer<GPageDeleteInput> _$gPageDeleteInputSerializer =
    new _$GPageDeleteInputSerializer();
Serializer<GPageDisconnectInput> _$gPageDisconnectInputSerializer =
    new _$GPageDisconnectInputSerializer();
Serializer<GPageOnCreateInput> _$gPageOnCreateInputSerializer =
    new _$GPageOnCreateInputSerializer();
Serializer<GPageOptions> _$gPageOptionsSerializer =
    new _$GPageOptionsSerializer();
Serializer<GPageParentPageAggregateInput>
    _$gPageParentPageAggregateInputSerializer =
    new _$GPageParentPageAggregateInputSerializer();
Serializer<GPageParentPageConnectFieldInput>
    _$gPageParentPageConnectFieldInputSerializer =
    new _$GPageParentPageConnectFieldInputSerializer();
Serializer<GPageParentPageConnectionSort>
    _$gPageParentPageConnectionSortSerializer =
    new _$GPageParentPageConnectionSortSerializer();
Serializer<GPageParentPageConnectionWhere>
    _$gPageParentPageConnectionWhereSerializer =
    new _$GPageParentPageConnectionWhereSerializer();
Serializer<GPageParentPageConnectOrCreateFieldInput>
    _$gPageParentPageConnectOrCreateFieldInputSerializer =
    new _$GPageParentPageConnectOrCreateFieldInputSerializer();
Serializer<GPageParentPageConnectOrCreateFieldInputOnCreate>
    _$gPageParentPageConnectOrCreateFieldInputOnCreateSerializer =
    new _$GPageParentPageConnectOrCreateFieldInputOnCreateSerializer();
Serializer<GPageParentPageCreateFieldInput>
    _$gPageParentPageCreateFieldInputSerializer =
    new _$GPageParentPageCreateFieldInputSerializer();
Serializer<GPageParentPageDeleteFieldInput>
    _$gPageParentPageDeleteFieldInputSerializer =
    new _$GPageParentPageDeleteFieldInputSerializer();
Serializer<GPageParentPageDisconnectFieldInput>
    _$gPageParentPageDisconnectFieldInputSerializer =
    new _$GPageParentPageDisconnectFieldInputSerializer();
Serializer<GPageParentPageFieldInput> _$gPageParentPageFieldInputSerializer =
    new _$GPageParentPageFieldInputSerializer();
Serializer<GPageParentPageNodeAggregationWhereInput>
    _$gPageParentPageNodeAggregationWhereInputSerializer =
    new _$GPageParentPageNodeAggregationWhereInputSerializer();
Serializer<GPageParentPageUpdateConnectionInput>
    _$gPageParentPageUpdateConnectionInputSerializer =
    new _$GPageParentPageUpdateConnectionInputSerializer();
Serializer<GPageParentPageUpdateFieldInput>
    _$gPageParentPageUpdateFieldInputSerializer =
    new _$GPageParentPageUpdateFieldInputSerializer();
Serializer<GPageRelationInput> _$gPageRelationInputSerializer =
    new _$GPageRelationInputSerializer();
Serializer<GPageSort> _$gPageSortSerializer = new _$GPageSortSerializer();
Serializer<GPageSubPagesAggregateInput>
    _$gPageSubPagesAggregateInputSerializer =
    new _$GPageSubPagesAggregateInputSerializer();
Serializer<GPageSubPagesConnectFieldInput>
    _$gPageSubPagesConnectFieldInputSerializer =
    new _$GPageSubPagesConnectFieldInputSerializer();
Serializer<GPageSubPagesConnectionSort>
    _$gPageSubPagesConnectionSortSerializer =
    new _$GPageSubPagesConnectionSortSerializer();
Serializer<GPageSubPagesConnectionWhere>
    _$gPageSubPagesConnectionWhereSerializer =
    new _$GPageSubPagesConnectionWhereSerializer();
Serializer<GPageSubPagesConnectOrCreateFieldInput>
    _$gPageSubPagesConnectOrCreateFieldInputSerializer =
    new _$GPageSubPagesConnectOrCreateFieldInputSerializer();
Serializer<GPageSubPagesConnectOrCreateFieldInputOnCreate>
    _$gPageSubPagesConnectOrCreateFieldInputOnCreateSerializer =
    new _$GPageSubPagesConnectOrCreateFieldInputOnCreateSerializer();
Serializer<GPageSubPagesCreateFieldInput>
    _$gPageSubPagesCreateFieldInputSerializer =
    new _$GPageSubPagesCreateFieldInputSerializer();
Serializer<GPageSubPagesDeleteFieldInput>
    _$gPageSubPagesDeleteFieldInputSerializer =
    new _$GPageSubPagesDeleteFieldInputSerializer();
Serializer<GPageSubPagesDisconnectFieldInput>
    _$gPageSubPagesDisconnectFieldInputSerializer =
    new _$GPageSubPagesDisconnectFieldInputSerializer();
Serializer<GPageSubPagesFieldInput> _$gPageSubPagesFieldInputSerializer =
    new _$GPageSubPagesFieldInputSerializer();
Serializer<GPageSubPagesNodeAggregationWhereInput>
    _$gPageSubPagesNodeAggregationWhereInputSerializer =
    new _$GPageSubPagesNodeAggregationWhereInputSerializer();
Serializer<GPageSubPagesUpdateConnectionInput>
    _$gPageSubPagesUpdateConnectionInputSerializer =
    new _$GPageSubPagesUpdateConnectionInputSerializer();
Serializer<GPageSubPagesUpdateFieldInput>
    _$gPageSubPagesUpdateFieldInputSerializer =
    new _$GPageSubPagesUpdateFieldInputSerializer();
Serializer<GPageUniqueWhere> _$gPageUniqueWhereSerializer =
    new _$GPageUniqueWhereSerializer();
Serializer<GPageUpdateInput> _$gPageUpdateInputSerializer =
    new _$GPageUpdateInputSerializer();
Serializer<GPageWhere> _$gPageWhereSerializer = new _$GPageWhereSerializer();
Serializer<GProjectConnectInput> _$gProjectConnectInputSerializer =
    new _$GProjectConnectInputSerializer();
Serializer<GProjectConnectOrCreateInput>
    _$gProjectConnectOrCreateInputSerializer =
    new _$GProjectConnectOrCreateInputSerializer();
Serializer<GProjectConnectOrCreateWhere>
    _$gProjectConnectOrCreateWhereSerializer =
    new _$GProjectConnectOrCreateWhereSerializer();
Serializer<GProjectConnectWhere> _$gProjectConnectWhereSerializer =
    new _$GProjectConnectWhereSerializer();
Serializer<GProjectCreateInput> _$gProjectCreateInputSerializer =
    new _$GProjectCreateInputSerializer();
Serializer<GProjectDeleteInput> _$gProjectDeleteInputSerializer =
    new _$GProjectDeleteInputSerializer();
Serializer<GProjectDisconnectInput> _$gProjectDisconnectInputSerializer =
    new _$GProjectDisconnectInputSerializer();
Serializer<GProjectOnCreateInput> _$gProjectOnCreateInputSerializer =
    new _$GProjectOnCreateInputSerializer();
Serializer<GProjectOptions> _$gProjectOptionsSerializer =
    new _$GProjectOptionsSerializer();
Serializer<GProjectOwnerAggregateInput>
    _$gProjectOwnerAggregateInputSerializer =
    new _$GProjectOwnerAggregateInputSerializer();
Serializer<GProjectOwnerConnectFieldInput>
    _$gProjectOwnerConnectFieldInputSerializer =
    new _$GProjectOwnerConnectFieldInputSerializer();
Serializer<GProjectOwnerConnectionSort>
    _$gProjectOwnerConnectionSortSerializer =
    new _$GProjectOwnerConnectionSortSerializer();
Serializer<GProjectOwnerConnectionWhere>
    _$gProjectOwnerConnectionWhereSerializer =
    new _$GProjectOwnerConnectionWhereSerializer();
Serializer<GProjectOwnerConnectOrCreateFieldInput>
    _$gProjectOwnerConnectOrCreateFieldInputSerializer =
    new _$GProjectOwnerConnectOrCreateFieldInputSerializer();
Serializer<GProjectOwnerConnectOrCreateFieldInputOnCreate>
    _$gProjectOwnerConnectOrCreateFieldInputOnCreateSerializer =
    new _$GProjectOwnerConnectOrCreateFieldInputOnCreateSerializer();
Serializer<GProjectOwnerCreateFieldInput>
    _$gProjectOwnerCreateFieldInputSerializer =
    new _$GProjectOwnerCreateFieldInputSerializer();
Serializer<GProjectOwnerDeleteFieldInput>
    _$gProjectOwnerDeleteFieldInputSerializer =
    new _$GProjectOwnerDeleteFieldInputSerializer();
Serializer<GProjectOwnerDisconnectFieldInput>
    _$gProjectOwnerDisconnectFieldInputSerializer =
    new _$GProjectOwnerDisconnectFieldInputSerializer();
Serializer<GProjectOwnerFieldInput> _$gProjectOwnerFieldInputSerializer =
    new _$GProjectOwnerFieldInputSerializer();
Serializer<GProjectOwnerNodeAggregationWhereInput>
    _$gProjectOwnerNodeAggregationWhereInputSerializer =
    new _$GProjectOwnerNodeAggregationWhereInputSerializer();
Serializer<GProjectOwnerUpdateConnectionInput>
    _$gProjectOwnerUpdateConnectionInputSerializer =
    new _$GProjectOwnerUpdateConnectionInputSerializer();
Serializer<GProjectOwnerUpdateFieldInput>
    _$gProjectOwnerUpdateFieldInputSerializer =
    new _$GProjectOwnerUpdateFieldInputSerializer();
Serializer<GProjectPagesAggregateInput>
    _$gProjectPagesAggregateInputSerializer =
    new _$GProjectPagesAggregateInputSerializer();
Serializer<GProjectPagesConnectFieldInput>
    _$gProjectPagesConnectFieldInputSerializer =
    new _$GProjectPagesConnectFieldInputSerializer();
Serializer<GProjectPagesConnectionSort>
    _$gProjectPagesConnectionSortSerializer =
    new _$GProjectPagesConnectionSortSerializer();
Serializer<GProjectPagesConnectionWhere>
    _$gProjectPagesConnectionWhereSerializer =
    new _$GProjectPagesConnectionWhereSerializer();
Serializer<GProjectPagesConnectOrCreateFieldInput>
    _$gProjectPagesConnectOrCreateFieldInputSerializer =
    new _$GProjectPagesConnectOrCreateFieldInputSerializer();
Serializer<GProjectPagesConnectOrCreateFieldInputOnCreate>
    _$gProjectPagesConnectOrCreateFieldInputOnCreateSerializer =
    new _$GProjectPagesConnectOrCreateFieldInputOnCreateSerializer();
Serializer<GProjectPagesCreateFieldInput>
    _$gProjectPagesCreateFieldInputSerializer =
    new _$GProjectPagesCreateFieldInputSerializer();
Serializer<GProjectPagesDeleteFieldInput>
    _$gProjectPagesDeleteFieldInputSerializer =
    new _$GProjectPagesDeleteFieldInputSerializer();
Serializer<GProjectPagesDisconnectFieldInput>
    _$gProjectPagesDisconnectFieldInputSerializer =
    new _$GProjectPagesDisconnectFieldInputSerializer();
Serializer<GProjectPagesFieldInput> _$gProjectPagesFieldInputSerializer =
    new _$GProjectPagesFieldInputSerializer();
Serializer<GProjectPagesNodeAggregationWhereInput>
    _$gProjectPagesNodeAggregationWhereInputSerializer =
    new _$GProjectPagesNodeAggregationWhereInputSerializer();
Serializer<GProjectPagesUpdateConnectionInput>
    _$gProjectPagesUpdateConnectionInputSerializer =
    new _$GProjectPagesUpdateConnectionInputSerializer();
Serializer<GProjectPagesUpdateFieldInput>
    _$gProjectPagesUpdateFieldInputSerializer =
    new _$GProjectPagesUpdateFieldInputSerializer();
Serializer<GProjectRelationInput> _$gProjectRelationInputSerializer =
    new _$GProjectRelationInputSerializer();
Serializer<GProjectSort> _$gProjectSortSerializer =
    new _$GProjectSortSerializer();
Serializer<GProjectUniqueWhere> _$gProjectUniqueWhereSerializer =
    new _$GProjectUniqueWhereSerializer();
Serializer<GProjectUpdateInput> _$gProjectUpdateInputSerializer =
    new _$GProjectUpdateInputSerializer();
Serializer<GProjectWhere> _$gProjectWhereSerializer =
    new _$GProjectWhereSerializer();
Serializer<GSortDirection> _$gSortDirectionSerializer =
    new _$GSortDirectionSerializer();
Serializer<GUserConnectInput> _$gUserConnectInputSerializer =
    new _$GUserConnectInputSerializer();
Serializer<GUserConnectOrCreateInput> _$gUserConnectOrCreateInputSerializer =
    new _$GUserConnectOrCreateInputSerializer();
Serializer<GUserConnectOrCreateWhere> _$gUserConnectOrCreateWhereSerializer =
    new _$GUserConnectOrCreateWhereSerializer();
Serializer<GUserConnectWhere> _$gUserConnectWhereSerializer =
    new _$GUserConnectWhereSerializer();
Serializer<GUserCreateInput> _$gUserCreateInputSerializer =
    new _$GUserCreateInputSerializer();
Serializer<GUserDeleteInput> _$gUserDeleteInputSerializer =
    new _$GUserDeleteInputSerializer();
Serializer<GUserDisconnectInput> _$gUserDisconnectInputSerializer =
    new _$GUserDisconnectInputSerializer();
Serializer<GUserOnCreateInput> _$gUserOnCreateInputSerializer =
    new _$GUserOnCreateInputSerializer();
Serializer<GUserOptions> _$gUserOptionsSerializer =
    new _$GUserOptionsSerializer();
Serializer<GUserProjectsAggregateInput>
    _$gUserProjectsAggregateInputSerializer =
    new _$GUserProjectsAggregateInputSerializer();
Serializer<GUserProjectsConnectFieldInput>
    _$gUserProjectsConnectFieldInputSerializer =
    new _$GUserProjectsConnectFieldInputSerializer();
Serializer<GUserProjectsConnectionSort>
    _$gUserProjectsConnectionSortSerializer =
    new _$GUserProjectsConnectionSortSerializer();
Serializer<GUserProjectsConnectionWhere>
    _$gUserProjectsConnectionWhereSerializer =
    new _$GUserProjectsConnectionWhereSerializer();
Serializer<GUserProjectsConnectOrCreateFieldInput>
    _$gUserProjectsConnectOrCreateFieldInputSerializer =
    new _$GUserProjectsConnectOrCreateFieldInputSerializer();
Serializer<GUserProjectsConnectOrCreateFieldInputOnCreate>
    _$gUserProjectsConnectOrCreateFieldInputOnCreateSerializer =
    new _$GUserProjectsConnectOrCreateFieldInputOnCreateSerializer();
Serializer<GUserProjectsCreateFieldInput>
    _$gUserProjectsCreateFieldInputSerializer =
    new _$GUserProjectsCreateFieldInputSerializer();
Serializer<GUserProjectsDeleteFieldInput>
    _$gUserProjectsDeleteFieldInputSerializer =
    new _$GUserProjectsDeleteFieldInputSerializer();
Serializer<GUserProjectsDisconnectFieldInput>
    _$gUserProjectsDisconnectFieldInputSerializer =
    new _$GUserProjectsDisconnectFieldInputSerializer();
Serializer<GUserProjectsFieldInput> _$gUserProjectsFieldInputSerializer =
    new _$GUserProjectsFieldInputSerializer();
Serializer<GUserProjectsNodeAggregationWhereInput>
    _$gUserProjectsNodeAggregationWhereInputSerializer =
    new _$GUserProjectsNodeAggregationWhereInputSerializer();
Serializer<GUserProjectsUpdateConnectionInput>
    _$gUserProjectsUpdateConnectionInputSerializer =
    new _$GUserProjectsUpdateConnectionInputSerializer();
Serializer<GUserProjectsUpdateFieldInput>
    _$gUserProjectsUpdateFieldInputSerializer =
    new _$GUserProjectsUpdateFieldInputSerializer();
Serializer<GUserRelationInput> _$gUserRelationInputSerializer =
    new _$GUserRelationInputSerializer();
Serializer<GUserSort> _$gUserSortSerializer = new _$GUserSortSerializer();
Serializer<GUserUniqueWhere> _$gUserUniqueWhereSerializer =
    new _$GUserUniqueWhereSerializer();
Serializer<GUserUpdateInput> _$gUserUpdateInputSerializer =
    new _$GUserUpdateInputSerializer();
Serializer<GUserWhere> _$gUserWhereSerializer = new _$GUserWhereSerializer();

class _$GPageBelongsToAggregateInputSerializer
    implements StructuredSerializer<GPageBelongsToAggregateInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToAggregateInput,
    _$GPageBelongsToAggregateInput
  ];
  @override
  final String wireName = 'GPageBelongsToAggregateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToAggregateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LT;
    if (value != null) {
      result
        ..add('count_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LTE;
    if (value != null) {
      result
        ..add('count_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GT;
    if (value != null) {
      result
        ..add('count_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GTE;
    if (value != null) {
      result
        ..add('count_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageBelongsToAggregateInput)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageBelongsToAggregateInput)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageBelongsToNodeAggregationWhereInput)));
    }
    return result;
  }

  @override
  GPageBelongsToAggregateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToAggregateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LT':
          result.count_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LTE':
          result.count_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GT':
          result.count_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GTE':
          result.count_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageBelongsToAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageBelongsToAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToNodeAggregationWhereInput))!
              as GPageBelongsToNodeAggregationWhereInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToConnectFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToConnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToConnectFieldInput,
    _$GPageBelongsToConnectFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToConnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToConnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectConnectWhere)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectConnectInput)));
    }
    return result;
  }

  @override
  GPageBelongsToConnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToConnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectConnectWhere))!
              as GProjectConnectWhere);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectConnectInput))!
              as GProjectConnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToConnectionSortSerializer
    implements StructuredSerializer<GPageBelongsToConnectionSort> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToConnectionSort,
    _$GPageBelongsToConnectionSort
  ];
  @override
  final String wireName = 'GPageBelongsToConnectionSort';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToConnectionSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectSort)));
    }
    return result;
  }

  @override
  GPageBelongsToConnectionSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToConnectionSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectSort))! as GProjectSort);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToConnectionWhereSerializer
    implements StructuredSerializer<GPageBelongsToConnectionWhere> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToConnectionWhere,
    _$GPageBelongsToConnectionWhere
  ];
  @override
  final String wireName = 'GPageBelongsToConnectionWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToConnectionWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageBelongsToConnectionWhere)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageBelongsToConnectionWhere)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.node_NOT;
    if (value != null) {
      result
        ..add('node_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    return result;
  }

  @override
  GPageBelongsToConnectionWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToConnectionWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageBelongsToConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageBelongsToConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'node_NOT':
          result.node_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToConnectOrCreateFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToConnectOrCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToConnectOrCreateFieldInput,
    _$GPageBelongsToConnectOrCreateFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToConnectOrCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToConnectOrCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GProjectConnectOrCreateWhere)),
      'onCreate',
      serializers.serialize(object.onCreate,
          specifiedType:
              const FullType(GPageBelongsToConnectOrCreateFieldInputOnCreate)),
    ];

    return result;
  }

  @override
  GPageBelongsToConnectOrCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToConnectOrCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectConnectOrCreateWhere))!
              as GProjectConnectOrCreateWhere);
          break;
        case 'onCreate':
          result.onCreate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GPageBelongsToConnectOrCreateFieldInputOnCreate))!
              as GPageBelongsToConnectOrCreateFieldInputOnCreate);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToConnectOrCreateFieldInputOnCreateSerializer
    implements
        StructuredSerializer<GPageBelongsToConnectOrCreateFieldInputOnCreate> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToConnectOrCreateFieldInputOnCreate,
    _$GPageBelongsToConnectOrCreateFieldInputOnCreate
  ];
  @override
  final String wireName = 'GPageBelongsToConnectOrCreateFieldInputOnCreate';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GPageBelongsToConnectOrCreateFieldInputOnCreate object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GProjectOnCreateInput)),
    ];

    return result;
  }

  @override
  GPageBelongsToConnectOrCreateFieldInputOnCreate deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOnCreateInput))!
              as GProjectOnCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToCreateFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToCreateFieldInput,
    _$GPageBelongsToCreateFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GProjectCreateInput)),
    ];

    return result;
  }

  @override
  GPageBelongsToCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectCreateInput))!
              as GProjectCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToDeleteFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToDeleteFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToDeleteFieldInput,
    _$GPageBelongsToDeleteFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToDeleteFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToDeleteFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectionWhere)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectDeleteInput)));
    }
    return result;
  }

  @override
  GPageBelongsToDeleteFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToDeleteFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToConnectionWhere))!
              as GPageBelongsToConnectionWhere);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectDeleteInput))!
              as GProjectDeleteInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToDisconnectFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToDisconnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToDisconnectFieldInput,
    _$GPageBelongsToDisconnectFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToDisconnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToDisconnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectionWhere)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectDisconnectInput)));
    }
    return result;
  }

  @override
  GPageBelongsToDisconnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToDisconnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToConnectionWhere))!
              as GPageBelongsToConnectionWhere);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectDisconnectInput))!
              as GProjectDisconnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToFieldInput,
    _$GPageBelongsToFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToCreateFieldInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectFieldInput)));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageBelongsToConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GPageBelongsToFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'create':
          result.create.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToCreateFieldInput))!
              as GPageBelongsToCreateFieldInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToConnectFieldInput))!
              as GPageBelongsToConnectFieldInput);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToConnectOrCreateFieldInput))!
              as GPageBelongsToConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToNodeAggregationWhereInputSerializer
    implements StructuredSerializer<GPageBelongsToNodeAggregationWhereInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToNodeAggregationWhereInput,
    _$GPageBelongsToNodeAggregationWhereInput
  ];
  @override
  final String wireName = 'GPageBelongsToNodeAggregationWhereInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToNodeAggregationWhereInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageBelongsToNodeAggregationWhereInput)
            ])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageBelongsToNodeAggregationWhereInput)
            ])));
    }
    value = object.id_EQUAL;
    if (value != null) {
      result
        ..add('id_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_EQUAL;
    if (value != null) {
      result
        ..add('title_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('title_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('title_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('title_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GT;
    if (value != null) {
      result
        ..add('title_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GT;
    if (value != null) {
      result
        ..add('title_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GT;
    if (value != null) {
      result
        ..add('title_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GT;
    if (value != null) {
      result
        ..add('title_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GTE;
    if (value != null) {
      result
        ..add('title_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GTE;
    if (value != null) {
      result
        ..add('title_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LT;
    if (value != null) {
      result
        ..add('title_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LT;
    if (value != null) {
      result
        ..add('title_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LT;
    if (value != null) {
      result
        ..add('title_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LT;
    if (value != null) {
      result
        ..add('title_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LTE;
    if (value != null) {
      result
        ..add('title_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LTE;
    if (value != null) {
      result
        ..add('title_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_EQUAL;
    if (value != null) {
      result
        ..add('description_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('description_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('description_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('description_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GT;
    if (value != null) {
      result
        ..add('description_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GT;
    if (value != null) {
      result
        ..add('description_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GT;
    if (value != null) {
      result
        ..add('description_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GT;
    if (value != null) {
      result
        ..add('description_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GTE;
    if (value != null) {
      result
        ..add('description_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GTE;
    if (value != null) {
      result
        ..add('description_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LT;
    if (value != null) {
      result
        ..add('description_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LT;
    if (value != null) {
      result
        ..add('description_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LT;
    if (value != null) {
      result
        ..add('description_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LT;
    if (value != null) {
      result
        ..add('description_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LTE;
    if (value != null) {
      result
        ..add('description_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LTE;
    if (value != null) {
      result
        ..add('description_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creationDate_EQUAL;
    if (value != null) {
      result
        ..add('creationDate_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_EQUAL;
    if (value != null) {
      result
        ..add('creationDate_MIN_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_EQUAL;
    if (value != null) {
      result
        ..add('creationDate_MAX_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_GT;
    if (value != null) {
      result
        ..add('creationDate_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_GT;
    if (value != null) {
      result
        ..add('creationDate_MIN_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_GT;
    if (value != null) {
      result
        ..add('creationDate_MAX_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_GTE;
    if (value != null) {
      result
        ..add('creationDate_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_GTE;
    if (value != null) {
      result
        ..add('creationDate_MIN_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_GTE;
    if (value != null) {
      result
        ..add('creationDate_MAX_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_LT;
    if (value != null) {
      result
        ..add('creationDate_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_LT;
    if (value != null) {
      result
        ..add('creationDate_MIN_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_LT;
    if (value != null) {
      result
        ..add('creationDate_MAX_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_LTE;
    if (value != null) {
      result
        ..add('creationDate_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_LTE;
    if (value != null) {
      result
        ..add('creationDate_MIN_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_LTE;
    if (value != null) {
      result
        ..add('creationDate_MAX_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_EQUAL;
    if (value != null) {
      result
        ..add('modifiedDate_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_EQUAL;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_EQUAL;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_GT;
    if (value != null) {
      result
        ..add('modifiedDate_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_GT;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_GT;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_LT;
    if (value != null) {
      result
        ..add('modifiedDate_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_LT;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_LT;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GPageBelongsToNodeAggregationWhereInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToNodeAggregationWhereInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageBelongsToNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageBelongsToNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'id_EQUAL':
          result.id_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_EQUAL':
          result.title_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_AVERAGE_EQUAL':
          result.title_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_EQUAL':
          result.title_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_EQUAL':
          result.title_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GT':
          result.title_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GT':
          result.title_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GT':
          result.title_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GT':
          result.title_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GTE':
          result.title_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GTE':
          result.title_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GTE':
          result.title_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GTE':
          result.title_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LT':
          result.title_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LT':
          result.title_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LT':
          result.title_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LT':
          result.title_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LTE':
          result.title_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LTE':
          result.title_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LTE':
          result.title_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LTE':
          result.title_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_EQUAL':
          result.description_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_AVERAGE_EQUAL':
          result.description_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_EQUAL':
          result.description_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_EQUAL':
          result.description_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GT':
          result.description_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GT':
          result.description_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GT':
          result.description_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GT':
          result.description_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GTE':
          result.description_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GTE':
          result.description_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GTE':
          result.description_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GTE':
          result.description_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LT':
          result.description_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LT':
          result.description_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LT':
          result.description_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LT':
          result.description_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LTE':
          result.description_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LTE':
          result.description_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LTE':
          result.description_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LTE':
          result.description_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'creationDate_EQUAL':
          result.creationDate_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_EQUAL':
          result.creationDate_MIN_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_EQUAL':
          result.creationDate_MAX_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_GT':
          result.creationDate_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_GT':
          result.creationDate_MIN_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_GT':
          result.creationDate_MAX_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_GTE':
          result.creationDate_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_GTE':
          result.creationDate_MIN_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_GTE':
          result.creationDate_MAX_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_LT':
          result.creationDate_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_LT':
          result.creationDate_MIN_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_LT':
          result.creationDate_MAX_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_LTE':
          result.creationDate_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_LTE':
          result.creationDate_MIN_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_LTE':
          result.creationDate_MAX_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_EQUAL':
          result.modifiedDate_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_EQUAL':
          result.modifiedDate_MIN_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_EQUAL':
          result.modifiedDate_MAX_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_GT':
          result.modifiedDate_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_GT':
          result.modifiedDate_MIN_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_GT':
          result.modifiedDate_MAX_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_GTE':
          result.modifiedDate_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_GTE':
          result.modifiedDate_MIN_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_GTE':
          result.modifiedDate_MAX_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_LT':
          result.modifiedDate_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_LT':
          result.modifiedDate_MIN_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_LT':
          result.modifiedDate_MAX_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_LTE':
          result.modifiedDate_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_LTE':
          result.modifiedDate_MIN_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_LTE':
          result.modifiedDate_MAX_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToUpdateConnectionInputSerializer
    implements StructuredSerializer<GPageBelongsToUpdateConnectionInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToUpdateConnectionInput,
    _$GPageBelongsToUpdateConnectionInput
  ];
  @override
  final String wireName = 'GPageBelongsToUpdateConnectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToUpdateConnectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectUpdateInput)));
    }
    return result;
  }

  @override
  GPageBelongsToUpdateConnectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToUpdateConnectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectUpdateInput))!
              as GProjectUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageBelongsToUpdateFieldInputSerializer
    implements StructuredSerializer<GPageBelongsToUpdateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageBelongsToUpdateFieldInput,
    _$GPageBelongsToUpdateFieldInput
  ];
  @override
  final String wireName = 'GPageBelongsToUpdateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageBelongsToUpdateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectionWhere)));
    }
    value = object.Gupdate;
    if (value != null) {
      result
        ..add('update')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageBelongsToUpdateConnectionInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectFieldInput)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToDisconnectFieldInput)));
    }
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToCreateFieldInput)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToDeleteFieldInput)));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageBelongsToConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GPageBelongsToUpdateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageBelongsToUpdateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToConnectionWhere))!
              as GPageBelongsToConnectionWhere);
          break;
        case 'update':
          result.Gupdate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToUpdateConnectionInput))!
              as GPageBelongsToUpdateConnectionInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToConnectFieldInput))!
              as GPageBelongsToConnectFieldInput);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToDisconnectFieldInput))!
              as GPageBelongsToDisconnectFieldInput);
          break;
        case 'create':
          result.create.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToCreateFieldInput))!
              as GPageBelongsToCreateFieldInput);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToDeleteFieldInput))!
              as GPageBelongsToDeleteFieldInput);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToConnectOrCreateFieldInput))!
              as GPageBelongsToConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageConnectInputSerializer
    implements StructuredSerializer<GPageConnectInput> {
  @override
  final Iterable<Type> types = const [GPageConnectInput, _$GPageConnectInput];
  @override
  final String wireName = 'GPageConnectInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageConnectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesConnectFieldInput)])));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectFieldInput)));
    }
    return result;
  }

  @override
  GPageConnectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageConnectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectFieldInput))!
              as GPageParentPageConnectFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToConnectFieldInput))!
              as GPageBelongsToConnectFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageConnectOrCreateInputSerializer
    implements StructuredSerializer<GPageConnectOrCreateInput> {
  @override
  final Iterable<Type> types = const [
    GPageConnectOrCreateInput,
    _$GPageConnectOrCreateInput
  ];
  @override
  final String wireName = 'GPageConnectOrCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageConnectOrCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageSubPagesConnectOrCreateFieldInput)
            ])));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageConnectOrCreateFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageBelongsToConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GPageConnectOrCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageConnectOrCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectOrCreateFieldInput))!
              as GPageParentPageConnectOrCreateFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToConnectOrCreateFieldInput))!
              as GPageBelongsToConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageConnectOrCreateWhereSerializer
    implements StructuredSerializer<GPageConnectOrCreateWhere> {
  @override
  final Iterable<Type> types = const [
    GPageConnectOrCreateWhere,
    _$GPageConnectOrCreateWhere
  ];
  @override
  final String wireName = 'GPageConnectOrCreateWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageConnectOrCreateWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageUniqueWhere)),
    ];

    return result;
  }

  @override
  GPageConnectOrCreateWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageConnectOrCreateWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageUniqueWhere))!
              as GPageUniqueWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageConnectWhereSerializer
    implements StructuredSerializer<GPageConnectWhere> {
  @override
  final Iterable<Type> types = const [GPageConnectWhere, _$GPageConnectWhere];
  @override
  final String wireName = 'GPageConnectWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageConnectWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageWhere)),
    ];

    return result;
  }

  @override
  GPageConnectWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageConnectWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageCreateInputSerializer
    implements StructuredSerializer<GPageCreateInput> {
  @override
  final Iterable<Type> types = const [GPageCreateInput, _$GPageCreateInput];
  @override
  final String wireName = 'GPageCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'layout',
      serializers.serialize(object.layout,
          specifiedType: const FullType(String)),
      'orderNumber',
      serializers.serialize(object.orderNumber,
          specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesFieldInput)));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToFieldInput)));
    }
    return result;
  }

  @override
  GPageCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout':
          result.layout = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'orderNumber':
          result.orderNumber = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesFieldInput))!
              as GPageSubPagesFieldInput);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageParentPageFieldInput))!
              as GPageParentPageFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToFieldInput))!
              as GPageBelongsToFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageDeleteInputSerializer
    implements StructuredSerializer<GPageDeleteInput> {
  @override
  final Iterable<Type> types = const [GPageDeleteInput, _$GPageDeleteInput];
  @override
  final String wireName = 'GPageDeleteInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesDeleteFieldInput)])));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageDeleteFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToDeleteFieldInput)));
    }
    return result;
  }

  @override
  GPageDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesDeleteFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageDeleteFieldInput))!
              as GPageParentPageDeleteFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToDeleteFieldInput))!
              as GPageBelongsToDeleteFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageDisconnectInputSerializer
    implements StructuredSerializer<GPageDisconnectInput> {
  @override
  final Iterable<Type> types = const [
    GPageDisconnectInput,
    _$GPageDisconnectInput
  ];
  @override
  final String wireName = 'GPageDisconnectInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageDisconnectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesDisconnectFieldInput)])));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageDisconnectFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToDisconnectFieldInput)));
    }
    return result;
  }

  @override
  GPageDisconnectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageDisconnectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesDisconnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageDisconnectFieldInput))!
              as GPageParentPageDisconnectFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToDisconnectFieldInput))!
              as GPageBelongsToDisconnectFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageOnCreateInputSerializer
    implements StructuredSerializer<GPageOnCreateInput> {
  @override
  final Iterable<Type> types = const [GPageOnCreateInput, _$GPageOnCreateInput];
  @override
  final String wireName = 'GPageOnCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageOnCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'layout',
      serializers.serialize(object.layout,
          specifiedType: const FullType(String)),
      'orderNumber',
      serializers.serialize(object.orderNumber,
          specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPageOnCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageOnCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout':
          result.layout = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'orderNumber':
          result.orderNumber = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageOptionsSerializer implements StructuredSerializer<GPageOptions> {
  @override
  final Iterable<Type> types = const [GPageOptions, _$GPageOptions];
  @override
  final String wireName = 'GPageOptions';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageOptions object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sort;
    if (value != null) {
      result
        ..add('sort')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GPageSort)])));
    }
    value = object.limit;
    if (value != null) {
      result
        ..add('limit')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.offset;
    if (value != null) {
      result
        ..add('offset')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPageOptions deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageOptionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sort':
          result.sort.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPageSort)]))!
              as BuiltList<Object?>);
          break;
        case 'limit':
          result.limit = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'offset':
          result.offset = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageAggregateInputSerializer
    implements StructuredSerializer<GPageParentPageAggregateInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageAggregateInput,
    _$GPageParentPageAggregateInput
  ];
  @override
  final String wireName = 'GPageParentPageAggregateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageAggregateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LT;
    if (value != null) {
      result
        ..add('count_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LTE;
    if (value != null) {
      result
        ..add('count_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GT;
    if (value != null) {
      result
        ..add('count_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GTE;
    if (value != null) {
      result
        ..add('count_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageParentPageAggregateInput)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageParentPageAggregateInput)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageNodeAggregationWhereInput)));
    }
    return result;
  }

  @override
  GPageParentPageAggregateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageAggregateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LT':
          result.count_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LTE':
          result.count_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GT':
          result.count_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GTE':
          result.count_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageParentPageAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageParentPageAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageNodeAggregationWhereInput))!
              as GPageParentPageNodeAggregationWhereInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageConnectFieldInputSerializer
    implements StructuredSerializer<GPageParentPageConnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageConnectFieldInput,
    _$GPageParentPageConnectFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageConnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageConnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageConnectWhere)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageConnectInput)));
    }
    return result;
  }

  @override
  GPageParentPageConnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageConnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectWhere))!
              as GPageConnectWhere);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectInput))!
              as GPageConnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageConnectionSortSerializer
    implements StructuredSerializer<GPageParentPageConnectionSort> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageConnectionSort,
    _$GPageParentPageConnectionSort
  ];
  @override
  final String wireName = 'GPageParentPageConnectionSort';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageConnectionSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSort)));
    }
    return result;
  }

  @override
  GPageParentPageConnectionSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageConnectionSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageSort))! as GPageSort);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageConnectionWhereSerializer
    implements StructuredSerializer<GPageParentPageConnectionWhere> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageConnectionWhere,
    _$GPageParentPageConnectionWhere
  ];
  @override
  final String wireName = 'GPageParentPageConnectionWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageConnectionWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageParentPageConnectionWhere)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageParentPageConnectionWhere)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.node_NOT;
    if (value != null) {
      result
        ..add('node_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    return result;
  }

  @override
  GPageParentPageConnectionWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageConnectionWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageParentPageConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageParentPageConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'node_NOT':
          result.node_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageConnectOrCreateFieldInputSerializer
    implements StructuredSerializer<GPageParentPageConnectOrCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageConnectOrCreateFieldInput,
    _$GPageParentPageConnectOrCreateFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageConnectOrCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageConnectOrCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GPageConnectOrCreateWhere)),
      'onCreate',
      serializers.serialize(object.onCreate,
          specifiedType:
              const FullType(GPageParentPageConnectOrCreateFieldInputOnCreate)),
    ];

    return result;
  }

  @override
  GPageParentPageConnectOrCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageConnectOrCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectOrCreateWhere))!
              as GPageConnectOrCreateWhere);
          break;
        case 'onCreate':
          result.onCreate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GPageParentPageConnectOrCreateFieldInputOnCreate))!
              as GPageParentPageConnectOrCreateFieldInputOnCreate);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageConnectOrCreateFieldInputOnCreateSerializer
    implements
        StructuredSerializer<GPageParentPageConnectOrCreateFieldInputOnCreate> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageConnectOrCreateFieldInputOnCreate,
    _$GPageParentPageConnectOrCreateFieldInputOnCreate
  ];
  @override
  final String wireName = 'GPageParentPageConnectOrCreateFieldInputOnCreate';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GPageParentPageConnectOrCreateFieldInputOnCreate object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageOnCreateInput)),
    ];

    return result;
  }

  @override
  GPageParentPageConnectOrCreateFieldInputOnCreate deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result =
        new GPageParentPageConnectOrCreateFieldInputOnCreateBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageOnCreateInput))!
              as GPageOnCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageCreateFieldInputSerializer
    implements StructuredSerializer<GPageParentPageCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageCreateFieldInput,
    _$GPageParentPageCreateFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageCreateInput)),
    ];

    return result;
  }

  @override
  GPageParentPageCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageCreateInput))!
              as GPageCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageDeleteFieldInputSerializer
    implements StructuredSerializer<GPageParentPageDeleteFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageDeleteFieldInput,
    _$GPageParentPageDeleteFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageDeleteFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageDeleteFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectionWhere)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageDeleteInput)));
    }
    return result;
  }

  @override
  GPageParentPageDeleteFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageDeleteFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectionWhere))!
              as GPageParentPageConnectionWhere);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageDeleteInput))!
              as GPageDeleteInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageDisconnectFieldInputSerializer
    implements StructuredSerializer<GPageParentPageDisconnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageDisconnectFieldInput,
    _$GPageParentPageDisconnectFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageDisconnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageDisconnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectionWhere)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageDisconnectInput)));
    }
    return result;
  }

  @override
  GPageParentPageDisconnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageDisconnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectionWhere))!
              as GPageParentPageConnectionWhere);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageDisconnectInput))!
              as GPageDisconnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageFieldInputSerializer
    implements StructuredSerializer<GPageParentPageFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageFieldInput,
    _$GPageParentPageFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageCreateFieldInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectFieldInput)));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GPageParentPageFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'create':
          result.create.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageCreateFieldInput))!
              as GPageParentPageCreateFieldInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectFieldInput))!
              as GPageParentPageConnectFieldInput);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectOrCreateFieldInput))!
              as GPageParentPageConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageNodeAggregationWhereInputSerializer
    implements StructuredSerializer<GPageParentPageNodeAggregationWhereInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageNodeAggregationWhereInput,
    _$GPageParentPageNodeAggregationWhereInput
  ];
  @override
  final String wireName = 'GPageParentPageNodeAggregationWhereInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageNodeAggregationWhereInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageParentPageNodeAggregationWhereInput)
            ])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageParentPageNodeAggregationWhereInput)
            ])));
    }
    value = object.id_EQUAL;
    if (value != null) {
      result
        ..add('id_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_EQUAL;
    if (value != null) {
      result
        ..add('title_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('title_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('title_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('title_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GT;
    if (value != null) {
      result
        ..add('title_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GT;
    if (value != null) {
      result
        ..add('title_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GT;
    if (value != null) {
      result
        ..add('title_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GT;
    if (value != null) {
      result
        ..add('title_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GTE;
    if (value != null) {
      result
        ..add('title_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GTE;
    if (value != null) {
      result
        ..add('title_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LT;
    if (value != null) {
      result
        ..add('title_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LT;
    if (value != null) {
      result
        ..add('title_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LT;
    if (value != null) {
      result
        ..add('title_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LT;
    if (value != null) {
      result
        ..add('title_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LTE;
    if (value != null) {
      result
        ..add('title_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LTE;
    if (value != null) {
      result
        ..add('title_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_EQUAL;
    if (value != null) {
      result
        ..add('description_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('description_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('description_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('description_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GT;
    if (value != null) {
      result
        ..add('description_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GT;
    if (value != null) {
      result
        ..add('description_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GT;
    if (value != null) {
      result
        ..add('description_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GT;
    if (value != null) {
      result
        ..add('description_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GTE;
    if (value != null) {
      result
        ..add('description_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GTE;
    if (value != null) {
      result
        ..add('description_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LT;
    if (value != null) {
      result
        ..add('description_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LT;
    if (value != null) {
      result
        ..add('description_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LT;
    if (value != null) {
      result
        ..add('description_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LT;
    if (value != null) {
      result
        ..add('description_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LTE;
    if (value != null) {
      result
        ..add('description_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LTE;
    if (value != null) {
      result
        ..add('description_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_EQUAL;
    if (value != null) {
      result
        ..add('layout_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('layout_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('layout_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('layout_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_GT;
    if (value != null) {
      result
        ..add('layout_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_GT;
    if (value != null) {
      result
        ..add('layout_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_GT;
    if (value != null) {
      result
        ..add('layout_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_GT;
    if (value != null) {
      result
        ..add('layout_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_GTE;
    if (value != null) {
      result
        ..add('layout_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('layout_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_GTE;
    if (value != null) {
      result
        ..add('layout_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('layout_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_LT;
    if (value != null) {
      result
        ..add('layout_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_LT;
    if (value != null) {
      result
        ..add('layout_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_LT;
    if (value != null) {
      result
        ..add('layout_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_LT;
    if (value != null) {
      result
        ..add('layout_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_LTE;
    if (value != null) {
      result
        ..add('layout_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('layout_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_LTE;
    if (value != null) {
      result
        ..add('layout_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('layout_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_MIN_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_MAX_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_SUM_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GT;
    if (value != null) {
      result
        ..add('orderNumber_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_GT;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_GT;
    if (value != null) {
      result
        ..add('orderNumber_MIN_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_GT;
    if (value != null) {
      result
        ..add('orderNumber_MAX_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_GT;
    if (value != null) {
      result
        ..add('orderNumber_SUM_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GTE;
    if (value != null) {
      result
        ..add('orderNumber_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_GTE;
    if (value != null) {
      result
        ..add('orderNumber_MIN_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_GTE;
    if (value != null) {
      result
        ..add('orderNumber_MAX_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_GTE;
    if (value != null) {
      result
        ..add('orderNumber_SUM_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LT;
    if (value != null) {
      result
        ..add('orderNumber_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_LT;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_LT;
    if (value != null) {
      result
        ..add('orderNumber_MIN_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_LT;
    if (value != null) {
      result
        ..add('orderNumber_MAX_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_LT;
    if (value != null) {
      result
        ..add('orderNumber_SUM_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LTE;
    if (value != null) {
      result
        ..add('orderNumber_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_LTE;
    if (value != null) {
      result
        ..add('orderNumber_MIN_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_LTE;
    if (value != null) {
      result
        ..add('orderNumber_MAX_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_LTE;
    if (value != null) {
      result
        ..add('orderNumber_SUM_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPageParentPageNodeAggregationWhereInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageNodeAggregationWhereInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageParentPageNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageParentPageNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'id_EQUAL':
          result.id_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_EQUAL':
          result.title_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_AVERAGE_EQUAL':
          result.title_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_EQUAL':
          result.title_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_EQUAL':
          result.title_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GT':
          result.title_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GT':
          result.title_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GT':
          result.title_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GT':
          result.title_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GTE':
          result.title_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GTE':
          result.title_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GTE':
          result.title_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GTE':
          result.title_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LT':
          result.title_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LT':
          result.title_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LT':
          result.title_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LT':
          result.title_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LTE':
          result.title_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LTE':
          result.title_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LTE':
          result.title_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LTE':
          result.title_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_EQUAL':
          result.description_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_AVERAGE_EQUAL':
          result.description_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_EQUAL':
          result.description_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_EQUAL':
          result.description_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GT':
          result.description_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GT':
          result.description_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GT':
          result.description_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GT':
          result.description_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GTE':
          result.description_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GTE':
          result.description_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GTE':
          result.description_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GTE':
          result.description_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LT':
          result.description_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LT':
          result.description_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LT':
          result.description_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LT':
          result.description_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LTE':
          result.description_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LTE':
          result.description_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LTE':
          result.description_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LTE':
          result.description_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_EQUAL':
          result.layout_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_AVERAGE_EQUAL':
          result.layout_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_EQUAL':
          result.layout_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_EQUAL':
          result.layout_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_GT':
          result.layout_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_GT':
          result.layout_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_GT':
          result.layout_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_GT':
          result.layout_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_GTE':
          result.layout_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_GTE':
          result.layout_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_GTE':
          result.layout_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_GTE':
          result.layout_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_LT':
          result.layout_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_LT':
          result.layout_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_LT':
          result.layout_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_LT':
          result.layout_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_LTE':
          result.layout_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_LTE':
          result.layout_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_LTE':
          result.layout_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_LTE':
          result.layout_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_EQUAL':
          result.orderNumber_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_EQUAL':
          result.orderNumber_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_EQUAL':
          result.orderNumber_MIN_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_EQUAL':
          result.orderNumber_MAX_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_EQUAL':
          result.orderNumber_SUM_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GT':
          result.orderNumber_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_GT':
          result.orderNumber_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_GT':
          result.orderNumber_MIN_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_GT':
          result.orderNumber_MAX_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_GT':
          result.orderNumber_SUM_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GTE':
          result.orderNumber_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_GTE':
          result.orderNumber_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_GTE':
          result.orderNumber_MIN_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_GTE':
          result.orderNumber_MAX_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_GTE':
          result.orderNumber_SUM_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LT':
          result.orderNumber_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_LT':
          result.orderNumber_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_LT':
          result.orderNumber_MIN_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_LT':
          result.orderNumber_MAX_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_LT':
          result.orderNumber_SUM_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LTE':
          result.orderNumber_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_LTE':
          result.orderNumber_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_LTE':
          result.orderNumber_MIN_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_LTE':
          result.orderNumber_MAX_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_LTE':
          result.orderNumber_SUM_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageUpdateConnectionInputSerializer
    implements StructuredSerializer<GPageParentPageUpdateConnectionInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageUpdateConnectionInput,
    _$GPageParentPageUpdateConnectionInput
  ];
  @override
  final String wireName = 'GPageParentPageUpdateConnectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageUpdateConnectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageUpdateInput)));
    }
    return result;
  }

  @override
  GPageParentPageUpdateConnectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageUpdateConnectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageUpdateInput))!
              as GPageUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageParentPageUpdateFieldInputSerializer
    implements StructuredSerializer<GPageParentPageUpdateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageParentPageUpdateFieldInput,
    _$GPageParentPageUpdateFieldInput
  ];
  @override
  final String wireName = 'GPageParentPageUpdateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageParentPageUpdateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectionWhere)));
    }
    value = object.Gupdate;
    if (value != null) {
      result
        ..add('update')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageUpdateConnectionInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectFieldInput)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageDisconnectFieldInput)));
    }
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageCreateFieldInput)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageDeleteFieldInput)));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageParentPageConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GPageParentPageUpdateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageParentPageUpdateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectionWhere))!
              as GPageParentPageConnectionWhere);
          break;
        case 'update':
          result.Gupdate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageUpdateConnectionInput))!
              as GPageParentPageUpdateConnectionInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectFieldInput))!
              as GPageParentPageConnectFieldInput);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageDisconnectFieldInput))!
              as GPageParentPageDisconnectFieldInput);
          break;
        case 'create':
          result.create.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageCreateFieldInput))!
              as GPageParentPageCreateFieldInput);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageDeleteFieldInput))!
              as GPageParentPageDeleteFieldInput);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectOrCreateFieldInput))!
              as GPageParentPageConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageRelationInputSerializer
    implements StructuredSerializer<GPageRelationInput> {
  @override
  final Iterable<Type> types = const [GPageRelationInput, _$GPageRelationInput];
  @override
  final String wireName = 'GPageRelationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageRelationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesCreateFieldInput)])));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageCreateFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToCreateFieldInput)));
    }
    return result;
  }

  @override
  GPageRelationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageRelationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageCreateFieldInput))!
              as GPageParentPageCreateFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToCreateFieldInput))!
              as GPageBelongsToCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSortSerializer implements StructuredSerializer<GPageSort> {
  @override
  final Iterable<Type> types = const [GPageSort, _$GPageSort];
  @override
  final String wireName = 'GPageSort';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.layout;
    if (value != null) {
      result
        ..add('layout')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.orderNumber;
    if (value != null) {
      result
        ..add('orderNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    return result;
  }

  @override
  GPageSort deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'layout':
          result.layout = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'orderNumber':
          result.orderNumber = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesAggregateInputSerializer
    implements StructuredSerializer<GPageSubPagesAggregateInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesAggregateInput,
    _$GPageSubPagesAggregateInput
  ];
  @override
  final String wireName = 'GPageSubPagesAggregateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesAggregateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LT;
    if (value != null) {
      result
        ..add('count_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LTE;
    if (value != null) {
      result
        ..add('count_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GT;
    if (value != null) {
      result
        ..add('count_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GTE;
    if (value != null) {
      result
        ..add('count_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesAggregateInput)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesAggregateInput)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GPageSubPagesNodeAggregationWhereInput)));
    }
    return result;
  }

  @override
  GPageSubPagesAggregateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesAggregateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LT':
          result.count_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LTE':
          result.count_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GT':
          result.count_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GTE':
          result.count_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageSubPagesNodeAggregationWhereInput))!
              as GPageSubPagesNodeAggregationWhereInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesConnectFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesConnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesConnectFieldInput,
    _$GPageSubPagesConnectFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesConnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesConnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageConnectWhere)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPageConnectInput)])));
    }
    return result;
  }

  @override
  GPageSubPagesConnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesConnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectWhere))!
              as GPageConnectWhere);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPageConnectInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesConnectionSortSerializer
    implements StructuredSerializer<GPageSubPagesConnectionSort> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesConnectionSort,
    _$GPageSubPagesConnectionSort
  ];
  @override
  final String wireName = 'GPageSubPagesConnectionSort';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesConnectionSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSort)));
    }
    return result;
  }

  @override
  GPageSubPagesConnectionSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesConnectionSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageSort))! as GPageSort);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesConnectionWhereSerializer
    implements StructuredSerializer<GPageSubPagesConnectionWhere> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesConnectionWhere,
    _$GPageSubPagesConnectionWhere
  ];
  @override
  final String wireName = 'GPageSubPagesConnectionWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesConnectionWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesConnectionWhere)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesConnectionWhere)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.node_NOT;
    if (value != null) {
      result
        ..add('node_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    return result;
  }

  @override
  GPageSubPagesConnectionWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesConnectionWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'node_NOT':
          result.node_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesConnectOrCreateFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesConnectOrCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesConnectOrCreateFieldInput,
    _$GPageSubPagesConnectOrCreateFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesConnectOrCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesConnectOrCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GPageConnectOrCreateWhere)),
      'onCreate',
      serializers.serialize(object.onCreate,
          specifiedType:
              const FullType(GPageSubPagesConnectOrCreateFieldInputOnCreate)),
    ];

    return result;
  }

  @override
  GPageSubPagesConnectOrCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesConnectOrCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectOrCreateWhere))!
              as GPageConnectOrCreateWhere);
          break;
        case 'onCreate':
          result.onCreate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GPageSubPagesConnectOrCreateFieldInputOnCreate))!
              as GPageSubPagesConnectOrCreateFieldInputOnCreate);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesConnectOrCreateFieldInputOnCreateSerializer
    implements
        StructuredSerializer<GPageSubPagesConnectOrCreateFieldInputOnCreate> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesConnectOrCreateFieldInputOnCreate,
    _$GPageSubPagesConnectOrCreateFieldInputOnCreate
  ];
  @override
  final String wireName = 'GPageSubPagesConnectOrCreateFieldInputOnCreate';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GPageSubPagesConnectOrCreateFieldInputOnCreate object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageOnCreateInput)),
    ];

    return result;
  }

  @override
  GPageSubPagesConnectOrCreateFieldInputOnCreate deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageOnCreateInput))!
              as GPageOnCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesCreateFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesCreateFieldInput,
    _$GPageSubPagesCreateFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageCreateInput)),
    ];

    return result;
  }

  @override
  GPageSubPagesCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageCreateInput))!
              as GPageCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesDeleteFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesDeleteFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesDeleteFieldInput,
    _$GPageSubPagesDeleteFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesDeleteFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesDeleteFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageDeleteInput)));
    }
    return result;
  }

  @override
  GPageSubPagesDeleteFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesDeleteFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageDeleteInput))!
              as GPageDeleteInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesDisconnectFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesDisconnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesDisconnectFieldInput,
    _$GPageSubPagesDisconnectFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesDisconnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesDisconnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageDisconnectInput)));
    }
    return result;
  }

  @override
  GPageSubPagesDisconnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesDisconnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageDisconnectInput))!
              as GPageDisconnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesFieldInput,
    _$GPageSubPagesFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesCreateFieldInput)])));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesConnectFieldInput)])));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageSubPagesConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GPageSubPagesFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'create':
          result.create.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesNodeAggregationWhereInputSerializer
    implements StructuredSerializer<GPageSubPagesNodeAggregationWhereInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesNodeAggregationWhereInput,
    _$GPageSubPagesNodeAggregationWhereInput
  ];
  @override
  final String wireName = 'GPageSubPagesNodeAggregationWhereInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesNodeAggregationWhereInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageSubPagesNodeAggregationWhereInput)
            ])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageSubPagesNodeAggregationWhereInput)
            ])));
    }
    value = object.id_EQUAL;
    if (value != null) {
      result
        ..add('id_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_EQUAL;
    if (value != null) {
      result
        ..add('title_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('title_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('title_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('title_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GT;
    if (value != null) {
      result
        ..add('title_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GT;
    if (value != null) {
      result
        ..add('title_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GT;
    if (value != null) {
      result
        ..add('title_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GT;
    if (value != null) {
      result
        ..add('title_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GTE;
    if (value != null) {
      result
        ..add('title_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GTE;
    if (value != null) {
      result
        ..add('title_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LT;
    if (value != null) {
      result
        ..add('title_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LT;
    if (value != null) {
      result
        ..add('title_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LT;
    if (value != null) {
      result
        ..add('title_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LT;
    if (value != null) {
      result
        ..add('title_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LTE;
    if (value != null) {
      result
        ..add('title_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LTE;
    if (value != null) {
      result
        ..add('title_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_EQUAL;
    if (value != null) {
      result
        ..add('description_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('description_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('description_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('description_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GT;
    if (value != null) {
      result
        ..add('description_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GT;
    if (value != null) {
      result
        ..add('description_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GT;
    if (value != null) {
      result
        ..add('description_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GT;
    if (value != null) {
      result
        ..add('description_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GTE;
    if (value != null) {
      result
        ..add('description_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GTE;
    if (value != null) {
      result
        ..add('description_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LT;
    if (value != null) {
      result
        ..add('description_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LT;
    if (value != null) {
      result
        ..add('description_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LT;
    if (value != null) {
      result
        ..add('description_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LT;
    if (value != null) {
      result
        ..add('description_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LTE;
    if (value != null) {
      result
        ..add('description_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LTE;
    if (value != null) {
      result
        ..add('description_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_EQUAL;
    if (value != null) {
      result
        ..add('layout_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('layout_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('layout_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('layout_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_GT;
    if (value != null) {
      result
        ..add('layout_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_GT;
    if (value != null) {
      result
        ..add('layout_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_GT;
    if (value != null) {
      result
        ..add('layout_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_GT;
    if (value != null) {
      result
        ..add('layout_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_GTE;
    if (value != null) {
      result
        ..add('layout_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('layout_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_GTE;
    if (value != null) {
      result
        ..add('layout_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('layout_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_LT;
    if (value != null) {
      result
        ..add('layout_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_LT;
    if (value != null) {
      result
        ..add('layout_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_LT;
    if (value != null) {
      result
        ..add('layout_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_LT;
    if (value != null) {
      result
        ..add('layout_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_LTE;
    if (value != null) {
      result
        ..add('layout_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('layout_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_LTE;
    if (value != null) {
      result
        ..add('layout_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('layout_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_MIN_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_MAX_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_SUM_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GT;
    if (value != null) {
      result
        ..add('orderNumber_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_GT;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_GT;
    if (value != null) {
      result
        ..add('orderNumber_MIN_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_GT;
    if (value != null) {
      result
        ..add('orderNumber_MAX_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_GT;
    if (value != null) {
      result
        ..add('orderNumber_SUM_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GTE;
    if (value != null) {
      result
        ..add('orderNumber_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_GTE;
    if (value != null) {
      result
        ..add('orderNumber_MIN_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_GTE;
    if (value != null) {
      result
        ..add('orderNumber_MAX_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_GTE;
    if (value != null) {
      result
        ..add('orderNumber_SUM_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LT;
    if (value != null) {
      result
        ..add('orderNumber_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_LT;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_LT;
    if (value != null) {
      result
        ..add('orderNumber_MIN_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_LT;
    if (value != null) {
      result
        ..add('orderNumber_MAX_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_LT;
    if (value != null) {
      result
        ..add('orderNumber_SUM_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LTE;
    if (value != null) {
      result
        ..add('orderNumber_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_LTE;
    if (value != null) {
      result
        ..add('orderNumber_MIN_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_LTE;
    if (value != null) {
      result
        ..add('orderNumber_MAX_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_LTE;
    if (value != null) {
      result
        ..add('orderNumber_SUM_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPageSubPagesNodeAggregationWhereInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesNodeAggregationWhereInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'id_EQUAL':
          result.id_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_EQUAL':
          result.title_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_AVERAGE_EQUAL':
          result.title_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_EQUAL':
          result.title_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_EQUAL':
          result.title_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GT':
          result.title_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GT':
          result.title_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GT':
          result.title_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GT':
          result.title_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GTE':
          result.title_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GTE':
          result.title_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GTE':
          result.title_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GTE':
          result.title_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LT':
          result.title_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LT':
          result.title_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LT':
          result.title_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LT':
          result.title_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LTE':
          result.title_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LTE':
          result.title_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LTE':
          result.title_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LTE':
          result.title_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_EQUAL':
          result.description_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_AVERAGE_EQUAL':
          result.description_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_EQUAL':
          result.description_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_EQUAL':
          result.description_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GT':
          result.description_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GT':
          result.description_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GT':
          result.description_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GT':
          result.description_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GTE':
          result.description_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GTE':
          result.description_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GTE':
          result.description_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GTE':
          result.description_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LT':
          result.description_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LT':
          result.description_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LT':
          result.description_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LT':
          result.description_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LTE':
          result.description_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LTE':
          result.description_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LTE':
          result.description_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LTE':
          result.description_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_EQUAL':
          result.layout_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_AVERAGE_EQUAL':
          result.layout_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_EQUAL':
          result.layout_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_EQUAL':
          result.layout_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_GT':
          result.layout_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_GT':
          result.layout_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_GT':
          result.layout_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_GT':
          result.layout_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_GTE':
          result.layout_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_GTE':
          result.layout_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_GTE':
          result.layout_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_GTE':
          result.layout_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_LT':
          result.layout_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_LT':
          result.layout_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_LT':
          result.layout_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_LT':
          result.layout_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_LTE':
          result.layout_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_LTE':
          result.layout_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_LTE':
          result.layout_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_LTE':
          result.layout_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_EQUAL':
          result.orderNumber_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_EQUAL':
          result.orderNumber_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_EQUAL':
          result.orderNumber_MIN_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_EQUAL':
          result.orderNumber_MAX_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_EQUAL':
          result.orderNumber_SUM_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GT':
          result.orderNumber_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_GT':
          result.orderNumber_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_GT':
          result.orderNumber_MIN_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_GT':
          result.orderNumber_MAX_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_GT':
          result.orderNumber_SUM_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GTE':
          result.orderNumber_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_GTE':
          result.orderNumber_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_GTE':
          result.orderNumber_MIN_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_GTE':
          result.orderNumber_MAX_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_GTE':
          result.orderNumber_SUM_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LT':
          result.orderNumber_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_LT':
          result.orderNumber_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_LT':
          result.orderNumber_MIN_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_LT':
          result.orderNumber_MAX_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_LT':
          result.orderNumber_SUM_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LTE':
          result.orderNumber_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_LTE':
          result.orderNumber_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_LTE':
          result.orderNumber_MIN_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_LTE':
          result.orderNumber_MAX_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_LTE':
          result.orderNumber_SUM_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesUpdateConnectionInputSerializer
    implements StructuredSerializer<GPageSubPagesUpdateConnectionInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesUpdateConnectionInput,
    _$GPageSubPagesUpdateConnectionInput
  ];
  @override
  final String wireName = 'GPageSubPagesUpdateConnectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesUpdateConnectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageUpdateInput)));
    }
    return result;
  }

  @override
  GPageSubPagesUpdateConnectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesUpdateConnectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageUpdateInput))!
              as GPageUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSubPagesUpdateFieldInputSerializer
    implements StructuredSerializer<GPageSubPagesUpdateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GPageSubPagesUpdateFieldInput,
    _$GPageSubPagesUpdateFieldInput
  ];
  @override
  final String wireName = 'GPageSubPagesUpdateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageSubPagesUpdateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.Gupdate;
    if (value != null) {
      result
        ..add('update')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesUpdateConnectionInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesConnectFieldInput)])));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesDisconnectFieldInput)])));
    }
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesCreateFieldInput)])));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesDeleteFieldInput)])));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GPageSubPagesConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GPageSubPagesUpdateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSubPagesUpdateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'update':
          result.Gupdate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageSubPagesUpdateConnectionInput))!
              as GPageSubPagesUpdateConnectionInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesDisconnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'create':
          result.create.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesDeleteFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageUniqueWhereSerializer
    implements StructuredSerializer<GPageUniqueWhere> {
  @override
  final Iterable<Type> types = const [GPageUniqueWhere, _$GPageUniqueWhere];
  @override
  final String wireName = 'GPageUniqueWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageUniqueWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPageUniqueWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageUniqueWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageUpdateInputSerializer
    implements StructuredSerializer<GPageUpdateInput> {
  @override
  final Iterable<Type> types = const [GPageUpdateInput, _$GPageUpdateInput];
  @override
  final String wireName = 'GPageUpdateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout;
    if (value != null) {
      result
        ..add('layout')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.orderNumber;
    if (value != null) {
      result
        ..add('orderNumber')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_INCREMENT;
    if (value != null) {
      result
        ..add('orderNumber_INCREMENT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_DECREMENT;
    if (value != null) {
      result
        ..add('orderNumber_DECREMENT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.subPages;
    if (value != null) {
      result
        ..add('subPages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPageSubPagesUpdateFieldInput)])));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageUpdateFieldInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToUpdateFieldInput)));
    }
    return result;
  }

  @override
  GPageUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout':
          result.layout = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'orderNumber':
          result.orderNumber = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_INCREMENT':
          result.orderNumber_INCREMENT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_DECREMENT':
          result.orderNumber_DECREMENT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'subPages':
          result.subPages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPageSubPagesUpdateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageUpdateFieldInput))!
              as GPageParentPageUpdateFieldInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageBelongsToUpdateFieldInput))!
              as GPageBelongsToUpdateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageWhereSerializer implements StructuredSerializer<GPageWhere> {
  @override
  final Iterable<Type> types = const [GPageWhere, _$GPageWhere];
  @override
  final String wireName = 'GPageWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GPageWhere)])));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GPageWhere)])));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT;
    if (value != null) {
      result
        ..add('id_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_IN;
    if (value != null) {
      result
        ..add('id_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.id_NOT_IN;
    if (value != null) {
      result
        ..add('id_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.id_CONTAINS;
    if (value != null) {
      result
        ..add('id_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('id_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_STARTS_WITH;
    if (value != null) {
      result
        ..add('id_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('id_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_ENDS_WITH;
    if (value != null) {
      result
        ..add('id_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('id_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT;
    if (value != null) {
      result
        ..add('title_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_IN;
    if (value != null) {
      result
        ..add('title_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.title_NOT_IN;
    if (value != null) {
      result
        ..add('title_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.title_CONTAINS;
    if (value != null) {
      result
        ..add('title_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('title_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_STARTS_WITH;
    if (value != null) {
      result
        ..add('title_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('title_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_ENDS_WITH;
    if (value != null) {
      result
        ..add('title_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('title_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT;
    if (value != null) {
      result
        ..add('description_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_IN;
    if (value != null) {
      result
        ..add('description_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.description_NOT_IN;
    if (value != null) {
      result
        ..add('description_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.description_CONTAINS;
    if (value != null) {
      result
        ..add('description_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('description_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_STARTS_WITH;
    if (value != null) {
      result
        ..add('description_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('description_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_ENDS_WITH;
    if (value != null) {
      result
        ..add('description_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('description_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout;
    if (value != null) {
      result
        ..add('layout')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_NOT;
    if (value != null) {
      result
        ..add('layout_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_IN;
    if (value != null) {
      result
        ..add('layout_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.layout_NOT_IN;
    if (value != null) {
      result
        ..add('layout_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.layout_CONTAINS;
    if (value != null) {
      result
        ..add('layout_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('layout_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_STARTS_WITH;
    if (value != null) {
      result
        ..add('layout_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('layout_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_ENDS_WITH;
    if (value != null) {
      result
        ..add('layout_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('layout_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.orderNumber;
    if (value != null) {
      result
        ..add('orderNumber')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_NOT;
    if (value != null) {
      result
        ..add('orderNumber_NOT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_IN;
    if (value != null) {
      result
        ..add('orderNumber_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(int)])));
    }
    value = object.orderNumber_NOT_IN;
    if (value != null) {
      result
        ..add('orderNumber_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(int)])));
    }
    value = object.orderNumber_LT;
    if (value != null) {
      result
        ..add('orderNumber_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LTE;
    if (value != null) {
      result
        ..add('orderNumber_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GT;
    if (value != null) {
      result
        ..add('orderNumber_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GTE;
    if (value != null) {
      result
        ..add('orderNumber_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.subPagesAggregate;
    if (value != null) {
      result
        ..add('subPagesAggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesAggregateInput)));
    }
    value = object.subPages_ALL;
    if (value != null) {
      result
        ..add('subPages_ALL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.subPages_NONE;
    if (value != null) {
      result
        ..add('subPages_NONE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.subPages_SINGLE;
    if (value != null) {
      result
        ..add('subPages_SINGLE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.subPages_SOME;
    if (value != null) {
      result
        ..add('subPages_SOME')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.parentPage;
    if (value != null) {
      result
        ..add('parentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.parentPage_NOT;
    if (value != null) {
      result
        ..add('parentPage_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.parentPageAggregate;
    if (value != null) {
      result
        ..add('parentPageAggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageAggregateInput)));
    }
    value = object.belongsTo;
    if (value != null) {
      result
        ..add('belongsTo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.belongsTo_NOT;
    if (value != null) {
      result
        ..add('belongsTo_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.belongsToAggregate;
    if (value != null) {
      result
        ..add('belongsToAggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToAggregateInput)));
    }
    value = object.subPagesConnection_ALL;
    if (value != null) {
      result
        ..add('subPagesConnection_ALL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.subPagesConnection_NONE;
    if (value != null) {
      result
        ..add('subPagesConnection_NONE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.subPagesConnection_SINGLE;
    if (value != null) {
      result
        ..add('subPagesConnection_SINGLE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.subPagesConnection_SOME;
    if (value != null) {
      result
        ..add('subPagesConnection_SOME')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSubPagesConnectionWhere)));
    }
    value = object.parentPageConnection;
    if (value != null) {
      result
        ..add('parentPageConnection')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectionWhere)));
    }
    value = object.parentPageConnection_NOT;
    if (value != null) {
      result
        ..add('parentPageConnection_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageParentPageConnectionWhere)));
    }
    value = object.belongsToConnection;
    if (value != null) {
      result
        ..add('belongsToConnection')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectionWhere)));
    }
    value = object.belongsToConnection_NOT;
    if (value != null) {
      result
        ..add('belongsToConnection_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageBelongsToConnectionWhere)));
    }
    return result;
  }

  @override
  GPageWhere deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPageWhere)]))!
              as BuiltList<Object?>);
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPageWhere)]))!
              as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT':
          result.id_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_IN':
          result.id_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id_NOT_IN':
          result.id_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id_CONTAINS':
          result.id_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_CONTAINS':
          result.id_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_STARTS_WITH':
          result.id_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_STARTS_WITH':
          result.id_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_ENDS_WITH':
          result.id_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_ENDS_WITH':
          result.id_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT':
          result.title_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_IN':
          result.title_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'title_NOT_IN':
          result.title_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'title_CONTAINS':
          result.title_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT_CONTAINS':
          result.title_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_STARTS_WITH':
          result.title_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT_STARTS_WITH':
          result.title_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_ENDS_WITH':
          result.title_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT_ENDS_WITH':
          result.title_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT':
          result.description_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_IN':
          result.description_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'description_NOT_IN':
          result.description_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'description_CONTAINS':
          result.description_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT_CONTAINS':
          result.description_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_STARTS_WITH':
          result.description_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT_STARTS_WITH':
          result.description_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_ENDS_WITH':
          result.description_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT_ENDS_WITH':
          result.description_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout':
          result.layout = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_NOT':
          result.layout_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_IN':
          result.layout_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'layout_NOT_IN':
          result.layout_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'layout_CONTAINS':
          result.layout_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_NOT_CONTAINS':
          result.layout_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_STARTS_WITH':
          result.layout_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_NOT_STARTS_WITH':
          result.layout_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_ENDS_WITH':
          result.layout_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_NOT_ENDS_WITH':
          result.layout_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'orderNumber':
          result.orderNumber = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_NOT':
          result.orderNumber_NOT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_IN':
          result.orderNumber_IN.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(int)]))!
              as BuiltList<Object?>);
          break;
        case 'orderNumber_NOT_IN':
          result.orderNumber_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(int)]))!
              as BuiltList<Object?>);
          break;
        case 'orderNumber_LT':
          result.orderNumber_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LTE':
          result.orderNumber_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GT':
          result.orderNumber_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GTE':
          result.orderNumber_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'subPagesAggregate':
          result.subPagesAggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesAggregateInput))!
              as GPageSubPagesAggregateInput);
          break;
        case 'subPages_ALL':
          result.subPages_ALL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'subPages_NONE':
          result.subPages_NONE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'subPages_SINGLE':
          result.subPages_SINGLE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'subPages_SOME':
          result.subPages_SOME.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'parentPage':
          result.parentPage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'parentPage_NOT':
          result.parentPage_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'parentPageAggregate':
          result.parentPageAggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageParentPageAggregateInput))!
              as GPageParentPageAggregateInput);
          break;
        case 'belongsTo':
          result.belongsTo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'belongsTo_NOT':
          result.belongsTo_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'belongsToAggregate':
          result.belongsToAggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToAggregateInput))!
              as GPageBelongsToAggregateInput);
          break;
        case 'subPagesConnection_ALL':
          result.subPagesConnection_ALL.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'subPagesConnection_NONE':
          result.subPagesConnection_NONE.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'subPagesConnection_SINGLE':
          result.subPagesConnection_SINGLE.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'subPagesConnection_SOME':
          result.subPagesConnection_SOME.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageSubPagesConnectionWhere))!
              as GPageSubPagesConnectionWhere);
          break;
        case 'parentPageConnection':
          result.parentPageConnection.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectionWhere))!
              as GPageParentPageConnectionWhere);
          break;
        case 'parentPageConnection_NOT':
          result.parentPageConnection_NOT.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPageParentPageConnectionWhere))!
              as GPageParentPageConnectionWhere);
          break;
        case 'belongsToConnection':
          result.belongsToConnection.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToConnectionWhere))!
              as GPageBelongsToConnectionWhere);
          break;
        case 'belongsToConnection_NOT':
          result.belongsToConnection_NOT.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageBelongsToConnectionWhere))!
              as GPageBelongsToConnectionWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectConnectInputSerializer
    implements StructuredSerializer<GProjectConnectInput> {
  @override
  final Iterable<Type> types = const [
    GProjectConnectInput,
    _$GProjectConnectInput
  ];
  @override
  final String wireName = 'GProjectConnectInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectConnectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesConnectFieldInput)])));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectFieldInput)));
    }
    return result;
  }

  @override
  GProjectConnectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectConnectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerConnectFieldInput))!
              as GProjectOwnerConnectFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectConnectOrCreateInputSerializer
    implements StructuredSerializer<GProjectConnectOrCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectConnectOrCreateInput,
    _$GProjectConnectOrCreateInput
  ];
  @override
  final String wireName = 'GProjectConnectOrCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectConnectOrCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectPagesConnectOrCreateFieldInput)
            ])));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GProjectOwnerConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GProjectConnectOrCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectConnectOrCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerConnectOrCreateFieldInput))!
              as GProjectOwnerConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectConnectOrCreateWhereSerializer
    implements StructuredSerializer<GProjectConnectOrCreateWhere> {
  @override
  final Iterable<Type> types = const [
    GProjectConnectOrCreateWhere,
    _$GProjectConnectOrCreateWhere
  ];
  @override
  final String wireName = 'GProjectConnectOrCreateWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectConnectOrCreateWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GProjectUniqueWhere)),
    ];

    return result;
  }

  @override
  GProjectConnectOrCreateWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectConnectOrCreateWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectUniqueWhere))!
              as GProjectUniqueWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectConnectWhereSerializer
    implements StructuredSerializer<GProjectConnectWhere> {
  @override
  final Iterable<Type> types = const [
    GProjectConnectWhere,
    _$GProjectConnectWhere
  ];
  @override
  final String wireName = 'GProjectConnectWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectConnectWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GProjectWhere)),
    ];

    return result;
  }

  @override
  GProjectConnectWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectConnectWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectCreateInputSerializer
    implements StructuredSerializer<GProjectCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectCreateInput,
    _$GProjectCreateInput
  ];
  @override
  final String wireName = 'GProjectCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesFieldInput)));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerFieldInput)));
    }
    return result;
  }

  @override
  GProjectCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesFieldInput))!
              as GProjectPagesFieldInput);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerFieldInput))!
              as GProjectOwnerFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectDeleteInputSerializer
    implements StructuredSerializer<GProjectDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GProjectDeleteInput,
    _$GProjectDeleteInput
  ];
  @override
  final String wireName = 'GProjectDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesDeleteFieldInput)])));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerDeleteFieldInput)));
    }
    return result;
  }

  @override
  GProjectDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesDeleteFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerDeleteFieldInput))!
              as GProjectOwnerDeleteFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectDisconnectInputSerializer
    implements StructuredSerializer<GProjectDisconnectInput> {
  @override
  final Iterable<Type> types = const [
    GProjectDisconnectInput,
    _$GProjectDisconnectInput
  ];
  @override
  final String wireName = 'GProjectDisconnectInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectDisconnectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesDisconnectFieldInput)])));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerDisconnectFieldInput)));
    }
    return result;
  }

  @override
  GProjectDisconnectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectDisconnectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesDisconnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerDisconnectFieldInput))!
              as GProjectOwnerDisconnectFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOnCreateInputSerializer
    implements StructuredSerializer<GProjectOnCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOnCreateInput,
    _$GProjectOnCreateInput
  ];
  @override
  final String wireName = 'GProjectOnCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOnCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProjectOnCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOnCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOptionsSerializer
    implements StructuredSerializer<GProjectOptions> {
  @override
  final Iterable<Type> types = const [GProjectOptions, _$GProjectOptions];
  @override
  final String wireName = 'GProjectOptions';

  @override
  Iterable<Object?> serialize(Serializers serializers, GProjectOptions object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sort;
    if (value != null) {
      result
        ..add('sort')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GProjectSort)])));
    }
    value = object.limit;
    if (value != null) {
      result
        ..add('limit')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.offset;
    if (value != null) {
      result
        ..add('offset')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GProjectOptions deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOptionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sort':
          result.sort.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProjectSort)]))!
              as BuiltList<Object?>);
          break;
        case 'limit':
          result.limit = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'offset':
          result.offset = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerAggregateInputSerializer
    implements StructuredSerializer<GProjectOwnerAggregateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerAggregateInput,
    _$GProjectOwnerAggregateInput
  ];
  @override
  final String wireName = 'GProjectOwnerAggregateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerAggregateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LT;
    if (value != null) {
      result
        ..add('count_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LTE;
    if (value != null) {
      result
        ..add('count_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GT;
    if (value != null) {
      result
        ..add('count_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GTE;
    if (value != null) {
      result
        ..add('count_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectOwnerAggregateInput)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectOwnerAggregateInput)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GProjectOwnerNodeAggregationWhereInput)));
    }
    return result;
  }

  @override
  GProjectOwnerAggregateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerAggregateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LT':
          result.count_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LTE':
          result.count_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GT':
          result.count_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GTE':
          result.count_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectOwnerAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectOwnerAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerNodeAggregationWhereInput))!
              as GProjectOwnerNodeAggregationWhereInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerConnectFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerConnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerConnectFieldInput,
    _$GProjectOwnerConnectFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerConnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerConnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserConnectWhere)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserConnectInput)));
    }
    return result;
  }

  @override
  GProjectOwnerConnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerConnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserConnectWhere))!
              as GUserConnectWhere);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserConnectInput))!
              as GUserConnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerConnectionSortSerializer
    implements StructuredSerializer<GProjectOwnerConnectionSort> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerConnectionSort,
    _$GProjectOwnerConnectionSort
  ];
  @override
  final String wireName = 'GProjectOwnerConnectionSort';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerConnectionSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserSort)));
    }
    return result;
  }

  @override
  GProjectOwnerConnectionSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerConnectionSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserSort))! as GUserSort);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerConnectionWhereSerializer
    implements StructuredSerializer<GProjectOwnerConnectionWhere> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerConnectionWhere,
    _$GProjectOwnerConnectionWhere
  ];
  @override
  final String wireName = 'GProjectOwnerConnectionWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerConnectionWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectOwnerConnectionWhere)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectOwnerConnectionWhere)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserWhere)));
    }
    value = object.node_NOT;
    if (value != null) {
      result
        ..add('node_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserWhere)));
    }
    return result;
  }

  @override
  GProjectOwnerConnectionWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerConnectionWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectOwnerConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectOwnerConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserWhere))! as GUserWhere);
          break;
        case 'node_NOT':
          result.node_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserWhere))! as GUserWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerConnectOrCreateFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerConnectOrCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerConnectOrCreateFieldInput,
    _$GProjectOwnerConnectOrCreateFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerConnectOrCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerConnectOrCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GUserConnectOrCreateWhere)),
      'onCreate',
      serializers.serialize(object.onCreate,
          specifiedType:
              const FullType(GProjectOwnerConnectOrCreateFieldInputOnCreate)),
    ];

    return result;
  }

  @override
  GProjectOwnerConnectOrCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerConnectOrCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserConnectOrCreateWhere))!
              as GUserConnectOrCreateWhere);
          break;
        case 'onCreate':
          result.onCreate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GProjectOwnerConnectOrCreateFieldInputOnCreate))!
              as GProjectOwnerConnectOrCreateFieldInputOnCreate);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerConnectOrCreateFieldInputOnCreateSerializer
    implements
        StructuredSerializer<GProjectOwnerConnectOrCreateFieldInputOnCreate> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerConnectOrCreateFieldInputOnCreate,
    _$GProjectOwnerConnectOrCreateFieldInputOnCreate
  ];
  @override
  final String wireName = 'GProjectOwnerConnectOrCreateFieldInputOnCreate';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GProjectOwnerConnectOrCreateFieldInputOnCreate object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GUserOnCreateInput)),
    ];

    return result;
  }

  @override
  GProjectOwnerConnectOrCreateFieldInputOnCreate deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserOnCreateInput))!
              as GUserOnCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerCreateFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerCreateFieldInput,
    _$GProjectOwnerCreateFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GUserCreateInput)),
    ];

    return result;
  }

  @override
  GProjectOwnerCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserCreateInput))!
              as GUserCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerDeleteFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerDeleteFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerDeleteFieldInput,
    _$GProjectOwnerDeleteFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerDeleteFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerDeleteFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectionWhere)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserDeleteInput)));
    }
    return result;
  }

  @override
  GProjectOwnerDeleteFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerDeleteFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerConnectionWhere))!
              as GProjectOwnerConnectionWhere);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserDeleteInput))!
              as GUserDeleteInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerDisconnectFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerDisconnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerDisconnectFieldInput,
    _$GProjectOwnerDisconnectFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerDisconnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerDisconnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectionWhere)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserDisconnectInput)));
    }
    return result;
  }

  @override
  GProjectOwnerDisconnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerDisconnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerConnectionWhere))!
              as GProjectOwnerConnectionWhere);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserDisconnectInput))!
              as GUserDisconnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerFieldInput,
    _$GProjectOwnerFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerCreateFieldInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectFieldInput)));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GProjectOwnerConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GProjectOwnerFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'create':
          result.create.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerCreateFieldInput))!
              as GProjectOwnerCreateFieldInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerConnectFieldInput))!
              as GProjectOwnerConnectFieldInput);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerConnectOrCreateFieldInput))!
              as GProjectOwnerConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerNodeAggregationWhereInputSerializer
    implements StructuredSerializer<GProjectOwnerNodeAggregationWhereInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerNodeAggregationWhereInput,
    _$GProjectOwnerNodeAggregationWhereInput
  ];
  @override
  final String wireName = 'GProjectOwnerNodeAggregationWhereInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerNodeAggregationWhereInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectOwnerNodeAggregationWhereInput)
            ])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectOwnerNodeAggregationWhereInput)
            ])));
    }
    value = object.id_EQUAL;
    if (value != null) {
      result
        ..add('id_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_EQUAL;
    if (value != null) {
      result
        ..add('username_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('username_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.username_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('username_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('username_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_GT;
    if (value != null) {
      result
        ..add('username_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_AVERAGE_GT;
    if (value != null) {
      result
        ..add('username_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.username_LONGEST_GT;
    if (value != null) {
      result
        ..add('username_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_SHORTEST_GT;
    if (value != null) {
      result
        ..add('username_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_GTE;
    if (value != null) {
      result
        ..add('username_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('username_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.username_LONGEST_GTE;
    if (value != null) {
      result
        ..add('username_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('username_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_LT;
    if (value != null) {
      result
        ..add('username_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_AVERAGE_LT;
    if (value != null) {
      result
        ..add('username_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.username_LONGEST_LT;
    if (value != null) {
      result
        ..add('username_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_SHORTEST_LT;
    if (value != null) {
      result
        ..add('username_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_LTE;
    if (value != null) {
      result
        ..add('username_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('username_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.username_LONGEST_LTE;
    if (value != null) {
      result
        ..add('username_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.username_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('username_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_EQUAL;
    if (value != null) {
      result
        ..add('displayName_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('displayName_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.displayName_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('displayName_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('displayName_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_GT;
    if (value != null) {
      result
        ..add('displayName_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_AVERAGE_GT;
    if (value != null) {
      result
        ..add('displayName_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.displayName_LONGEST_GT;
    if (value != null) {
      result
        ..add('displayName_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_SHORTEST_GT;
    if (value != null) {
      result
        ..add('displayName_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_GTE;
    if (value != null) {
      result
        ..add('displayName_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('displayName_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.displayName_LONGEST_GTE;
    if (value != null) {
      result
        ..add('displayName_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('displayName_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_LT;
    if (value != null) {
      result
        ..add('displayName_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_AVERAGE_LT;
    if (value != null) {
      result
        ..add('displayName_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.displayName_LONGEST_LT;
    if (value != null) {
      result
        ..add('displayName_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_SHORTEST_LT;
    if (value != null) {
      result
        ..add('displayName_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_LTE;
    if (value != null) {
      result
        ..add('displayName_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('displayName_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.displayName_LONGEST_LTE;
    if (value != null) {
      result
        ..add('displayName_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.displayName_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('displayName_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GProjectOwnerNodeAggregationWhereInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerNodeAggregationWhereInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectOwnerNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectOwnerNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'id_EQUAL':
          result.id_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_EQUAL':
          result.username_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_AVERAGE_EQUAL':
          result.username_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'username_LONGEST_EQUAL':
          result.username_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_SHORTEST_EQUAL':
          result.username_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_GT':
          result.username_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_AVERAGE_GT':
          result.username_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'username_LONGEST_GT':
          result.username_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_SHORTEST_GT':
          result.username_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_GTE':
          result.username_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_AVERAGE_GTE':
          result.username_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'username_LONGEST_GTE':
          result.username_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_SHORTEST_GTE':
          result.username_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_LT':
          result.username_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_AVERAGE_LT':
          result.username_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'username_LONGEST_LT':
          result.username_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_SHORTEST_LT':
          result.username_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_LTE':
          result.username_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_AVERAGE_LTE':
          result.username_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'username_LONGEST_LTE':
          result.username_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'username_SHORTEST_LTE':
          result.username_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_EQUAL':
          result.displayName_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_AVERAGE_EQUAL':
          result.displayName_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'displayName_LONGEST_EQUAL':
          result.displayName_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_SHORTEST_EQUAL':
          result.displayName_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_GT':
          result.displayName_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_AVERAGE_GT':
          result.displayName_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'displayName_LONGEST_GT':
          result.displayName_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_SHORTEST_GT':
          result.displayName_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_GTE':
          result.displayName_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_AVERAGE_GTE':
          result.displayName_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'displayName_LONGEST_GTE':
          result.displayName_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_SHORTEST_GTE':
          result.displayName_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_LT':
          result.displayName_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_AVERAGE_LT':
          result.displayName_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'displayName_LONGEST_LT':
          result.displayName_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_SHORTEST_LT':
          result.displayName_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_LTE':
          result.displayName_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_AVERAGE_LTE':
          result.displayName_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'displayName_LONGEST_LTE':
          result.displayName_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'displayName_SHORTEST_LTE':
          result.displayName_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerUpdateConnectionInputSerializer
    implements StructuredSerializer<GProjectOwnerUpdateConnectionInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerUpdateConnectionInput,
    _$GProjectOwnerUpdateConnectionInput
  ];
  @override
  final String wireName = 'GProjectOwnerUpdateConnectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerUpdateConnectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserUpdateInput)));
    }
    return result;
  }

  @override
  GProjectOwnerUpdateConnectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerUpdateConnectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserUpdateInput))!
              as GUserUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectOwnerUpdateFieldInputSerializer
    implements StructuredSerializer<GProjectOwnerUpdateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectOwnerUpdateFieldInput,
    _$GProjectOwnerUpdateFieldInput
  ];
  @override
  final String wireName = 'GProjectOwnerUpdateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectOwnerUpdateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectionWhere)));
    }
    value = object.Gupdate;
    if (value != null) {
      result
        ..add('update')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerUpdateConnectionInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectFieldInput)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerDisconnectFieldInput)));
    }
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerCreateFieldInput)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerDeleteFieldInput)));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GProjectOwnerConnectOrCreateFieldInput)));
    }
    return result;
  }

  @override
  GProjectOwnerUpdateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectOwnerUpdateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerConnectionWhere))!
              as GProjectOwnerConnectionWhere);
          break;
        case 'update':
          result.Gupdate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerUpdateConnectionInput))!
              as GProjectOwnerUpdateConnectionInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerConnectFieldInput))!
              as GProjectOwnerConnectFieldInput);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerDisconnectFieldInput))!
              as GProjectOwnerDisconnectFieldInput);
          break;
        case 'create':
          result.create.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerCreateFieldInput))!
              as GProjectOwnerCreateFieldInput);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerDeleteFieldInput))!
              as GProjectOwnerDeleteFieldInput);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectOwnerConnectOrCreateFieldInput))!
              as GProjectOwnerConnectOrCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesAggregateInputSerializer
    implements StructuredSerializer<GProjectPagesAggregateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesAggregateInput,
    _$GProjectPagesAggregateInput
  ];
  @override
  final String wireName = 'GProjectPagesAggregateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesAggregateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LT;
    if (value != null) {
      result
        ..add('count_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LTE;
    if (value != null) {
      result
        ..add('count_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GT;
    if (value != null) {
      result
        ..add('count_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GTE;
    if (value != null) {
      result
        ..add('count_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesAggregateInput)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesAggregateInput)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GProjectPagesNodeAggregationWhereInput)));
    }
    return result;
  }

  @override
  GProjectPagesAggregateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesAggregateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LT':
          result.count_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LTE':
          result.count_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GT':
          result.count_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GTE':
          result.count_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectPagesNodeAggregationWhereInput))!
              as GProjectPagesNodeAggregationWhereInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesConnectFieldInputSerializer
    implements StructuredSerializer<GProjectPagesConnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesConnectFieldInput,
    _$GProjectPagesConnectFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesConnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesConnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageConnectWhere)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPageConnectInput)])));
    }
    return result;
  }

  @override
  GProjectPagesConnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesConnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectWhere))!
              as GPageConnectWhere);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPageConnectInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesConnectionSortSerializer
    implements StructuredSerializer<GProjectPagesConnectionSort> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesConnectionSort,
    _$GProjectPagesConnectionSort
  ];
  @override
  final String wireName = 'GProjectPagesConnectionSort';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesConnectionSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageSort)));
    }
    return result;
  }

  @override
  GProjectPagesConnectionSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesConnectionSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageSort))! as GPageSort);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesConnectionWhereSerializer
    implements StructuredSerializer<GProjectPagesConnectionWhere> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesConnectionWhere,
    _$GProjectPagesConnectionWhere
  ];
  @override
  final String wireName = 'GProjectPagesConnectionWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesConnectionWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesConnectionWhere)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesConnectionWhere)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.node_NOT;
    if (value != null) {
      result
        ..add('node_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    return result;
  }

  @override
  GProjectPagesConnectionWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesConnectionWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'node_NOT':
          result.node_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesConnectOrCreateFieldInputSerializer
    implements StructuredSerializer<GProjectPagesConnectOrCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesConnectOrCreateFieldInput,
    _$GProjectPagesConnectOrCreateFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesConnectOrCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesConnectOrCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GPageConnectOrCreateWhere)),
      'onCreate',
      serializers.serialize(object.onCreate,
          specifiedType:
              const FullType(GProjectPagesConnectOrCreateFieldInputOnCreate)),
    ];

    return result;
  }

  @override
  GProjectPagesConnectOrCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesConnectOrCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageConnectOrCreateWhere))!
              as GPageConnectOrCreateWhere);
          break;
        case 'onCreate':
          result.onCreate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GProjectPagesConnectOrCreateFieldInputOnCreate))!
              as GProjectPagesConnectOrCreateFieldInputOnCreate);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesConnectOrCreateFieldInputOnCreateSerializer
    implements
        StructuredSerializer<GProjectPagesConnectOrCreateFieldInputOnCreate> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesConnectOrCreateFieldInputOnCreate,
    _$GProjectPagesConnectOrCreateFieldInputOnCreate
  ];
  @override
  final String wireName = 'GProjectPagesConnectOrCreateFieldInputOnCreate';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GProjectPagesConnectOrCreateFieldInputOnCreate object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageOnCreateInput)),
    ];

    return result;
  }

  @override
  GProjectPagesConnectOrCreateFieldInputOnCreate deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesConnectOrCreateFieldInputOnCreateBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageOnCreateInput))!
              as GPageOnCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesCreateFieldInputSerializer
    implements StructuredSerializer<GProjectPagesCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesCreateFieldInput,
    _$GProjectPagesCreateFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GPageCreateInput)),
    ];

    return result;
  }

  @override
  GProjectPagesCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageCreateInput))!
              as GPageCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesDeleteFieldInputSerializer
    implements StructuredSerializer<GProjectPagesDeleteFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesDeleteFieldInput,
    _$GProjectPagesDeleteFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesDeleteFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesDeleteFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageDeleteInput)));
    }
    return result;
  }

  @override
  GProjectPagesDeleteFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesDeleteFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageDeleteInput))!
              as GPageDeleteInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesDisconnectFieldInputSerializer
    implements StructuredSerializer<GProjectPagesDisconnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesDisconnectFieldInput,
    _$GProjectPagesDisconnectFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesDisconnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesDisconnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageDisconnectInput)));
    }
    return result;
  }

  @override
  GProjectPagesDisconnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesDisconnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageDisconnectInput))!
              as GPageDisconnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesFieldInputSerializer
    implements StructuredSerializer<GProjectPagesFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesFieldInput,
    _$GProjectPagesFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesCreateFieldInput)])));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesConnectFieldInput)])));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectPagesConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GProjectPagesFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'create':
          result.create.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesNodeAggregationWhereInputSerializer
    implements StructuredSerializer<GProjectPagesNodeAggregationWhereInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesNodeAggregationWhereInput,
    _$GProjectPagesNodeAggregationWhereInput
  ];
  @override
  final String wireName = 'GProjectPagesNodeAggregationWhereInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesNodeAggregationWhereInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectPagesNodeAggregationWhereInput)
            ])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectPagesNodeAggregationWhereInput)
            ])));
    }
    value = object.id_EQUAL;
    if (value != null) {
      result
        ..add('id_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_EQUAL;
    if (value != null) {
      result
        ..add('title_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('title_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('title_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('title_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GT;
    if (value != null) {
      result
        ..add('title_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GT;
    if (value != null) {
      result
        ..add('title_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GT;
    if (value != null) {
      result
        ..add('title_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GT;
    if (value != null) {
      result
        ..add('title_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GTE;
    if (value != null) {
      result
        ..add('title_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GTE;
    if (value != null) {
      result
        ..add('title_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LT;
    if (value != null) {
      result
        ..add('title_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LT;
    if (value != null) {
      result
        ..add('title_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LT;
    if (value != null) {
      result
        ..add('title_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LT;
    if (value != null) {
      result
        ..add('title_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LTE;
    if (value != null) {
      result
        ..add('title_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LTE;
    if (value != null) {
      result
        ..add('title_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_EQUAL;
    if (value != null) {
      result
        ..add('description_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('description_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('description_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('description_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GT;
    if (value != null) {
      result
        ..add('description_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GT;
    if (value != null) {
      result
        ..add('description_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GT;
    if (value != null) {
      result
        ..add('description_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GT;
    if (value != null) {
      result
        ..add('description_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GTE;
    if (value != null) {
      result
        ..add('description_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GTE;
    if (value != null) {
      result
        ..add('description_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LT;
    if (value != null) {
      result
        ..add('description_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LT;
    if (value != null) {
      result
        ..add('description_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LT;
    if (value != null) {
      result
        ..add('description_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LT;
    if (value != null) {
      result
        ..add('description_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LTE;
    if (value != null) {
      result
        ..add('description_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LTE;
    if (value != null) {
      result
        ..add('description_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_EQUAL;
    if (value != null) {
      result
        ..add('layout_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.layout_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('layout_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('layout_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('layout_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_GT;
    if (value != null) {
      result
        ..add('layout_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_GT;
    if (value != null) {
      result
        ..add('layout_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_GT;
    if (value != null) {
      result
        ..add('layout_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_GT;
    if (value != null) {
      result
        ..add('layout_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_GTE;
    if (value != null) {
      result
        ..add('layout_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('layout_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_GTE;
    if (value != null) {
      result
        ..add('layout_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('layout_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_LT;
    if (value != null) {
      result
        ..add('layout_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_LT;
    if (value != null) {
      result
        ..add('layout_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_LT;
    if (value != null) {
      result
        ..add('layout_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_LT;
    if (value != null) {
      result
        ..add('layout_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_LTE;
    if (value != null) {
      result
        ..add('layout_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('layout_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.layout_LONGEST_LTE;
    if (value != null) {
      result
        ..add('layout_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.layout_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('layout_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_MIN_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_MAX_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_EQUAL;
    if (value != null) {
      result
        ..add('orderNumber_SUM_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GT;
    if (value != null) {
      result
        ..add('orderNumber_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_GT;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_GT;
    if (value != null) {
      result
        ..add('orderNumber_MIN_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_GT;
    if (value != null) {
      result
        ..add('orderNumber_MAX_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_GT;
    if (value != null) {
      result
        ..add('orderNumber_SUM_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_GTE;
    if (value != null) {
      result
        ..add('orderNumber_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_GTE;
    if (value != null) {
      result
        ..add('orderNumber_MIN_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_GTE;
    if (value != null) {
      result
        ..add('orderNumber_MAX_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_GTE;
    if (value != null) {
      result
        ..add('orderNumber_SUM_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LT;
    if (value != null) {
      result
        ..add('orderNumber_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_LT;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_LT;
    if (value != null) {
      result
        ..add('orderNumber_MIN_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_LT;
    if (value != null) {
      result
        ..add('orderNumber_MAX_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_LT;
    if (value != null) {
      result
        ..add('orderNumber_SUM_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_LTE;
    if (value != null) {
      result
        ..add('orderNumber_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('orderNumber_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.orderNumber_MIN_LTE;
    if (value != null) {
      result
        ..add('orderNumber_MIN_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_MAX_LTE;
    if (value != null) {
      result
        ..add('orderNumber_MAX_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.orderNumber_SUM_LTE;
    if (value != null) {
      result
        ..add('orderNumber_SUM_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GProjectPagesNodeAggregationWhereInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesNodeAggregationWhereInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'id_EQUAL':
          result.id_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_EQUAL':
          result.title_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_AVERAGE_EQUAL':
          result.title_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_EQUAL':
          result.title_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_EQUAL':
          result.title_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GT':
          result.title_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GT':
          result.title_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GT':
          result.title_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GT':
          result.title_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GTE':
          result.title_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GTE':
          result.title_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GTE':
          result.title_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GTE':
          result.title_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LT':
          result.title_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LT':
          result.title_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LT':
          result.title_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LT':
          result.title_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LTE':
          result.title_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LTE':
          result.title_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LTE':
          result.title_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LTE':
          result.title_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_EQUAL':
          result.description_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_AVERAGE_EQUAL':
          result.description_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_EQUAL':
          result.description_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_EQUAL':
          result.description_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GT':
          result.description_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GT':
          result.description_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GT':
          result.description_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GT':
          result.description_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GTE':
          result.description_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GTE':
          result.description_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GTE':
          result.description_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GTE':
          result.description_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LT':
          result.description_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LT':
          result.description_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LT':
          result.description_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LT':
          result.description_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LTE':
          result.description_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LTE':
          result.description_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LTE':
          result.description_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LTE':
          result.description_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_EQUAL':
          result.layout_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'layout_AVERAGE_EQUAL':
          result.layout_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_EQUAL':
          result.layout_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_EQUAL':
          result.layout_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_GT':
          result.layout_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_GT':
          result.layout_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_GT':
          result.layout_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_GT':
          result.layout_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_GTE':
          result.layout_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_GTE':
          result.layout_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_GTE':
          result.layout_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_GTE':
          result.layout_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_LT':
          result.layout_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_LT':
          result.layout_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_LT':
          result.layout_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_LT':
          result.layout_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_LTE':
          result.layout_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_AVERAGE_LTE':
          result.layout_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'layout_LONGEST_LTE':
          result.layout_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'layout_SHORTEST_LTE':
          result.layout_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_EQUAL':
          result.orderNumber_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_EQUAL':
          result.orderNumber_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_EQUAL':
          result.orderNumber_MIN_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_EQUAL':
          result.orderNumber_MAX_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_EQUAL':
          result.orderNumber_SUM_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GT':
          result.orderNumber_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_GT':
          result.orderNumber_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_GT':
          result.orderNumber_MIN_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_GT':
          result.orderNumber_MAX_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_GT':
          result.orderNumber_SUM_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_GTE':
          result.orderNumber_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_GTE':
          result.orderNumber_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_GTE':
          result.orderNumber_MIN_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_GTE':
          result.orderNumber_MAX_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_GTE':
          result.orderNumber_SUM_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LT':
          result.orderNumber_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_LT':
          result.orderNumber_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_LT':
          result.orderNumber_MIN_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_LT':
          result.orderNumber_MAX_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_LT':
          result.orderNumber_SUM_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_LTE':
          result.orderNumber_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_AVERAGE_LTE':
          result.orderNumber_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'orderNumber_MIN_LTE':
          result.orderNumber_MIN_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_MAX_LTE':
          result.orderNumber_MAX_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'orderNumber_SUM_LTE':
          result.orderNumber_SUM_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesUpdateConnectionInputSerializer
    implements StructuredSerializer<GProjectPagesUpdateConnectionInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesUpdateConnectionInput,
    _$GProjectPagesUpdateConnectionInput
  ];
  @override
  final String wireName = 'GProjectPagesUpdateConnectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesUpdateConnectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageUpdateInput)));
    }
    return result;
  }

  @override
  GProjectPagesUpdateConnectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesUpdateConnectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageUpdateInput))!
              as GPageUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectPagesUpdateFieldInputSerializer
    implements StructuredSerializer<GProjectPagesUpdateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GProjectPagesUpdateFieldInput,
    _$GProjectPagesUpdateFieldInput
  ];
  @override
  final String wireName = 'GProjectPagesUpdateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectPagesUpdateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.Gupdate;
    if (value != null) {
      result
        ..add('update')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesUpdateConnectionInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesConnectFieldInput)])));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesDisconnectFieldInput)])));
    }
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesCreateFieldInput)])));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesDeleteFieldInput)])));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProjectPagesConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GProjectPagesUpdateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectPagesUpdateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'update':
          result.Gupdate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GProjectPagesUpdateConnectionInput))!
              as GProjectPagesUpdateConnectionInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesDisconnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'create':
          result.create.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesDeleteFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectRelationInputSerializer
    implements StructuredSerializer<GProjectRelationInput> {
  @override
  final Iterable<Type> types = const [
    GProjectRelationInput,
    _$GProjectRelationInput
  ];
  @override
  final String wireName = 'GProjectRelationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectRelationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesCreateFieldInput)])));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerCreateFieldInput)));
    }
    return result;
  }

  @override
  GProjectRelationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectRelationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerCreateFieldInput))!
              as GProjectOwnerCreateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectSortSerializer implements StructuredSerializer<GProjectSort> {
  @override
  final Iterable<Type> types = const [GProjectSort, _$GProjectSort];
  @override
  final String wireName = 'GProjectSort';

  @override
  Iterable<Object?> serialize(Serializers serializers, GProjectSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.creationDate;
    if (value != null) {
      result
        ..add('creationDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.modifiedDate;
    if (value != null) {
      result
        ..add('modifiedDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    return result;
  }

  @override
  GProjectSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'creationDate':
          result.creationDate = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'modifiedDate':
          result.modifiedDate = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectUniqueWhereSerializer
    implements StructuredSerializer<GProjectUniqueWhere> {
  @override
  final Iterable<Type> types = const [
    GProjectUniqueWhere,
    _$GProjectUniqueWhere
  ];
  @override
  final String wireName = 'GProjectUniqueWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectUniqueWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProjectUniqueWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectUniqueWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectUpdateInputSerializer
    implements StructuredSerializer<GProjectUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GProjectUpdateInput,
    _$GProjectUpdateInput
  ];
  @override
  final String wireName = 'GProjectUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProjectUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.pages;
    if (value != null) {
      result
        ..add('pages')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProjectPagesUpdateFieldInput)])));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerUpdateFieldInput)));
    }
    return result;
  }

  @override
  GProjectUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'pages':
          result.pages.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProjectPagesUpdateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerUpdateFieldInput))!
              as GProjectOwnerUpdateFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProjectWhereSerializer implements StructuredSerializer<GProjectWhere> {
  @override
  final Iterable<Type> types = const [GProjectWhere, _$GProjectWhere];
  @override
  final String wireName = 'GProjectWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GProjectWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GProjectWhere)])));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GProjectWhere)])));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT;
    if (value != null) {
      result
        ..add('id_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_IN;
    if (value != null) {
      result
        ..add('id_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.id_NOT_IN;
    if (value != null) {
      result
        ..add('id_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.id_CONTAINS;
    if (value != null) {
      result
        ..add('id_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('id_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_STARTS_WITH;
    if (value != null) {
      result
        ..add('id_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('id_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_ENDS_WITH;
    if (value != null) {
      result
        ..add('id_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('id_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT;
    if (value != null) {
      result
        ..add('title_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_IN;
    if (value != null) {
      result
        ..add('title_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.title_NOT_IN;
    if (value != null) {
      result
        ..add('title_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.title_CONTAINS;
    if (value != null) {
      result
        ..add('title_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('title_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_STARTS_WITH;
    if (value != null) {
      result
        ..add('title_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('title_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_ENDS_WITH;
    if (value != null) {
      result
        ..add('title_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('title_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT;
    if (value != null) {
      result
        ..add('description_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_IN;
    if (value != null) {
      result
        ..add('description_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.description_NOT_IN;
    if (value != null) {
      result
        ..add('description_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.description_CONTAINS;
    if (value != null) {
      result
        ..add('description_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('description_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_STARTS_WITH;
    if (value != null) {
      result
        ..add('description_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('description_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_ENDS_WITH;
    if (value != null) {
      result
        ..add('description_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('description_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.creationDate;
    if (value != null) {
      result
        ..add('creationDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_NOT;
    if (value != null) {
      result
        ..add('creationDate_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_IN;
    if (value != null) {
      result
        ..add('creationDate_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GDateTime)])));
    }
    value = object.creationDate_NOT_IN;
    if (value != null) {
      result
        ..add('creationDate_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GDateTime)])));
    }
    value = object.creationDate_LT;
    if (value != null) {
      result
        ..add('creationDate_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_LTE;
    if (value != null) {
      result
        ..add('creationDate_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_GT;
    if (value != null) {
      result
        ..add('creationDate_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_GTE;
    if (value != null) {
      result
        ..add('creationDate_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate;
    if (value != null) {
      result
        ..add('modifiedDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_NOT;
    if (value != null) {
      result
        ..add('modifiedDate_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_IN;
    if (value != null) {
      result
        ..add('modifiedDate_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GDateTime)])));
    }
    value = object.modifiedDate_NOT_IN;
    if (value != null) {
      result
        ..add('modifiedDate_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GDateTime)])));
    }
    value = object.modifiedDate_LT;
    if (value != null) {
      result
        ..add('modifiedDate_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_GT;
    if (value != null) {
      result
        ..add('modifiedDate_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.pagesAggregate;
    if (value != null) {
      result
        ..add('pagesAggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesAggregateInput)));
    }
    value = object.pages_ALL;
    if (value != null) {
      result
        ..add('pages_ALL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.pages_NONE;
    if (value != null) {
      result
        ..add('pages_NONE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.pages_SINGLE;
    if (value != null) {
      result
        ..add('pages_SINGLE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.pages_SOME;
    if (value != null) {
      result
        ..add('pages_SOME')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPageWhere)));
    }
    value = object.owner;
    if (value != null) {
      result
        ..add('owner')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserWhere)));
    }
    value = object.owner_NOT;
    if (value != null) {
      result
        ..add('owner_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserWhere)));
    }
    value = object.ownerAggregate;
    if (value != null) {
      result
        ..add('ownerAggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerAggregateInput)));
    }
    value = object.pagesConnection_ALL;
    if (value != null) {
      result
        ..add('pagesConnection_ALL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.pagesConnection_NONE;
    if (value != null) {
      result
        ..add('pagesConnection_NONE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.pagesConnection_SINGLE;
    if (value != null) {
      result
        ..add('pagesConnection_SINGLE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.pagesConnection_SOME;
    if (value != null) {
      result
        ..add('pagesConnection_SOME')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectPagesConnectionWhere)));
    }
    value = object.ownerConnection;
    if (value != null) {
      result
        ..add('ownerConnection')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectionWhere)));
    }
    value = object.ownerConnection_NOT;
    if (value != null) {
      result
        ..add('ownerConnection_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectOwnerConnectionWhere)));
    }
    return result;
  }

  @override
  GProjectWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProjectWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProjectWhere)]))!
              as BuiltList<Object?>);
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProjectWhere)]))!
              as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT':
          result.id_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_IN':
          result.id_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id_NOT_IN':
          result.id_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id_CONTAINS':
          result.id_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_CONTAINS':
          result.id_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_STARTS_WITH':
          result.id_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_STARTS_WITH':
          result.id_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_ENDS_WITH':
          result.id_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_ENDS_WITH':
          result.id_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT':
          result.title_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_IN':
          result.title_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'title_NOT_IN':
          result.title_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'title_CONTAINS':
          result.title_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT_CONTAINS':
          result.title_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_STARTS_WITH':
          result.title_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT_STARTS_WITH':
          result.title_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_ENDS_WITH':
          result.title_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_NOT_ENDS_WITH':
          result.title_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT':
          result.description_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_IN':
          result.description_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'description_NOT_IN':
          result.description_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'description_CONTAINS':
          result.description_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT_CONTAINS':
          result.description_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_STARTS_WITH':
          result.description_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT_STARTS_WITH':
          result.description_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_ENDS_WITH':
          result.description_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_NOT_ENDS_WITH':
          result.description_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'creationDate':
          result.creationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_NOT':
          result.creationDate_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_IN':
          result.creationDate_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDateTime)]))!
              as BuiltList<Object?>);
          break;
        case 'creationDate_NOT_IN':
          result.creationDate_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDateTime)]))!
              as BuiltList<Object?>);
          break;
        case 'creationDate_LT':
          result.creationDate_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_LTE':
          result.creationDate_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_GT':
          result.creationDate_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_GTE':
          result.creationDate_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate':
          result.modifiedDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_NOT':
          result.modifiedDate_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_IN':
          result.modifiedDate_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDateTime)]))!
              as BuiltList<Object?>);
          break;
        case 'modifiedDate_NOT_IN':
          result.modifiedDate_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDateTime)]))!
              as BuiltList<Object?>);
          break;
        case 'modifiedDate_LT':
          result.modifiedDate_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_LTE':
          result.modifiedDate_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_GT':
          result.modifiedDate_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_GTE':
          result.modifiedDate_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'pagesAggregate':
          result.pagesAggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesAggregateInput))!
              as GProjectPagesAggregateInput);
          break;
        case 'pages_ALL':
          result.pages_ALL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'pages_NONE':
          result.pages_NONE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'pages_SINGLE':
          result.pages_SINGLE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'pages_SOME':
          result.pages_SOME.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPageWhere))! as GPageWhere);
          break;
        case 'owner':
          result.owner.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserWhere))! as GUserWhere);
          break;
        case 'owner_NOT':
          result.owner_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserWhere))! as GUserWhere);
          break;
        case 'ownerAggregate':
          result.ownerAggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerAggregateInput))!
              as GProjectOwnerAggregateInput);
          break;
        case 'pagesConnection_ALL':
          result.pagesConnection_ALL.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'pagesConnection_NONE':
          result.pagesConnection_NONE.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'pagesConnection_SINGLE':
          result.pagesConnection_SINGLE.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'pagesConnection_SOME':
          result.pagesConnection_SOME.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectPagesConnectionWhere))!
              as GProjectPagesConnectionWhere);
          break;
        case 'ownerConnection':
          result.ownerConnection.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerConnectionWhere))!
              as GProjectOwnerConnectionWhere);
          break;
        case 'ownerConnection_NOT':
          result.ownerConnection_NOT.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOwnerConnectionWhere))!
              as GProjectOwnerConnectionWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GSortDirectionSerializer
    implements PrimitiveSerializer<GSortDirection> {
  @override
  final Iterable<Type> types = const <Type>[GSortDirection];
  @override
  final String wireName = 'GSortDirection';

  @override
  Object serialize(Serializers serializers, GSortDirection object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSortDirection deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSortDirection.valueOf(serialized as String);
}

class _$GUserConnectInputSerializer
    implements StructuredSerializer<GUserConnectInput> {
  @override
  final Iterable<Type> types = const [GUserConnectInput, _$GUserConnectInput];
  @override
  final String wireName = 'GUserConnectInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserConnectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsConnectFieldInput)])));
    }
    return result;
  }

  @override
  GUserConnectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserConnectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserConnectOrCreateInputSerializer
    implements StructuredSerializer<GUserConnectOrCreateInput> {
  @override
  final Iterable<Type> types = const [
    GUserConnectOrCreateInput,
    _$GUserConnectOrCreateInput
  ];
  @override
  final String wireName = 'GUserConnectOrCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserConnectOrCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GUserProjectsConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GUserConnectOrCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserConnectOrCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserConnectOrCreateWhereSerializer
    implements StructuredSerializer<GUserConnectOrCreateWhere> {
  @override
  final Iterable<Type> types = const [
    GUserConnectOrCreateWhere,
    _$GUserConnectOrCreateWhere
  ];
  @override
  final String wireName = 'GUserConnectOrCreateWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserConnectOrCreateWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GUserUniqueWhere)),
    ];

    return result;
  }

  @override
  GUserConnectOrCreateWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserConnectOrCreateWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserUniqueWhere))!
              as GUserUniqueWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserConnectWhereSerializer
    implements StructuredSerializer<GUserConnectWhere> {
  @override
  final Iterable<Type> types = const [GUserConnectWhere, _$GUserConnectWhere];
  @override
  final String wireName = 'GUserConnectWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserConnectWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GUserWhere)),
    ];

    return result;
  }

  @override
  GUserConnectWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserConnectWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUserWhere))! as GUserWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserCreateInputSerializer
    implements StructuredSerializer<GUserCreateInput> {
  @override
  final Iterable<Type> types = const [GUserCreateInput, _$GUserCreateInput];
  @override
  final String wireName = 'GUserCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'username',
      serializers.serialize(object.username,
          specifiedType: const FullType(String)),
      'displayName',
      serializers.serialize(object.displayName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsFieldInput)));
    }
    return result;
  }

  @override
  GUserCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsFieldInput))!
              as GUserProjectsFieldInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserDeleteInputSerializer
    implements StructuredSerializer<GUserDeleteInput> {
  @override
  final Iterable<Type> types = const [GUserDeleteInput, _$GUserDeleteInput];
  @override
  final String wireName = 'GUserDeleteInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsDeleteFieldInput)])));
    }
    return result;
  }

  @override
  GUserDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsDeleteFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserDisconnectInputSerializer
    implements StructuredSerializer<GUserDisconnectInput> {
  @override
  final Iterable<Type> types = const [
    GUserDisconnectInput,
    _$GUserDisconnectInput
  ];
  @override
  final String wireName = 'GUserDisconnectInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserDisconnectInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsDisconnectFieldInput)])));
    }
    return result;
  }

  @override
  GUserDisconnectInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserDisconnectInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsDisconnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserOnCreateInputSerializer
    implements StructuredSerializer<GUserOnCreateInput> {
  @override
  final Iterable<Type> types = const [GUserOnCreateInput, _$GUserOnCreateInput];
  @override
  final String wireName = 'GUserOnCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserOnCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'username',
      serializers.serialize(object.username,
          specifiedType: const FullType(String)),
      'displayName',
      serializers.serialize(object.displayName,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GUserOnCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserOnCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserOptionsSerializer implements StructuredSerializer<GUserOptions> {
  @override
  final Iterable<Type> types = const [GUserOptions, _$GUserOptions];
  @override
  final String wireName = 'GUserOptions';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserOptions object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sort;
    if (value != null) {
      result
        ..add('sort')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GUserSort)])));
    }
    value = object.limit;
    if (value != null) {
      result
        ..add('limit')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.offset;
    if (value != null) {
      result
        ..add('offset')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GUserOptions deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserOptionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sort':
          result.sort.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUserSort)]))!
              as BuiltList<Object?>);
          break;
        case 'limit':
          result.limit = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'offset':
          result.offset = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsAggregateInputSerializer
    implements StructuredSerializer<GUserProjectsAggregateInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsAggregateInput,
    _$GUserProjectsAggregateInput
  ];
  @override
  final String wireName = 'GUserProjectsAggregateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsAggregateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LT;
    if (value != null) {
      result
        ..add('count_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_LTE;
    if (value != null) {
      result
        ..add('count_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GT;
    if (value != null) {
      result
        ..add('count_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.count_GTE;
    if (value != null) {
      result
        ..add('count_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsAggregateInput)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsAggregateInput)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GUserProjectsNodeAggregationWhereInput)));
    }
    return result;
  }

  @override
  GUserProjectsAggregateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsAggregateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LT':
          result.count_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_LTE':
          result.count_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GT':
          result.count_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'count_GTE':
          result.count_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsAggregateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GUserProjectsNodeAggregationWhereInput))!
              as GUserProjectsNodeAggregationWhereInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsConnectFieldInputSerializer
    implements StructuredSerializer<GUserProjectsConnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsConnectFieldInput,
    _$GUserProjectsConnectFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsConnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsConnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectConnectWhere)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GProjectConnectInput)])));
    }
    return result;
  }

  @override
  GUserProjectsConnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsConnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectConnectWhere))!
              as GProjectConnectWhere);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProjectConnectInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsConnectionSortSerializer
    implements StructuredSerializer<GUserProjectsConnectionSort> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsConnectionSort,
    _$GUserProjectsConnectionSort
  ];
  @override
  final String wireName = 'GUserProjectsConnectionSort';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsConnectionSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectSort)));
    }
    return result;
  }

  @override
  GUserProjectsConnectionSort deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsConnectionSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectSort))! as GProjectSort);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsConnectionWhereSerializer
    implements StructuredSerializer<GUserProjectsConnectionWhere> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsConnectionWhere,
    _$GUserProjectsConnectionWhere
  ];
  @override
  final String wireName = 'GUserProjectsConnectionWhere';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsConnectionWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsConnectionWhere)])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsConnectionWhere)])));
    }
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.node_NOT;
    if (value != null) {
      result
        ..add('node_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    return result;
  }

  @override
  GUserProjectsConnectionWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsConnectionWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectionWhere)
              ]))! as BuiltList<Object?>);
          break;
        case 'node':
          result.node.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'node_NOT':
          result.node_NOT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsConnectOrCreateFieldInputSerializer
    implements StructuredSerializer<GUserProjectsConnectOrCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsConnectOrCreateFieldInput,
    _$GUserProjectsConnectOrCreateFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsConnectOrCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsConnectOrCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GProjectConnectOrCreateWhere)),
      'onCreate',
      serializers.serialize(object.onCreate,
          specifiedType:
              const FullType(GUserProjectsConnectOrCreateFieldInputOnCreate)),
    ];

    return result;
  }

  @override
  GUserProjectsConnectOrCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsConnectOrCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectConnectOrCreateWhere))!
              as GProjectConnectOrCreateWhere);
          break;
        case 'onCreate':
          result.onCreate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GUserProjectsConnectOrCreateFieldInputOnCreate))!
              as GUserProjectsConnectOrCreateFieldInputOnCreate);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsConnectOrCreateFieldInputOnCreateSerializer
    implements
        StructuredSerializer<GUserProjectsConnectOrCreateFieldInputOnCreate> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsConnectOrCreateFieldInputOnCreate,
    _$GUserProjectsConnectOrCreateFieldInputOnCreate
  ];
  @override
  final String wireName = 'GUserProjectsConnectOrCreateFieldInputOnCreate';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GUserProjectsConnectOrCreateFieldInputOnCreate object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GProjectOnCreateInput)),
    ];

    return result;
  }

  @override
  GUserProjectsConnectOrCreateFieldInputOnCreate deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsConnectOrCreateFieldInputOnCreateBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectOnCreateInput))!
              as GProjectOnCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsCreateFieldInputSerializer
    implements StructuredSerializer<GUserProjectsCreateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsCreateFieldInput,
    _$GUserProjectsCreateFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsCreateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsCreateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'node',
      serializers.serialize(object.node,
          specifiedType: const FullType(GProjectCreateInput)),
    ];

    return result;
  }

  @override
  GUserProjectsCreateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsCreateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectCreateInput))!
              as GProjectCreateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsDeleteFieldInputSerializer
    implements StructuredSerializer<GUserProjectsDeleteFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsDeleteFieldInput,
    _$GUserProjectsDeleteFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsDeleteFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsDeleteFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectDeleteInput)));
    }
    return result;
  }

  @override
  GUserProjectsDeleteFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsDeleteFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectDeleteInput))!
              as GProjectDeleteInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsDisconnectFieldInputSerializer
    implements StructuredSerializer<GUserProjectsDisconnectFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsDisconnectFieldInput,
    _$GUserProjectsDisconnectFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsDisconnectFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsDisconnectFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectDisconnectInput)));
    }
    return result;
  }

  @override
  GUserProjectsDisconnectFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsDisconnectFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectDisconnectInput))!
              as GProjectDisconnectInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsFieldInputSerializer
    implements StructuredSerializer<GUserProjectsFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsFieldInput,
    _$GUserProjectsFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsCreateFieldInput)])));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsConnectFieldInput)])));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GUserProjectsConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GUserProjectsFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'create':
          result.create.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsNodeAggregationWhereInputSerializer
    implements StructuredSerializer<GUserProjectsNodeAggregationWhereInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsNodeAggregationWhereInput,
    _$GUserProjectsNodeAggregationWhereInput
  ];
  @override
  final String wireName = 'GUserProjectsNodeAggregationWhereInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsNodeAggregationWhereInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GUserProjectsNodeAggregationWhereInput)
            ])));
    }
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GUserProjectsNodeAggregationWhereInput)
            ])));
    }
    value = object.id_EQUAL;
    if (value != null) {
      result
        ..add('id_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_EQUAL;
    if (value != null) {
      result
        ..add('title_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('title_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('title_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('title_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GT;
    if (value != null) {
      result
        ..add('title_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GT;
    if (value != null) {
      result
        ..add('title_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GT;
    if (value != null) {
      result
        ..add('title_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GT;
    if (value != null) {
      result
        ..add('title_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_GTE;
    if (value != null) {
      result
        ..add('title_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_GTE;
    if (value != null) {
      result
        ..add('title_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LT;
    if (value != null) {
      result
        ..add('title_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LT;
    if (value != null) {
      result
        ..add('title_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LT;
    if (value != null) {
      result
        ..add('title_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LT;
    if (value != null) {
      result
        ..add('title_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_LTE;
    if (value != null) {
      result
        ..add('title_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('title_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.title_LONGEST_LTE;
    if (value != null) {
      result
        ..add('title_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.title_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('title_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_EQUAL;
    if (value != null) {
      result
        ..add('description_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description_AVERAGE_EQUAL;
    if (value != null) {
      result
        ..add('description_AVERAGE_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_EQUAL;
    if (value != null) {
      result
        ..add('description_LONGEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_EQUAL;
    if (value != null) {
      result
        ..add('description_SHORTEST_EQUAL')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GT;
    if (value != null) {
      result
        ..add('description_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GT;
    if (value != null) {
      result
        ..add('description_AVERAGE_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GT;
    if (value != null) {
      result
        ..add('description_LONGEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GT;
    if (value != null) {
      result
        ..add('description_SHORTEST_GT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_GTE;
    if (value != null) {
      result
        ..add('description_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_GTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_GTE;
    if (value != null) {
      result
        ..add('description_LONGEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_GTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_GTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LT;
    if (value != null) {
      result
        ..add('description_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LT;
    if (value != null) {
      result
        ..add('description_AVERAGE_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LT;
    if (value != null) {
      result
        ..add('description_LONGEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LT;
    if (value != null) {
      result
        ..add('description_SHORTEST_LT')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_LTE;
    if (value != null) {
      result
        ..add('description_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_AVERAGE_LTE;
    if (value != null) {
      result
        ..add('description_AVERAGE_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.description_LONGEST_LTE;
    if (value != null) {
      result
        ..add('description_LONGEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.description_SHORTEST_LTE;
    if (value != null) {
      result
        ..add('description_SHORTEST_LTE')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creationDate_EQUAL;
    if (value != null) {
      result
        ..add('creationDate_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_EQUAL;
    if (value != null) {
      result
        ..add('creationDate_MIN_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_EQUAL;
    if (value != null) {
      result
        ..add('creationDate_MAX_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_GT;
    if (value != null) {
      result
        ..add('creationDate_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_GT;
    if (value != null) {
      result
        ..add('creationDate_MIN_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_GT;
    if (value != null) {
      result
        ..add('creationDate_MAX_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_GTE;
    if (value != null) {
      result
        ..add('creationDate_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_GTE;
    if (value != null) {
      result
        ..add('creationDate_MIN_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_GTE;
    if (value != null) {
      result
        ..add('creationDate_MAX_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_LT;
    if (value != null) {
      result
        ..add('creationDate_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_LT;
    if (value != null) {
      result
        ..add('creationDate_MIN_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_LT;
    if (value != null) {
      result
        ..add('creationDate_MAX_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_LTE;
    if (value != null) {
      result
        ..add('creationDate_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MIN_LTE;
    if (value != null) {
      result
        ..add('creationDate_MIN_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.creationDate_MAX_LTE;
    if (value != null) {
      result
        ..add('creationDate_MAX_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_EQUAL;
    if (value != null) {
      result
        ..add('modifiedDate_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_EQUAL;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_EQUAL;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_EQUAL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_GT;
    if (value != null) {
      result
        ..add('modifiedDate_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_GT;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_GT;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_GT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_GTE;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_GTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_LT;
    if (value != null) {
      result
        ..add('modifiedDate_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_LT;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_LT;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_LT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MIN_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_MIN_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.modifiedDate_MAX_LTE;
    if (value != null) {
      result
        ..add('modifiedDate_MAX_LTE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GUserProjectsNodeAggregationWhereInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsNodeAggregationWhereInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsNodeAggregationWhereInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'id_EQUAL':
          result.id_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_EQUAL':
          result.title_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title_AVERAGE_EQUAL':
          result.title_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_EQUAL':
          result.title_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_EQUAL':
          result.title_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GT':
          result.title_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GT':
          result.title_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GT':
          result.title_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GT':
          result.title_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_GTE':
          result.title_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_GTE':
          result.title_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_GTE':
          result.title_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_GTE':
          result.title_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LT':
          result.title_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LT':
          result.title_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LT':
          result.title_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LT':
          result.title_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_LTE':
          result.title_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_AVERAGE_LTE':
          result.title_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'title_LONGEST_LTE':
          result.title_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'title_SHORTEST_LTE':
          result.title_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_EQUAL':
          result.description_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description_AVERAGE_EQUAL':
          result.description_AVERAGE_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_EQUAL':
          result.description_LONGEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_EQUAL':
          result.description_SHORTEST_EQUAL = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GT':
          result.description_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GT':
          result.description_AVERAGE_GT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GT':
          result.description_LONGEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GT':
          result.description_SHORTEST_GT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_GTE':
          result.description_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_GTE':
          result.description_AVERAGE_GTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_GTE':
          result.description_LONGEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_GTE':
          result.description_SHORTEST_GTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LT':
          result.description_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LT':
          result.description_AVERAGE_LT = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LT':
          result.description_LONGEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LT':
          result.description_SHORTEST_LT = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_LTE':
          result.description_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_AVERAGE_LTE':
          result.description_AVERAGE_LTE = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'description_LONGEST_LTE':
          result.description_LONGEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'description_SHORTEST_LTE':
          result.description_SHORTEST_LTE = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'creationDate_EQUAL':
          result.creationDate_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_EQUAL':
          result.creationDate_MIN_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_EQUAL':
          result.creationDate_MAX_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_GT':
          result.creationDate_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_GT':
          result.creationDate_MIN_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_GT':
          result.creationDate_MAX_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_GTE':
          result.creationDate_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_GTE':
          result.creationDate_MIN_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_GTE':
          result.creationDate_MAX_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_LT':
          result.creationDate_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_LT':
          result.creationDate_MIN_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_LT':
          result.creationDate_MAX_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_LTE':
          result.creationDate_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MIN_LTE':
          result.creationDate_MIN_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'creationDate_MAX_LTE':
          result.creationDate_MAX_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_EQUAL':
          result.modifiedDate_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_EQUAL':
          result.modifiedDate_MIN_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_EQUAL':
          result.modifiedDate_MAX_EQUAL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_GT':
          result.modifiedDate_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_GT':
          result.modifiedDate_MIN_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_GT':
          result.modifiedDate_MAX_GT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_GTE':
          result.modifiedDate_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_GTE':
          result.modifiedDate_MIN_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_GTE':
          result.modifiedDate_MAX_GTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_LT':
          result.modifiedDate_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_LT':
          result.modifiedDate_MIN_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_LT':
          result.modifiedDate_MAX_LT.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_LTE':
          result.modifiedDate_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MIN_LTE':
          result.modifiedDate_MIN_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'modifiedDate_MAX_LTE':
          result.modifiedDate_MAX_LTE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsUpdateConnectionInputSerializer
    implements StructuredSerializer<GUserProjectsUpdateConnectionInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsUpdateConnectionInput,
    _$GUserProjectsUpdateConnectionInput
  ];
  @override
  final String wireName = 'GUserProjectsUpdateConnectionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsUpdateConnectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.node;
    if (value != null) {
      result
        ..add('node')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectUpdateInput)));
    }
    return result;
  }

  @override
  GUserProjectsUpdateConnectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsUpdateConnectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'node':
          result.node.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProjectUpdateInput))!
              as GProjectUpdateInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserProjectsUpdateFieldInputSerializer
    implements StructuredSerializer<GUserProjectsUpdateFieldInput> {
  @override
  final Iterable<Type> types = const [
    GUserProjectsUpdateFieldInput,
    _$GUserProjectsUpdateFieldInput
  ];
  @override
  final String wireName = 'GUserProjectsUpdateFieldInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserProjectsUpdateFieldInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    value = object.Gupdate;
    if (value != null) {
      result
        ..add('update')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsUpdateConnectionInput)));
    }
    value = object.connect;
    if (value != null) {
      result
        ..add('connect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsConnectFieldInput)])));
    }
    value = object.disconnect;
    if (value != null) {
      result
        ..add('disconnect')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsDisconnectFieldInput)])));
    }
    value = object.create;
    if (value != null) {
      result
        ..add('create')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsCreateFieldInput)])));
    }
    value = object.delete;
    if (value != null) {
      result
        ..add('delete')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsDeleteFieldInput)])));
    }
    value = object.connectOrCreate;
    if (value != null) {
      result
        ..add('connectOrCreate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GUserProjectsConnectOrCreateFieldInput)
            ])));
    }
    return result;
  }

  @override
  GUserProjectsUpdateFieldInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserProjectsUpdateFieldInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
        case 'update':
          result.Gupdate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GUserProjectsUpdateConnectionInput))!
              as GUserProjectsUpdateConnectionInput);
          break;
        case 'connect':
          result.connect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'disconnect':
          result.disconnect.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsDisconnectFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'create':
          result.create.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'delete':
          result.delete.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsDeleteFieldInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'connectOrCreate':
          result.connectOrCreate.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsConnectOrCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserRelationInputSerializer
    implements StructuredSerializer<GUserRelationInput> {
  @override
  final Iterable<Type> types = const [GUserRelationInput, _$GUserRelationInput];
  @override
  final String wireName = 'GUserRelationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUserRelationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsCreateFieldInput)])));
    }
    return result;
  }

  @override
  GUserRelationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserRelationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsCreateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserSortSerializer implements StructuredSerializer<GUserSort> {
  @override
  final Iterable<Type> types = const [GUserSort, _$GUserSort];
  @override
  final String wireName = 'GUserSort';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserSort object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.username;
    if (value != null) {
      result
        ..add('username')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSortDirection)));
    }
    return result;
  }

  @override
  GUserSort deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserSortBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(GSortDirection)) as GSortDirection?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserUniqueWhereSerializer
    implements StructuredSerializer<GUserUniqueWhere> {
  @override
  final Iterable<Type> types = const [GUserUniqueWhere, _$GUserUniqueWhere];
  @override
  final String wireName = 'GUserUniqueWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserUniqueWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username;
    if (value != null) {
      result
        ..add('username')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserUniqueWhere deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserUniqueWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserUpdateInputSerializer
    implements StructuredSerializer<GUserUpdateInput> {
  @override
  final Iterable<Type> types = const [GUserUpdateInput, _$GUserUpdateInput];
  @override
  final String wireName = 'GUserUpdateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.username;
    if (value != null) {
      result
        ..add('username')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projects;
    if (value != null) {
      result
        ..add('projects')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GUserProjectsUpdateFieldInput)])));
    }
    return result;
  }

  @override
  GUserUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projects':
          result.projects.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GUserProjectsUpdateFieldInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserWhereSerializer implements StructuredSerializer<GUserWhere> {
  @override
  final Iterable<Type> types = const [GUserWhere, _$GUserWhere];
  @override
  final String wireName = 'GUserWhere';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserWhere object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.OR;
    if (value != null) {
      result
        ..add('OR')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GUserWhere)])));
    }
    value = object.AND;
    if (value != null) {
      result
        ..add('AND')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GUserWhere)])));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT;
    if (value != null) {
      result
        ..add('id_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_IN;
    if (value != null) {
      result
        ..add('id_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.id_NOT_IN;
    if (value != null) {
      result
        ..add('id_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.id_CONTAINS;
    if (value != null) {
      result
        ..add('id_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('id_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_STARTS_WITH;
    if (value != null) {
      result
        ..add('id_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('id_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_ENDS_WITH;
    if (value != null) {
      result
        ..add('id_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('id_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username;
    if (value != null) {
      result
        ..add('username')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_NOT;
    if (value != null) {
      result
        ..add('username_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_IN;
    if (value != null) {
      result
        ..add('username_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.username_NOT_IN;
    if (value != null) {
      result
        ..add('username_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.username_CONTAINS;
    if (value != null) {
      result
        ..add('username_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('username_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_STARTS_WITH;
    if (value != null) {
      result
        ..add('username_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('username_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_ENDS_WITH;
    if (value != null) {
      result
        ..add('username_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.username_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('username_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_NOT;
    if (value != null) {
      result
        ..add('displayName_NOT')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_IN;
    if (value != null) {
      result
        ..add('displayName_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.displayName_NOT_IN;
    if (value != null) {
      result
        ..add('displayName_NOT_IN')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.displayName_CONTAINS;
    if (value != null) {
      result
        ..add('displayName_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_NOT_CONTAINS;
    if (value != null) {
      result
        ..add('displayName_NOT_CONTAINS')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_STARTS_WITH;
    if (value != null) {
      result
        ..add('displayName_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_NOT_STARTS_WITH;
    if (value != null) {
      result
        ..add('displayName_NOT_STARTS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_ENDS_WITH;
    if (value != null) {
      result
        ..add('displayName_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.displayName_NOT_ENDS_WITH;
    if (value != null) {
      result
        ..add('displayName_NOT_ENDS_WITH')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.projectsAggregate;
    if (value != null) {
      result
        ..add('projectsAggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsAggregateInput)));
    }
    value = object.projects_ALL;
    if (value != null) {
      result
        ..add('projects_ALL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.projects_NONE;
    if (value != null) {
      result
        ..add('projects_NONE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.projects_SINGLE;
    if (value != null) {
      result
        ..add('projects_SINGLE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.projects_SOME;
    if (value != null) {
      result
        ..add('projects_SOME')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProjectWhere)));
    }
    value = object.projectsConnection_ALL;
    if (value != null) {
      result
        ..add('projectsConnection_ALL')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    value = object.projectsConnection_NONE;
    if (value != null) {
      result
        ..add('projectsConnection_NONE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    value = object.projectsConnection_SINGLE;
    if (value != null) {
      result
        ..add('projectsConnection_SINGLE')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    value = object.projectsConnection_SOME;
    if (value != null) {
      result
        ..add('projectsConnection_SOME')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserProjectsConnectionWhere)));
    }
    return result;
  }

  @override
  GUserWhere deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserWhereBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'OR':
          result.OR.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUserWhere)]))!
              as BuiltList<Object?>);
          break;
        case 'AND':
          result.AND.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUserWhere)]))!
              as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT':
          result.id_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_IN':
          result.id_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id_NOT_IN':
          result.id_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id_CONTAINS':
          result.id_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_CONTAINS':
          result.id_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_STARTS_WITH':
          result.id_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_STARTS_WITH':
          result.id_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_ENDS_WITH':
          result.id_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id_NOT_ENDS_WITH':
          result.id_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username':
          result.username = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_NOT':
          result.username_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_IN':
          result.username_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'username_NOT_IN':
          result.username_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'username_CONTAINS':
          result.username_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_NOT_CONTAINS':
          result.username_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_STARTS_WITH':
          result.username_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_NOT_STARTS_WITH':
          result.username_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_ENDS_WITH':
          result.username_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'username_NOT_ENDS_WITH':
          result.username_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_NOT':
          result.displayName_NOT = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_IN':
          result.displayName_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'displayName_NOT_IN':
          result.displayName_NOT_IN.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'displayName_CONTAINS':
          result.displayName_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_NOT_CONTAINS':
          result.displayName_NOT_CONTAINS = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_STARTS_WITH':
          result.displayName_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_NOT_STARTS_WITH':
          result.displayName_NOT_STARTS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_ENDS_WITH':
          result.displayName_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'displayName_NOT_ENDS_WITH':
          result.displayName_NOT_ENDS_WITH = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'projectsAggregate':
          result.projectsAggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsAggregateInput))!
              as GUserProjectsAggregateInput);
          break;
        case 'projects_ALL':
          result.projects_ALL.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'projects_NONE':
          result.projects_NONE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'projects_SINGLE':
          result.projects_SINGLE.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'projects_SOME':
          result.projects_SOME.replace(serializers.deserialize(value,
              specifiedType: const FullType(GProjectWhere))! as GProjectWhere);
          break;
        case 'projectsConnection_ALL':
          result.projectsConnection_ALL.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
        case 'projectsConnection_NONE':
          result.projectsConnection_NONE.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
        case 'projectsConnection_SINGLE':
          result.projectsConnection_SINGLE.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
        case 'projectsConnection_SOME':
          result.projectsConnection_SOME.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GUserProjectsConnectionWhere))!
              as GUserProjectsConnectionWhere);
          break;
      }
    }

    return result.build();
  }
}

class _$GDateTime extends GDateTime {
  @override
  final String value;

  factory _$GDateTime([void Function(GDateTimeBuilder)? updates]) =>
      (new GDateTimeBuilder()..update(updates))._build();

  _$GDateTime._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDateTime', 'value');
  }

  @override
  GDateTime rebuild(void Function(GDateTimeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateTimeBuilder toBuilder() => new GDateTimeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateTime && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDateTime')..add('value', value))
        .toString();
  }
}

class GDateTimeBuilder implements Builder<GDateTime, GDateTimeBuilder> {
  _$GDateTime? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDateTimeBuilder();

  GDateTimeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateTime other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDateTime;
  }

  @override
  void update(void Function(GDateTimeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDateTime build() => _build();

  _$GDateTime _build() {
    final _$result = _$v ??
        new _$GDateTime._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDateTime', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToAggregateInput extends GPageBelongsToAggregateInput {
  @override
  final int? count;
  @override
  final int? count_LT;
  @override
  final int? count_LTE;
  @override
  final int? count_GT;
  @override
  final int? count_GTE;
  @override
  final BuiltList<GPageBelongsToAggregateInput>? AND;
  @override
  final BuiltList<GPageBelongsToAggregateInput>? OR;
  @override
  final GPageBelongsToNodeAggregationWhereInput? node;

  factory _$GPageBelongsToAggregateInput(
          [void Function(GPageBelongsToAggregateInputBuilder)? updates]) =>
      (new GPageBelongsToAggregateInputBuilder()..update(updates))._build();

  _$GPageBelongsToAggregateInput._(
      {this.count,
      this.count_LT,
      this.count_LTE,
      this.count_GT,
      this.count_GTE,
      this.AND,
      this.OR,
      this.node})
      : super._();

  @override
  GPageBelongsToAggregateInput rebuild(
          void Function(GPageBelongsToAggregateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToAggregateInputBuilder toBuilder() =>
      new GPageBelongsToAggregateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToAggregateInput &&
        count == other.count &&
        count_LT == other.count_LT &&
        count_LTE == other.count_LTE &&
        count_GT == other.count_GT &&
        count_GTE == other.count_GTE &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, count.hashCode), count_LT.hashCode),
                            count_LTE.hashCode),
                        count_GT.hashCode),
                    count_GTE.hashCode),
                AND.hashCode),
            OR.hashCode),
        node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToAggregateInput')
          ..add('count', count)
          ..add('count_LT', count_LT)
          ..add('count_LTE', count_LTE)
          ..add('count_GT', count_GT)
          ..add('count_GTE', count_GTE)
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node))
        .toString();
  }
}

class GPageBelongsToAggregateInputBuilder
    implements
        Builder<GPageBelongsToAggregateInput,
            GPageBelongsToAggregateInputBuilder> {
  _$GPageBelongsToAggregateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  int? _count_LT;
  int? get count_LT => _$this._count_LT;
  set count_LT(int? count_LT) => _$this._count_LT = count_LT;

  int? _count_LTE;
  int? get count_LTE => _$this._count_LTE;
  set count_LTE(int? count_LTE) => _$this._count_LTE = count_LTE;

  int? _count_GT;
  int? get count_GT => _$this._count_GT;
  set count_GT(int? count_GT) => _$this._count_GT = count_GT;

  int? _count_GTE;
  int? get count_GTE => _$this._count_GTE;
  set count_GTE(int? count_GTE) => _$this._count_GTE = count_GTE;

  ListBuilder<GPageBelongsToAggregateInput>? _AND;
  ListBuilder<GPageBelongsToAggregateInput> get AND =>
      _$this._AND ??= new ListBuilder<GPageBelongsToAggregateInput>();
  set AND(ListBuilder<GPageBelongsToAggregateInput>? AND) => _$this._AND = AND;

  ListBuilder<GPageBelongsToAggregateInput>? _OR;
  ListBuilder<GPageBelongsToAggregateInput> get OR =>
      _$this._OR ??= new ListBuilder<GPageBelongsToAggregateInput>();
  set OR(ListBuilder<GPageBelongsToAggregateInput>? OR) => _$this._OR = OR;

  GPageBelongsToNodeAggregationWhereInputBuilder? _node;
  GPageBelongsToNodeAggregationWhereInputBuilder get node =>
      _$this._node ??= new GPageBelongsToNodeAggregationWhereInputBuilder();
  set node(GPageBelongsToNodeAggregationWhereInputBuilder? node) =>
      _$this._node = node;

  GPageBelongsToAggregateInputBuilder();

  GPageBelongsToAggregateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _count_LT = $v.count_LT;
      _count_LTE = $v.count_LTE;
      _count_GT = $v.count_GT;
      _count_GTE = $v.count_GTE;
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToAggregateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToAggregateInput;
  }

  @override
  void update(void Function(GPageBelongsToAggregateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToAggregateInput build() => _build();

  _$GPageBelongsToAggregateInput _build() {
    _$GPageBelongsToAggregateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToAggregateInput._(
              count: count,
              count_LT: count_LT,
              count_LTE: count_LTE,
              count_GT: count_GT,
              count_GTE: count_GTE,
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToAggregateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToConnectFieldInput
    extends GPageBelongsToConnectFieldInput {
  @override
  final GProjectConnectWhere? where;
  @override
  final GProjectConnectInput? connect;

  factory _$GPageBelongsToConnectFieldInput(
          [void Function(GPageBelongsToConnectFieldInputBuilder)? updates]) =>
      (new GPageBelongsToConnectFieldInputBuilder()..update(updates))._build();

  _$GPageBelongsToConnectFieldInput._({this.where, this.connect}) : super._();

  @override
  GPageBelongsToConnectFieldInput rebuild(
          void Function(GPageBelongsToConnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToConnectFieldInputBuilder toBuilder() =>
      new GPageBelongsToConnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToConnectFieldInput &&
        where == other.where &&
        connect == other.connect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), connect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToConnectFieldInput')
          ..add('where', where)
          ..add('connect', connect))
        .toString();
  }
}

class GPageBelongsToConnectFieldInputBuilder
    implements
        Builder<GPageBelongsToConnectFieldInput,
            GPageBelongsToConnectFieldInputBuilder> {
  _$GPageBelongsToConnectFieldInput? _$v;

  GProjectConnectWhereBuilder? _where;
  GProjectConnectWhereBuilder get where =>
      _$this._where ??= new GProjectConnectWhereBuilder();
  set where(GProjectConnectWhereBuilder? where) => _$this._where = where;

  GProjectConnectInputBuilder? _connect;
  GProjectConnectInputBuilder get connect =>
      _$this._connect ??= new GProjectConnectInputBuilder();
  set connect(GProjectConnectInputBuilder? connect) =>
      _$this._connect = connect;

  GPageBelongsToConnectFieldInputBuilder();

  GPageBelongsToConnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToConnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToConnectFieldInput;
  }

  @override
  void update(void Function(GPageBelongsToConnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToConnectFieldInput build() => _build();

  _$GPageBelongsToConnectFieldInput _build() {
    _$GPageBelongsToConnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToConnectFieldInput._(
              where: _where?.build(), connect: _connect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'connect';
        _connect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToConnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToConnectionSort extends GPageBelongsToConnectionSort {
  @override
  final GProjectSort? node;

  factory _$GPageBelongsToConnectionSort(
          [void Function(GPageBelongsToConnectionSortBuilder)? updates]) =>
      (new GPageBelongsToConnectionSortBuilder()..update(updates))._build();

  _$GPageBelongsToConnectionSort._({this.node}) : super._();

  @override
  GPageBelongsToConnectionSort rebuild(
          void Function(GPageBelongsToConnectionSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToConnectionSortBuilder toBuilder() =>
      new GPageBelongsToConnectionSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToConnectionSort && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToConnectionSort')
          ..add('node', node))
        .toString();
  }
}

class GPageBelongsToConnectionSortBuilder
    implements
        Builder<GPageBelongsToConnectionSort,
            GPageBelongsToConnectionSortBuilder> {
  _$GPageBelongsToConnectionSort? _$v;

  GProjectSortBuilder? _node;
  GProjectSortBuilder get node => _$this._node ??= new GProjectSortBuilder();
  set node(GProjectSortBuilder? node) => _$this._node = node;

  GPageBelongsToConnectionSortBuilder();

  GPageBelongsToConnectionSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToConnectionSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToConnectionSort;
  }

  @override
  void update(void Function(GPageBelongsToConnectionSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToConnectionSort build() => _build();

  _$GPageBelongsToConnectionSort _build() {
    _$GPageBelongsToConnectionSort _$result;
    try {
      _$result =
          _$v ?? new _$GPageBelongsToConnectionSort._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToConnectionSort', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToConnectionWhere extends GPageBelongsToConnectionWhere {
  @override
  final BuiltList<GPageBelongsToConnectionWhere>? AND;
  @override
  final BuiltList<GPageBelongsToConnectionWhere>? OR;
  @override
  final GProjectWhere? node;
  @override
  final GProjectWhere? node_NOT;

  factory _$GPageBelongsToConnectionWhere(
          [void Function(GPageBelongsToConnectionWhereBuilder)? updates]) =>
      (new GPageBelongsToConnectionWhereBuilder()..update(updates))._build();

  _$GPageBelongsToConnectionWhere._(
      {this.AND, this.OR, this.node, this.node_NOT})
      : super._();

  @override
  GPageBelongsToConnectionWhere rebuild(
          void Function(GPageBelongsToConnectionWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToConnectionWhereBuilder toBuilder() =>
      new GPageBelongsToConnectionWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToConnectionWhere &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node &&
        node_NOT == other.node_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), node.hashCode),
        node_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToConnectionWhere')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node)
          ..add('node_NOT', node_NOT))
        .toString();
  }
}

class GPageBelongsToConnectionWhereBuilder
    implements
        Builder<GPageBelongsToConnectionWhere,
            GPageBelongsToConnectionWhereBuilder> {
  _$GPageBelongsToConnectionWhere? _$v;

  ListBuilder<GPageBelongsToConnectionWhere>? _AND;
  ListBuilder<GPageBelongsToConnectionWhere> get AND =>
      _$this._AND ??= new ListBuilder<GPageBelongsToConnectionWhere>();
  set AND(ListBuilder<GPageBelongsToConnectionWhere>? AND) => _$this._AND = AND;

  ListBuilder<GPageBelongsToConnectionWhere>? _OR;
  ListBuilder<GPageBelongsToConnectionWhere> get OR =>
      _$this._OR ??= new ListBuilder<GPageBelongsToConnectionWhere>();
  set OR(ListBuilder<GPageBelongsToConnectionWhere>? OR) => _$this._OR = OR;

  GProjectWhereBuilder? _node;
  GProjectWhereBuilder get node => _$this._node ??= new GProjectWhereBuilder();
  set node(GProjectWhereBuilder? node) => _$this._node = node;

  GProjectWhereBuilder? _node_NOT;
  GProjectWhereBuilder get node_NOT =>
      _$this._node_NOT ??= new GProjectWhereBuilder();
  set node_NOT(GProjectWhereBuilder? node_NOT) => _$this._node_NOT = node_NOT;

  GPageBelongsToConnectionWhereBuilder();

  GPageBelongsToConnectionWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _node_NOT = $v.node_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToConnectionWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToConnectionWhere;
  }

  @override
  void update(void Function(GPageBelongsToConnectionWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToConnectionWhere build() => _build();

  _$GPageBelongsToConnectionWhere _build() {
    _$GPageBelongsToConnectionWhere _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToConnectionWhere._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build(),
              node_NOT: _node_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
        _$failedField = 'node_NOT';
        _node_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToConnectionWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToConnectOrCreateFieldInput
    extends GPageBelongsToConnectOrCreateFieldInput {
  @override
  final GProjectConnectOrCreateWhere where;
  @override
  final GPageBelongsToConnectOrCreateFieldInputOnCreate onCreate;

  factory _$GPageBelongsToConnectOrCreateFieldInput(
          [void Function(GPageBelongsToConnectOrCreateFieldInputBuilder)?
              updates]) =>
      (new GPageBelongsToConnectOrCreateFieldInputBuilder()..update(updates))
          ._build();

  _$GPageBelongsToConnectOrCreateFieldInput._(
      {required this.where, required this.onCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GPageBelongsToConnectOrCreateFieldInput', 'where');
    BuiltValueNullFieldError.checkNotNull(
        onCreate, r'GPageBelongsToConnectOrCreateFieldInput', 'onCreate');
  }

  @override
  GPageBelongsToConnectOrCreateFieldInput rebuild(
          void Function(GPageBelongsToConnectOrCreateFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToConnectOrCreateFieldInputBuilder toBuilder() =>
      new GPageBelongsToConnectOrCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToConnectOrCreateFieldInput &&
        where == other.where &&
        onCreate == other.onCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), onCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageBelongsToConnectOrCreateFieldInput')
          ..add('where', where)
          ..add('onCreate', onCreate))
        .toString();
  }
}

class GPageBelongsToConnectOrCreateFieldInputBuilder
    implements
        Builder<GPageBelongsToConnectOrCreateFieldInput,
            GPageBelongsToConnectOrCreateFieldInputBuilder> {
  _$GPageBelongsToConnectOrCreateFieldInput? _$v;

  GProjectConnectOrCreateWhereBuilder? _where;
  GProjectConnectOrCreateWhereBuilder get where =>
      _$this._where ??= new GProjectConnectOrCreateWhereBuilder();
  set where(GProjectConnectOrCreateWhereBuilder? where) =>
      _$this._where = where;

  GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder? _onCreate;
  GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder get onCreate =>
      _$this._onCreate ??=
          new GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder();
  set onCreate(
          GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder? onCreate) =>
      _$this._onCreate = onCreate;

  GPageBelongsToConnectOrCreateFieldInputBuilder();

  GPageBelongsToConnectOrCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where.toBuilder();
      _onCreate = $v.onCreate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToConnectOrCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToConnectOrCreateFieldInput;
  }

  @override
  void update(
      void Function(GPageBelongsToConnectOrCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToConnectOrCreateFieldInput build() => _build();

  _$GPageBelongsToConnectOrCreateFieldInput _build() {
    _$GPageBelongsToConnectOrCreateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToConnectOrCreateFieldInput._(
              where: where.build(), onCreate: onCreate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        where.build();
        _$failedField = 'onCreate';
        onCreate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToConnectOrCreateFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToConnectOrCreateFieldInputOnCreate
    extends GPageBelongsToConnectOrCreateFieldInputOnCreate {
  @override
  final GProjectOnCreateInput node;

  factory _$GPageBelongsToConnectOrCreateFieldInputOnCreate(
          [void Function(
                  GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder)?
              updates]) =>
      (new GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder()
            ..update(updates))
          ._build();

  _$GPageBelongsToConnectOrCreateFieldInputOnCreate._({required this.node})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageBelongsToConnectOrCreateFieldInputOnCreate', 'node');
  }

  @override
  GPageBelongsToConnectOrCreateFieldInputOnCreate rebuild(
          void Function(GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder toBuilder() =>
      new GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToConnectOrCreateFieldInputOnCreate &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageBelongsToConnectOrCreateFieldInputOnCreate')
          ..add('node', node))
        .toString();
  }
}

class GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder
    implements
        Builder<GPageBelongsToConnectOrCreateFieldInputOnCreate,
            GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder> {
  _$GPageBelongsToConnectOrCreateFieldInputOnCreate? _$v;

  GProjectOnCreateInputBuilder? _node;
  GProjectOnCreateInputBuilder get node =>
      _$this._node ??= new GProjectOnCreateInputBuilder();
  set node(GProjectOnCreateInputBuilder? node) => _$this._node = node;

  GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder();

  GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToConnectOrCreateFieldInputOnCreate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToConnectOrCreateFieldInputOnCreate;
  }

  @override
  void update(
      void Function(GPageBelongsToConnectOrCreateFieldInputOnCreateBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToConnectOrCreateFieldInputOnCreate build() => _build();

  _$GPageBelongsToConnectOrCreateFieldInputOnCreate _build() {
    _$GPageBelongsToConnectOrCreateFieldInputOnCreate _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToConnectOrCreateFieldInputOnCreate._(
              node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToConnectOrCreateFieldInputOnCreate',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToCreateFieldInput extends GPageBelongsToCreateFieldInput {
  @override
  final GProjectCreateInput node;

  factory _$GPageBelongsToCreateFieldInput(
          [void Function(GPageBelongsToCreateFieldInputBuilder)? updates]) =>
      (new GPageBelongsToCreateFieldInputBuilder()..update(updates))._build();

  _$GPageBelongsToCreateFieldInput._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageBelongsToCreateFieldInput', 'node');
  }

  @override
  GPageBelongsToCreateFieldInput rebuild(
          void Function(GPageBelongsToCreateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToCreateFieldInputBuilder toBuilder() =>
      new GPageBelongsToCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToCreateFieldInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToCreateFieldInput')
          ..add('node', node))
        .toString();
  }
}

class GPageBelongsToCreateFieldInputBuilder
    implements
        Builder<GPageBelongsToCreateFieldInput,
            GPageBelongsToCreateFieldInputBuilder> {
  _$GPageBelongsToCreateFieldInput? _$v;

  GProjectCreateInputBuilder? _node;
  GProjectCreateInputBuilder get node =>
      _$this._node ??= new GProjectCreateInputBuilder();
  set node(GProjectCreateInputBuilder? node) => _$this._node = node;

  GPageBelongsToCreateFieldInputBuilder();

  GPageBelongsToCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToCreateFieldInput;
  }

  @override
  void update(void Function(GPageBelongsToCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToCreateFieldInput build() => _build();

  _$GPageBelongsToCreateFieldInput _build() {
    _$GPageBelongsToCreateFieldInput _$result;
    try {
      _$result =
          _$v ?? new _$GPageBelongsToCreateFieldInput._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToCreateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToDeleteFieldInput extends GPageBelongsToDeleteFieldInput {
  @override
  final GPageBelongsToConnectionWhere? where;
  @override
  final GProjectDeleteInput? delete;

  factory _$GPageBelongsToDeleteFieldInput(
          [void Function(GPageBelongsToDeleteFieldInputBuilder)? updates]) =>
      (new GPageBelongsToDeleteFieldInputBuilder()..update(updates))._build();

  _$GPageBelongsToDeleteFieldInput._({this.where, this.delete}) : super._();

  @override
  GPageBelongsToDeleteFieldInput rebuild(
          void Function(GPageBelongsToDeleteFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToDeleteFieldInputBuilder toBuilder() =>
      new GPageBelongsToDeleteFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToDeleteFieldInput &&
        where == other.where &&
        delete == other.delete;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), delete.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToDeleteFieldInput')
          ..add('where', where)
          ..add('delete', delete))
        .toString();
  }
}

class GPageBelongsToDeleteFieldInputBuilder
    implements
        Builder<GPageBelongsToDeleteFieldInput,
            GPageBelongsToDeleteFieldInputBuilder> {
  _$GPageBelongsToDeleteFieldInput? _$v;

  GPageBelongsToConnectionWhereBuilder? _where;
  GPageBelongsToConnectionWhereBuilder get where =>
      _$this._where ??= new GPageBelongsToConnectionWhereBuilder();
  set where(GPageBelongsToConnectionWhereBuilder? where) =>
      _$this._where = where;

  GProjectDeleteInputBuilder? _delete;
  GProjectDeleteInputBuilder get delete =>
      _$this._delete ??= new GProjectDeleteInputBuilder();
  set delete(GProjectDeleteInputBuilder? delete) => _$this._delete = delete;

  GPageBelongsToDeleteFieldInputBuilder();

  GPageBelongsToDeleteFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToDeleteFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToDeleteFieldInput;
  }

  @override
  void update(void Function(GPageBelongsToDeleteFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToDeleteFieldInput build() => _build();

  _$GPageBelongsToDeleteFieldInput _build() {
    _$GPageBelongsToDeleteFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToDeleteFieldInput._(
              where: _where?.build(), delete: _delete?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'delete';
        _delete?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToDeleteFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToDisconnectFieldInput
    extends GPageBelongsToDisconnectFieldInput {
  @override
  final GPageBelongsToConnectionWhere? where;
  @override
  final GProjectDisconnectInput? disconnect;

  factory _$GPageBelongsToDisconnectFieldInput(
          [void Function(GPageBelongsToDisconnectFieldInputBuilder)?
              updates]) =>
      (new GPageBelongsToDisconnectFieldInputBuilder()..update(updates))
          ._build();

  _$GPageBelongsToDisconnectFieldInput._({this.where, this.disconnect})
      : super._();

  @override
  GPageBelongsToDisconnectFieldInput rebuild(
          void Function(GPageBelongsToDisconnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToDisconnectFieldInputBuilder toBuilder() =>
      new GPageBelongsToDisconnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToDisconnectFieldInput &&
        where == other.where &&
        disconnect == other.disconnect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), disconnect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToDisconnectFieldInput')
          ..add('where', where)
          ..add('disconnect', disconnect))
        .toString();
  }
}

class GPageBelongsToDisconnectFieldInputBuilder
    implements
        Builder<GPageBelongsToDisconnectFieldInput,
            GPageBelongsToDisconnectFieldInputBuilder> {
  _$GPageBelongsToDisconnectFieldInput? _$v;

  GPageBelongsToConnectionWhereBuilder? _where;
  GPageBelongsToConnectionWhereBuilder get where =>
      _$this._where ??= new GPageBelongsToConnectionWhereBuilder();
  set where(GPageBelongsToConnectionWhereBuilder? where) =>
      _$this._where = where;

  GProjectDisconnectInputBuilder? _disconnect;
  GProjectDisconnectInputBuilder get disconnect =>
      _$this._disconnect ??= new GProjectDisconnectInputBuilder();
  set disconnect(GProjectDisconnectInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GPageBelongsToDisconnectFieldInputBuilder();

  GPageBelongsToDisconnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToDisconnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToDisconnectFieldInput;
  }

  @override
  void update(
      void Function(GPageBelongsToDisconnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToDisconnectFieldInput build() => _build();

  _$GPageBelongsToDisconnectFieldInput _build() {
    _$GPageBelongsToDisconnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToDisconnectFieldInput._(
              where: _where?.build(), disconnect: _disconnect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToDisconnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToFieldInput extends GPageBelongsToFieldInput {
  @override
  final GPageBelongsToCreateFieldInput? create;
  @override
  final GPageBelongsToConnectFieldInput? connect;
  @override
  final GPageBelongsToConnectOrCreateFieldInput? connectOrCreate;

  factory _$GPageBelongsToFieldInput(
          [void Function(GPageBelongsToFieldInputBuilder)? updates]) =>
      (new GPageBelongsToFieldInputBuilder()..update(updates))._build();

  _$GPageBelongsToFieldInput._(
      {this.create, this.connect, this.connectOrCreate})
      : super._();

  @override
  GPageBelongsToFieldInput rebuild(
          void Function(GPageBelongsToFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToFieldInputBuilder toBuilder() =>
      new GPageBelongsToFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToFieldInput &&
        create == other.create &&
        connect == other.connect &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, create.hashCode), connect.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToFieldInput')
          ..add('create', create)
          ..add('connect', connect)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GPageBelongsToFieldInputBuilder
    implements
        Builder<GPageBelongsToFieldInput, GPageBelongsToFieldInputBuilder> {
  _$GPageBelongsToFieldInput? _$v;

  GPageBelongsToCreateFieldInputBuilder? _create;
  GPageBelongsToCreateFieldInputBuilder get create =>
      _$this._create ??= new GPageBelongsToCreateFieldInputBuilder();
  set create(GPageBelongsToCreateFieldInputBuilder? create) =>
      _$this._create = create;

  GPageBelongsToConnectFieldInputBuilder? _connect;
  GPageBelongsToConnectFieldInputBuilder get connect =>
      _$this._connect ??= new GPageBelongsToConnectFieldInputBuilder();
  set connect(GPageBelongsToConnectFieldInputBuilder? connect) =>
      _$this._connect = connect;

  GPageBelongsToConnectOrCreateFieldInputBuilder? _connectOrCreate;
  GPageBelongsToConnectOrCreateFieldInputBuilder get connectOrCreate =>
      _$this._connectOrCreate ??=
          new GPageBelongsToConnectOrCreateFieldInputBuilder();
  set connectOrCreate(
          GPageBelongsToConnectOrCreateFieldInputBuilder? connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GPageBelongsToFieldInputBuilder();

  GPageBelongsToFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _create = $v.create?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToFieldInput;
  }

  @override
  void update(void Function(GPageBelongsToFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToFieldInput build() => _build();

  _$GPageBelongsToFieldInput _build() {
    _$GPageBelongsToFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToFieldInput._(
              create: _create?.build(),
              connect: _connect?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToNodeAggregationWhereInput
    extends GPageBelongsToNodeAggregationWhereInput {
  @override
  final BuiltList<GPageBelongsToNodeAggregationWhereInput>? AND;
  @override
  final BuiltList<GPageBelongsToNodeAggregationWhereInput>? OR;
  @override
  final String? id_EQUAL;
  @override
  final String? title_EQUAL;
  @override
  final double? title_AVERAGE_EQUAL;
  @override
  final int? title_LONGEST_EQUAL;
  @override
  final int? title_SHORTEST_EQUAL;
  @override
  final int? title_GT;
  @override
  final double? title_AVERAGE_GT;
  @override
  final int? title_LONGEST_GT;
  @override
  final int? title_SHORTEST_GT;
  @override
  final int? title_GTE;
  @override
  final double? title_AVERAGE_GTE;
  @override
  final int? title_LONGEST_GTE;
  @override
  final int? title_SHORTEST_GTE;
  @override
  final int? title_LT;
  @override
  final double? title_AVERAGE_LT;
  @override
  final int? title_LONGEST_LT;
  @override
  final int? title_SHORTEST_LT;
  @override
  final int? title_LTE;
  @override
  final double? title_AVERAGE_LTE;
  @override
  final int? title_LONGEST_LTE;
  @override
  final int? title_SHORTEST_LTE;
  @override
  final String? description_EQUAL;
  @override
  final double? description_AVERAGE_EQUAL;
  @override
  final int? description_LONGEST_EQUAL;
  @override
  final int? description_SHORTEST_EQUAL;
  @override
  final int? description_GT;
  @override
  final double? description_AVERAGE_GT;
  @override
  final int? description_LONGEST_GT;
  @override
  final int? description_SHORTEST_GT;
  @override
  final int? description_GTE;
  @override
  final double? description_AVERAGE_GTE;
  @override
  final int? description_LONGEST_GTE;
  @override
  final int? description_SHORTEST_GTE;
  @override
  final int? description_LT;
  @override
  final double? description_AVERAGE_LT;
  @override
  final int? description_LONGEST_LT;
  @override
  final int? description_SHORTEST_LT;
  @override
  final int? description_LTE;
  @override
  final double? description_AVERAGE_LTE;
  @override
  final int? description_LONGEST_LTE;
  @override
  final int? description_SHORTEST_LTE;
  @override
  final GDateTime? creationDate_EQUAL;
  @override
  final GDateTime? creationDate_MIN_EQUAL;
  @override
  final GDateTime? creationDate_MAX_EQUAL;
  @override
  final GDateTime? creationDate_GT;
  @override
  final GDateTime? creationDate_MIN_GT;
  @override
  final GDateTime? creationDate_MAX_GT;
  @override
  final GDateTime? creationDate_GTE;
  @override
  final GDateTime? creationDate_MIN_GTE;
  @override
  final GDateTime? creationDate_MAX_GTE;
  @override
  final GDateTime? creationDate_LT;
  @override
  final GDateTime? creationDate_MIN_LT;
  @override
  final GDateTime? creationDate_MAX_LT;
  @override
  final GDateTime? creationDate_LTE;
  @override
  final GDateTime? creationDate_MIN_LTE;
  @override
  final GDateTime? creationDate_MAX_LTE;
  @override
  final GDateTime? modifiedDate_EQUAL;
  @override
  final GDateTime? modifiedDate_MIN_EQUAL;
  @override
  final GDateTime? modifiedDate_MAX_EQUAL;
  @override
  final GDateTime? modifiedDate_GT;
  @override
  final GDateTime? modifiedDate_MIN_GT;
  @override
  final GDateTime? modifiedDate_MAX_GT;
  @override
  final GDateTime? modifiedDate_GTE;
  @override
  final GDateTime? modifiedDate_MIN_GTE;
  @override
  final GDateTime? modifiedDate_MAX_GTE;
  @override
  final GDateTime? modifiedDate_LT;
  @override
  final GDateTime? modifiedDate_MIN_LT;
  @override
  final GDateTime? modifiedDate_MAX_LT;
  @override
  final GDateTime? modifiedDate_LTE;
  @override
  final GDateTime? modifiedDate_MIN_LTE;
  @override
  final GDateTime? modifiedDate_MAX_LTE;

  factory _$GPageBelongsToNodeAggregationWhereInput(
          [void Function(GPageBelongsToNodeAggregationWhereInputBuilder)?
              updates]) =>
      (new GPageBelongsToNodeAggregationWhereInputBuilder()..update(updates))
          ._build();

  _$GPageBelongsToNodeAggregationWhereInput._(
      {this.AND,
      this.OR,
      this.id_EQUAL,
      this.title_EQUAL,
      this.title_AVERAGE_EQUAL,
      this.title_LONGEST_EQUAL,
      this.title_SHORTEST_EQUAL,
      this.title_GT,
      this.title_AVERAGE_GT,
      this.title_LONGEST_GT,
      this.title_SHORTEST_GT,
      this.title_GTE,
      this.title_AVERAGE_GTE,
      this.title_LONGEST_GTE,
      this.title_SHORTEST_GTE,
      this.title_LT,
      this.title_AVERAGE_LT,
      this.title_LONGEST_LT,
      this.title_SHORTEST_LT,
      this.title_LTE,
      this.title_AVERAGE_LTE,
      this.title_LONGEST_LTE,
      this.title_SHORTEST_LTE,
      this.description_EQUAL,
      this.description_AVERAGE_EQUAL,
      this.description_LONGEST_EQUAL,
      this.description_SHORTEST_EQUAL,
      this.description_GT,
      this.description_AVERAGE_GT,
      this.description_LONGEST_GT,
      this.description_SHORTEST_GT,
      this.description_GTE,
      this.description_AVERAGE_GTE,
      this.description_LONGEST_GTE,
      this.description_SHORTEST_GTE,
      this.description_LT,
      this.description_AVERAGE_LT,
      this.description_LONGEST_LT,
      this.description_SHORTEST_LT,
      this.description_LTE,
      this.description_AVERAGE_LTE,
      this.description_LONGEST_LTE,
      this.description_SHORTEST_LTE,
      this.creationDate_EQUAL,
      this.creationDate_MIN_EQUAL,
      this.creationDate_MAX_EQUAL,
      this.creationDate_GT,
      this.creationDate_MIN_GT,
      this.creationDate_MAX_GT,
      this.creationDate_GTE,
      this.creationDate_MIN_GTE,
      this.creationDate_MAX_GTE,
      this.creationDate_LT,
      this.creationDate_MIN_LT,
      this.creationDate_MAX_LT,
      this.creationDate_LTE,
      this.creationDate_MIN_LTE,
      this.creationDate_MAX_LTE,
      this.modifiedDate_EQUAL,
      this.modifiedDate_MIN_EQUAL,
      this.modifiedDate_MAX_EQUAL,
      this.modifiedDate_GT,
      this.modifiedDate_MIN_GT,
      this.modifiedDate_MAX_GT,
      this.modifiedDate_GTE,
      this.modifiedDate_MIN_GTE,
      this.modifiedDate_MAX_GTE,
      this.modifiedDate_LT,
      this.modifiedDate_MIN_LT,
      this.modifiedDate_MAX_LT,
      this.modifiedDate_LTE,
      this.modifiedDate_MIN_LTE,
      this.modifiedDate_MAX_LTE})
      : super._();

  @override
  GPageBelongsToNodeAggregationWhereInput rebuild(
          void Function(GPageBelongsToNodeAggregationWhereInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToNodeAggregationWhereInputBuilder toBuilder() =>
      new GPageBelongsToNodeAggregationWhereInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToNodeAggregationWhereInput &&
        AND == other.AND &&
        OR == other.OR &&
        id_EQUAL == other.id_EQUAL &&
        title_EQUAL == other.title_EQUAL &&
        title_AVERAGE_EQUAL == other.title_AVERAGE_EQUAL &&
        title_LONGEST_EQUAL == other.title_LONGEST_EQUAL &&
        title_SHORTEST_EQUAL == other.title_SHORTEST_EQUAL &&
        title_GT == other.title_GT &&
        title_AVERAGE_GT == other.title_AVERAGE_GT &&
        title_LONGEST_GT == other.title_LONGEST_GT &&
        title_SHORTEST_GT == other.title_SHORTEST_GT &&
        title_GTE == other.title_GTE &&
        title_AVERAGE_GTE == other.title_AVERAGE_GTE &&
        title_LONGEST_GTE == other.title_LONGEST_GTE &&
        title_SHORTEST_GTE == other.title_SHORTEST_GTE &&
        title_LT == other.title_LT &&
        title_AVERAGE_LT == other.title_AVERAGE_LT &&
        title_LONGEST_LT == other.title_LONGEST_LT &&
        title_SHORTEST_LT == other.title_SHORTEST_LT &&
        title_LTE == other.title_LTE &&
        title_AVERAGE_LTE == other.title_AVERAGE_LTE &&
        title_LONGEST_LTE == other.title_LONGEST_LTE &&
        title_SHORTEST_LTE == other.title_SHORTEST_LTE &&
        description_EQUAL == other.description_EQUAL &&
        description_AVERAGE_EQUAL == other.description_AVERAGE_EQUAL &&
        description_LONGEST_EQUAL == other.description_LONGEST_EQUAL &&
        description_SHORTEST_EQUAL == other.description_SHORTEST_EQUAL &&
        description_GT == other.description_GT &&
        description_AVERAGE_GT == other.description_AVERAGE_GT &&
        description_LONGEST_GT == other.description_LONGEST_GT &&
        description_SHORTEST_GT == other.description_SHORTEST_GT &&
        description_GTE == other.description_GTE &&
        description_AVERAGE_GTE == other.description_AVERAGE_GTE &&
        description_LONGEST_GTE == other.description_LONGEST_GTE &&
        description_SHORTEST_GTE == other.description_SHORTEST_GTE &&
        description_LT == other.description_LT &&
        description_AVERAGE_LT == other.description_AVERAGE_LT &&
        description_LONGEST_LT == other.description_LONGEST_LT &&
        description_SHORTEST_LT == other.description_SHORTEST_LT &&
        description_LTE == other.description_LTE &&
        description_AVERAGE_LTE == other.description_AVERAGE_LTE &&
        description_LONGEST_LTE == other.description_LONGEST_LTE &&
        description_SHORTEST_LTE == other.description_SHORTEST_LTE &&
        creationDate_EQUAL == other.creationDate_EQUAL &&
        creationDate_MIN_EQUAL == other.creationDate_MIN_EQUAL &&
        creationDate_MAX_EQUAL == other.creationDate_MAX_EQUAL &&
        creationDate_GT == other.creationDate_GT &&
        creationDate_MIN_GT == other.creationDate_MIN_GT &&
        creationDate_MAX_GT == other.creationDate_MAX_GT &&
        creationDate_GTE == other.creationDate_GTE &&
        creationDate_MIN_GTE == other.creationDate_MIN_GTE &&
        creationDate_MAX_GTE == other.creationDate_MAX_GTE &&
        creationDate_LT == other.creationDate_LT &&
        creationDate_MIN_LT == other.creationDate_MIN_LT &&
        creationDate_MAX_LT == other.creationDate_MAX_LT &&
        creationDate_LTE == other.creationDate_LTE &&
        creationDate_MIN_LTE == other.creationDate_MIN_LTE &&
        creationDate_MAX_LTE == other.creationDate_MAX_LTE &&
        modifiedDate_EQUAL == other.modifiedDate_EQUAL &&
        modifiedDate_MIN_EQUAL == other.modifiedDate_MIN_EQUAL &&
        modifiedDate_MAX_EQUAL == other.modifiedDate_MAX_EQUAL &&
        modifiedDate_GT == other.modifiedDate_GT &&
        modifiedDate_MIN_GT == other.modifiedDate_MIN_GT &&
        modifiedDate_MAX_GT == other.modifiedDate_MAX_GT &&
        modifiedDate_GTE == other.modifiedDate_GTE &&
        modifiedDate_MIN_GTE == other.modifiedDate_MIN_GTE &&
        modifiedDate_MAX_GTE == other.modifiedDate_MAX_GTE &&
        modifiedDate_LT == other.modifiedDate_LT &&
        modifiedDate_MIN_LT == other.modifiedDate_MIN_LT &&
        modifiedDate_MAX_LT == other.modifiedDate_MAX_LT &&
        modifiedDate_LTE == other.modifiedDate_LTE &&
        modifiedDate_MIN_LTE == other.modifiedDate_MIN_LTE &&
        modifiedDate_MAX_LTE == other.modifiedDate_MAX_LTE;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), id_EQUAL.hashCode), title_EQUAL.hashCode), title_AVERAGE_EQUAL.hashCode), title_LONGEST_EQUAL.hashCode), title_SHORTEST_EQUAL.hashCode), title_GT.hashCode), title_AVERAGE_GT.hashCode), title_LONGEST_GT.hashCode), title_SHORTEST_GT.hashCode), title_GTE.hashCode), title_AVERAGE_GTE.hashCode), title_LONGEST_GTE.hashCode), title_SHORTEST_GTE.hashCode), title_LT.hashCode), title_AVERAGE_LT.hashCode), title_LONGEST_LT.hashCode), title_SHORTEST_LT.hashCode), title_LTE.hashCode), title_AVERAGE_LTE.hashCode), title_LONGEST_LTE.hashCode), title_SHORTEST_LTE.hashCode), description_EQUAL.hashCode), description_AVERAGE_EQUAL.hashCode), description_LONGEST_EQUAL.hashCode), description_SHORTEST_EQUAL.hashCode), description_GT.hashCode), description_AVERAGE_GT.hashCode), description_LONGEST_GT.hashCode), description_SHORTEST_GT.hashCode), description_GTE.hashCode), description_AVERAGE_GTE.hashCode), description_LONGEST_GTE.hashCode), description_SHORTEST_GTE.hashCode), description_LT.hashCode), description_AVERAGE_LT.hashCode), description_LONGEST_LT.hashCode), description_SHORTEST_LT.hashCode), description_LTE.hashCode), description_AVERAGE_LTE.hashCode), description_LONGEST_LTE.hashCode), description_SHORTEST_LTE.hashCode), creationDate_EQUAL.hashCode), creationDate_MIN_EQUAL.hashCode), creationDate_MAX_EQUAL.hashCode), creationDate_GT.hashCode), creationDate_MIN_GT.hashCode), creationDate_MAX_GT.hashCode), creationDate_GTE.hashCode), creationDate_MIN_GTE.hashCode), creationDate_MAX_GTE.hashCode), creationDate_LT.hashCode), creationDate_MIN_LT.hashCode),
                                                                                creationDate_MAX_LT.hashCode),
                                                                            creationDate_LTE.hashCode),
                                                                        creationDate_MIN_LTE.hashCode),
                                                                    creationDate_MAX_LTE.hashCode),
                                                                modifiedDate_EQUAL.hashCode),
                                                            modifiedDate_MIN_EQUAL.hashCode),
                                                        modifiedDate_MAX_EQUAL.hashCode),
                                                    modifiedDate_GT.hashCode),
                                                modifiedDate_MIN_GT.hashCode),
                                            modifiedDate_MAX_GT.hashCode),
                                        modifiedDate_GTE.hashCode),
                                    modifiedDate_MIN_GTE.hashCode),
                                modifiedDate_MAX_GTE.hashCode),
                            modifiedDate_LT.hashCode),
                        modifiedDate_MIN_LT.hashCode),
                    modifiedDate_MAX_LT.hashCode),
                modifiedDate_LTE.hashCode),
            modifiedDate_MIN_LTE.hashCode),
        modifiedDate_MAX_LTE.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageBelongsToNodeAggregationWhereInput')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('id_EQUAL', id_EQUAL)
          ..add('title_EQUAL', title_EQUAL)
          ..add('title_AVERAGE_EQUAL', title_AVERAGE_EQUAL)
          ..add('title_LONGEST_EQUAL', title_LONGEST_EQUAL)
          ..add('title_SHORTEST_EQUAL', title_SHORTEST_EQUAL)
          ..add('title_GT', title_GT)
          ..add('title_AVERAGE_GT', title_AVERAGE_GT)
          ..add('title_LONGEST_GT', title_LONGEST_GT)
          ..add('title_SHORTEST_GT', title_SHORTEST_GT)
          ..add('title_GTE', title_GTE)
          ..add('title_AVERAGE_GTE', title_AVERAGE_GTE)
          ..add('title_LONGEST_GTE', title_LONGEST_GTE)
          ..add('title_SHORTEST_GTE', title_SHORTEST_GTE)
          ..add('title_LT', title_LT)
          ..add('title_AVERAGE_LT', title_AVERAGE_LT)
          ..add('title_LONGEST_LT', title_LONGEST_LT)
          ..add('title_SHORTEST_LT', title_SHORTEST_LT)
          ..add('title_LTE', title_LTE)
          ..add('title_AVERAGE_LTE', title_AVERAGE_LTE)
          ..add('title_LONGEST_LTE', title_LONGEST_LTE)
          ..add('title_SHORTEST_LTE', title_SHORTEST_LTE)
          ..add('description_EQUAL', description_EQUAL)
          ..add('description_AVERAGE_EQUAL', description_AVERAGE_EQUAL)
          ..add('description_LONGEST_EQUAL', description_LONGEST_EQUAL)
          ..add('description_SHORTEST_EQUAL', description_SHORTEST_EQUAL)
          ..add('description_GT', description_GT)
          ..add('description_AVERAGE_GT', description_AVERAGE_GT)
          ..add('description_LONGEST_GT', description_LONGEST_GT)
          ..add('description_SHORTEST_GT', description_SHORTEST_GT)
          ..add('description_GTE', description_GTE)
          ..add('description_AVERAGE_GTE', description_AVERAGE_GTE)
          ..add('description_LONGEST_GTE', description_LONGEST_GTE)
          ..add('description_SHORTEST_GTE', description_SHORTEST_GTE)
          ..add('description_LT', description_LT)
          ..add('description_AVERAGE_LT', description_AVERAGE_LT)
          ..add('description_LONGEST_LT', description_LONGEST_LT)
          ..add('description_SHORTEST_LT', description_SHORTEST_LT)
          ..add('description_LTE', description_LTE)
          ..add('description_AVERAGE_LTE', description_AVERAGE_LTE)
          ..add('description_LONGEST_LTE', description_LONGEST_LTE)
          ..add('description_SHORTEST_LTE', description_SHORTEST_LTE)
          ..add('creationDate_EQUAL', creationDate_EQUAL)
          ..add('creationDate_MIN_EQUAL', creationDate_MIN_EQUAL)
          ..add('creationDate_MAX_EQUAL', creationDate_MAX_EQUAL)
          ..add('creationDate_GT', creationDate_GT)
          ..add('creationDate_MIN_GT', creationDate_MIN_GT)
          ..add('creationDate_MAX_GT', creationDate_MAX_GT)
          ..add('creationDate_GTE', creationDate_GTE)
          ..add('creationDate_MIN_GTE', creationDate_MIN_GTE)
          ..add('creationDate_MAX_GTE', creationDate_MAX_GTE)
          ..add('creationDate_LT', creationDate_LT)
          ..add('creationDate_MIN_LT', creationDate_MIN_LT)
          ..add('creationDate_MAX_LT', creationDate_MAX_LT)
          ..add('creationDate_LTE', creationDate_LTE)
          ..add('creationDate_MIN_LTE', creationDate_MIN_LTE)
          ..add('creationDate_MAX_LTE', creationDate_MAX_LTE)
          ..add('modifiedDate_EQUAL', modifiedDate_EQUAL)
          ..add('modifiedDate_MIN_EQUAL', modifiedDate_MIN_EQUAL)
          ..add('modifiedDate_MAX_EQUAL', modifiedDate_MAX_EQUAL)
          ..add('modifiedDate_GT', modifiedDate_GT)
          ..add('modifiedDate_MIN_GT', modifiedDate_MIN_GT)
          ..add('modifiedDate_MAX_GT', modifiedDate_MAX_GT)
          ..add('modifiedDate_GTE', modifiedDate_GTE)
          ..add('modifiedDate_MIN_GTE', modifiedDate_MIN_GTE)
          ..add('modifiedDate_MAX_GTE', modifiedDate_MAX_GTE)
          ..add('modifiedDate_LT', modifiedDate_LT)
          ..add('modifiedDate_MIN_LT', modifiedDate_MIN_LT)
          ..add('modifiedDate_MAX_LT', modifiedDate_MAX_LT)
          ..add('modifiedDate_LTE', modifiedDate_LTE)
          ..add('modifiedDate_MIN_LTE', modifiedDate_MIN_LTE)
          ..add('modifiedDate_MAX_LTE', modifiedDate_MAX_LTE))
        .toString();
  }
}

class GPageBelongsToNodeAggregationWhereInputBuilder
    implements
        Builder<GPageBelongsToNodeAggregationWhereInput,
            GPageBelongsToNodeAggregationWhereInputBuilder> {
  _$GPageBelongsToNodeAggregationWhereInput? _$v;

  ListBuilder<GPageBelongsToNodeAggregationWhereInput>? _AND;
  ListBuilder<GPageBelongsToNodeAggregationWhereInput> get AND =>
      _$this._AND ??=
          new ListBuilder<GPageBelongsToNodeAggregationWhereInput>();
  set AND(ListBuilder<GPageBelongsToNodeAggregationWhereInput>? AND) =>
      _$this._AND = AND;

  ListBuilder<GPageBelongsToNodeAggregationWhereInput>? _OR;
  ListBuilder<GPageBelongsToNodeAggregationWhereInput> get OR =>
      _$this._OR ??= new ListBuilder<GPageBelongsToNodeAggregationWhereInput>();
  set OR(ListBuilder<GPageBelongsToNodeAggregationWhereInput>? OR) =>
      _$this._OR = OR;

  String? _id_EQUAL;
  String? get id_EQUAL => _$this._id_EQUAL;
  set id_EQUAL(String? id_EQUAL) => _$this._id_EQUAL = id_EQUAL;

  String? _title_EQUAL;
  String? get title_EQUAL => _$this._title_EQUAL;
  set title_EQUAL(String? title_EQUAL) => _$this._title_EQUAL = title_EQUAL;

  double? _title_AVERAGE_EQUAL;
  double? get title_AVERAGE_EQUAL => _$this._title_AVERAGE_EQUAL;
  set title_AVERAGE_EQUAL(double? title_AVERAGE_EQUAL) =>
      _$this._title_AVERAGE_EQUAL = title_AVERAGE_EQUAL;

  int? _title_LONGEST_EQUAL;
  int? get title_LONGEST_EQUAL => _$this._title_LONGEST_EQUAL;
  set title_LONGEST_EQUAL(int? title_LONGEST_EQUAL) =>
      _$this._title_LONGEST_EQUAL = title_LONGEST_EQUAL;

  int? _title_SHORTEST_EQUAL;
  int? get title_SHORTEST_EQUAL => _$this._title_SHORTEST_EQUAL;
  set title_SHORTEST_EQUAL(int? title_SHORTEST_EQUAL) =>
      _$this._title_SHORTEST_EQUAL = title_SHORTEST_EQUAL;

  int? _title_GT;
  int? get title_GT => _$this._title_GT;
  set title_GT(int? title_GT) => _$this._title_GT = title_GT;

  double? _title_AVERAGE_GT;
  double? get title_AVERAGE_GT => _$this._title_AVERAGE_GT;
  set title_AVERAGE_GT(double? title_AVERAGE_GT) =>
      _$this._title_AVERAGE_GT = title_AVERAGE_GT;

  int? _title_LONGEST_GT;
  int? get title_LONGEST_GT => _$this._title_LONGEST_GT;
  set title_LONGEST_GT(int? title_LONGEST_GT) =>
      _$this._title_LONGEST_GT = title_LONGEST_GT;

  int? _title_SHORTEST_GT;
  int? get title_SHORTEST_GT => _$this._title_SHORTEST_GT;
  set title_SHORTEST_GT(int? title_SHORTEST_GT) =>
      _$this._title_SHORTEST_GT = title_SHORTEST_GT;

  int? _title_GTE;
  int? get title_GTE => _$this._title_GTE;
  set title_GTE(int? title_GTE) => _$this._title_GTE = title_GTE;

  double? _title_AVERAGE_GTE;
  double? get title_AVERAGE_GTE => _$this._title_AVERAGE_GTE;
  set title_AVERAGE_GTE(double? title_AVERAGE_GTE) =>
      _$this._title_AVERAGE_GTE = title_AVERAGE_GTE;

  int? _title_LONGEST_GTE;
  int? get title_LONGEST_GTE => _$this._title_LONGEST_GTE;
  set title_LONGEST_GTE(int? title_LONGEST_GTE) =>
      _$this._title_LONGEST_GTE = title_LONGEST_GTE;

  int? _title_SHORTEST_GTE;
  int? get title_SHORTEST_GTE => _$this._title_SHORTEST_GTE;
  set title_SHORTEST_GTE(int? title_SHORTEST_GTE) =>
      _$this._title_SHORTEST_GTE = title_SHORTEST_GTE;

  int? _title_LT;
  int? get title_LT => _$this._title_LT;
  set title_LT(int? title_LT) => _$this._title_LT = title_LT;

  double? _title_AVERAGE_LT;
  double? get title_AVERAGE_LT => _$this._title_AVERAGE_LT;
  set title_AVERAGE_LT(double? title_AVERAGE_LT) =>
      _$this._title_AVERAGE_LT = title_AVERAGE_LT;

  int? _title_LONGEST_LT;
  int? get title_LONGEST_LT => _$this._title_LONGEST_LT;
  set title_LONGEST_LT(int? title_LONGEST_LT) =>
      _$this._title_LONGEST_LT = title_LONGEST_LT;

  int? _title_SHORTEST_LT;
  int? get title_SHORTEST_LT => _$this._title_SHORTEST_LT;
  set title_SHORTEST_LT(int? title_SHORTEST_LT) =>
      _$this._title_SHORTEST_LT = title_SHORTEST_LT;

  int? _title_LTE;
  int? get title_LTE => _$this._title_LTE;
  set title_LTE(int? title_LTE) => _$this._title_LTE = title_LTE;

  double? _title_AVERAGE_LTE;
  double? get title_AVERAGE_LTE => _$this._title_AVERAGE_LTE;
  set title_AVERAGE_LTE(double? title_AVERAGE_LTE) =>
      _$this._title_AVERAGE_LTE = title_AVERAGE_LTE;

  int? _title_LONGEST_LTE;
  int? get title_LONGEST_LTE => _$this._title_LONGEST_LTE;
  set title_LONGEST_LTE(int? title_LONGEST_LTE) =>
      _$this._title_LONGEST_LTE = title_LONGEST_LTE;

  int? _title_SHORTEST_LTE;
  int? get title_SHORTEST_LTE => _$this._title_SHORTEST_LTE;
  set title_SHORTEST_LTE(int? title_SHORTEST_LTE) =>
      _$this._title_SHORTEST_LTE = title_SHORTEST_LTE;

  String? _description_EQUAL;
  String? get description_EQUAL => _$this._description_EQUAL;
  set description_EQUAL(String? description_EQUAL) =>
      _$this._description_EQUAL = description_EQUAL;

  double? _description_AVERAGE_EQUAL;
  double? get description_AVERAGE_EQUAL => _$this._description_AVERAGE_EQUAL;
  set description_AVERAGE_EQUAL(double? description_AVERAGE_EQUAL) =>
      _$this._description_AVERAGE_EQUAL = description_AVERAGE_EQUAL;

  int? _description_LONGEST_EQUAL;
  int? get description_LONGEST_EQUAL => _$this._description_LONGEST_EQUAL;
  set description_LONGEST_EQUAL(int? description_LONGEST_EQUAL) =>
      _$this._description_LONGEST_EQUAL = description_LONGEST_EQUAL;

  int? _description_SHORTEST_EQUAL;
  int? get description_SHORTEST_EQUAL => _$this._description_SHORTEST_EQUAL;
  set description_SHORTEST_EQUAL(int? description_SHORTEST_EQUAL) =>
      _$this._description_SHORTEST_EQUAL = description_SHORTEST_EQUAL;

  int? _description_GT;
  int? get description_GT => _$this._description_GT;
  set description_GT(int? description_GT) =>
      _$this._description_GT = description_GT;

  double? _description_AVERAGE_GT;
  double? get description_AVERAGE_GT => _$this._description_AVERAGE_GT;
  set description_AVERAGE_GT(double? description_AVERAGE_GT) =>
      _$this._description_AVERAGE_GT = description_AVERAGE_GT;

  int? _description_LONGEST_GT;
  int? get description_LONGEST_GT => _$this._description_LONGEST_GT;
  set description_LONGEST_GT(int? description_LONGEST_GT) =>
      _$this._description_LONGEST_GT = description_LONGEST_GT;

  int? _description_SHORTEST_GT;
  int? get description_SHORTEST_GT => _$this._description_SHORTEST_GT;
  set description_SHORTEST_GT(int? description_SHORTEST_GT) =>
      _$this._description_SHORTEST_GT = description_SHORTEST_GT;

  int? _description_GTE;
  int? get description_GTE => _$this._description_GTE;
  set description_GTE(int? description_GTE) =>
      _$this._description_GTE = description_GTE;

  double? _description_AVERAGE_GTE;
  double? get description_AVERAGE_GTE => _$this._description_AVERAGE_GTE;
  set description_AVERAGE_GTE(double? description_AVERAGE_GTE) =>
      _$this._description_AVERAGE_GTE = description_AVERAGE_GTE;

  int? _description_LONGEST_GTE;
  int? get description_LONGEST_GTE => _$this._description_LONGEST_GTE;
  set description_LONGEST_GTE(int? description_LONGEST_GTE) =>
      _$this._description_LONGEST_GTE = description_LONGEST_GTE;

  int? _description_SHORTEST_GTE;
  int? get description_SHORTEST_GTE => _$this._description_SHORTEST_GTE;
  set description_SHORTEST_GTE(int? description_SHORTEST_GTE) =>
      _$this._description_SHORTEST_GTE = description_SHORTEST_GTE;

  int? _description_LT;
  int? get description_LT => _$this._description_LT;
  set description_LT(int? description_LT) =>
      _$this._description_LT = description_LT;

  double? _description_AVERAGE_LT;
  double? get description_AVERAGE_LT => _$this._description_AVERAGE_LT;
  set description_AVERAGE_LT(double? description_AVERAGE_LT) =>
      _$this._description_AVERAGE_LT = description_AVERAGE_LT;

  int? _description_LONGEST_LT;
  int? get description_LONGEST_LT => _$this._description_LONGEST_LT;
  set description_LONGEST_LT(int? description_LONGEST_LT) =>
      _$this._description_LONGEST_LT = description_LONGEST_LT;

  int? _description_SHORTEST_LT;
  int? get description_SHORTEST_LT => _$this._description_SHORTEST_LT;
  set description_SHORTEST_LT(int? description_SHORTEST_LT) =>
      _$this._description_SHORTEST_LT = description_SHORTEST_LT;

  int? _description_LTE;
  int? get description_LTE => _$this._description_LTE;
  set description_LTE(int? description_LTE) =>
      _$this._description_LTE = description_LTE;

  double? _description_AVERAGE_LTE;
  double? get description_AVERAGE_LTE => _$this._description_AVERAGE_LTE;
  set description_AVERAGE_LTE(double? description_AVERAGE_LTE) =>
      _$this._description_AVERAGE_LTE = description_AVERAGE_LTE;

  int? _description_LONGEST_LTE;
  int? get description_LONGEST_LTE => _$this._description_LONGEST_LTE;
  set description_LONGEST_LTE(int? description_LONGEST_LTE) =>
      _$this._description_LONGEST_LTE = description_LONGEST_LTE;

  int? _description_SHORTEST_LTE;
  int? get description_SHORTEST_LTE => _$this._description_SHORTEST_LTE;
  set description_SHORTEST_LTE(int? description_SHORTEST_LTE) =>
      _$this._description_SHORTEST_LTE = description_SHORTEST_LTE;

  GDateTimeBuilder? _creationDate_EQUAL;
  GDateTimeBuilder get creationDate_EQUAL =>
      _$this._creationDate_EQUAL ??= new GDateTimeBuilder();
  set creationDate_EQUAL(GDateTimeBuilder? creationDate_EQUAL) =>
      _$this._creationDate_EQUAL = creationDate_EQUAL;

  GDateTimeBuilder? _creationDate_MIN_EQUAL;
  GDateTimeBuilder get creationDate_MIN_EQUAL =>
      _$this._creationDate_MIN_EQUAL ??= new GDateTimeBuilder();
  set creationDate_MIN_EQUAL(GDateTimeBuilder? creationDate_MIN_EQUAL) =>
      _$this._creationDate_MIN_EQUAL = creationDate_MIN_EQUAL;

  GDateTimeBuilder? _creationDate_MAX_EQUAL;
  GDateTimeBuilder get creationDate_MAX_EQUAL =>
      _$this._creationDate_MAX_EQUAL ??= new GDateTimeBuilder();
  set creationDate_MAX_EQUAL(GDateTimeBuilder? creationDate_MAX_EQUAL) =>
      _$this._creationDate_MAX_EQUAL = creationDate_MAX_EQUAL;

  GDateTimeBuilder? _creationDate_GT;
  GDateTimeBuilder get creationDate_GT =>
      _$this._creationDate_GT ??= new GDateTimeBuilder();
  set creationDate_GT(GDateTimeBuilder? creationDate_GT) =>
      _$this._creationDate_GT = creationDate_GT;

  GDateTimeBuilder? _creationDate_MIN_GT;
  GDateTimeBuilder get creationDate_MIN_GT =>
      _$this._creationDate_MIN_GT ??= new GDateTimeBuilder();
  set creationDate_MIN_GT(GDateTimeBuilder? creationDate_MIN_GT) =>
      _$this._creationDate_MIN_GT = creationDate_MIN_GT;

  GDateTimeBuilder? _creationDate_MAX_GT;
  GDateTimeBuilder get creationDate_MAX_GT =>
      _$this._creationDate_MAX_GT ??= new GDateTimeBuilder();
  set creationDate_MAX_GT(GDateTimeBuilder? creationDate_MAX_GT) =>
      _$this._creationDate_MAX_GT = creationDate_MAX_GT;

  GDateTimeBuilder? _creationDate_GTE;
  GDateTimeBuilder get creationDate_GTE =>
      _$this._creationDate_GTE ??= new GDateTimeBuilder();
  set creationDate_GTE(GDateTimeBuilder? creationDate_GTE) =>
      _$this._creationDate_GTE = creationDate_GTE;

  GDateTimeBuilder? _creationDate_MIN_GTE;
  GDateTimeBuilder get creationDate_MIN_GTE =>
      _$this._creationDate_MIN_GTE ??= new GDateTimeBuilder();
  set creationDate_MIN_GTE(GDateTimeBuilder? creationDate_MIN_GTE) =>
      _$this._creationDate_MIN_GTE = creationDate_MIN_GTE;

  GDateTimeBuilder? _creationDate_MAX_GTE;
  GDateTimeBuilder get creationDate_MAX_GTE =>
      _$this._creationDate_MAX_GTE ??= new GDateTimeBuilder();
  set creationDate_MAX_GTE(GDateTimeBuilder? creationDate_MAX_GTE) =>
      _$this._creationDate_MAX_GTE = creationDate_MAX_GTE;

  GDateTimeBuilder? _creationDate_LT;
  GDateTimeBuilder get creationDate_LT =>
      _$this._creationDate_LT ??= new GDateTimeBuilder();
  set creationDate_LT(GDateTimeBuilder? creationDate_LT) =>
      _$this._creationDate_LT = creationDate_LT;

  GDateTimeBuilder? _creationDate_MIN_LT;
  GDateTimeBuilder get creationDate_MIN_LT =>
      _$this._creationDate_MIN_LT ??= new GDateTimeBuilder();
  set creationDate_MIN_LT(GDateTimeBuilder? creationDate_MIN_LT) =>
      _$this._creationDate_MIN_LT = creationDate_MIN_LT;

  GDateTimeBuilder? _creationDate_MAX_LT;
  GDateTimeBuilder get creationDate_MAX_LT =>
      _$this._creationDate_MAX_LT ??= new GDateTimeBuilder();
  set creationDate_MAX_LT(GDateTimeBuilder? creationDate_MAX_LT) =>
      _$this._creationDate_MAX_LT = creationDate_MAX_LT;

  GDateTimeBuilder? _creationDate_LTE;
  GDateTimeBuilder get creationDate_LTE =>
      _$this._creationDate_LTE ??= new GDateTimeBuilder();
  set creationDate_LTE(GDateTimeBuilder? creationDate_LTE) =>
      _$this._creationDate_LTE = creationDate_LTE;

  GDateTimeBuilder? _creationDate_MIN_LTE;
  GDateTimeBuilder get creationDate_MIN_LTE =>
      _$this._creationDate_MIN_LTE ??= new GDateTimeBuilder();
  set creationDate_MIN_LTE(GDateTimeBuilder? creationDate_MIN_LTE) =>
      _$this._creationDate_MIN_LTE = creationDate_MIN_LTE;

  GDateTimeBuilder? _creationDate_MAX_LTE;
  GDateTimeBuilder get creationDate_MAX_LTE =>
      _$this._creationDate_MAX_LTE ??= new GDateTimeBuilder();
  set creationDate_MAX_LTE(GDateTimeBuilder? creationDate_MAX_LTE) =>
      _$this._creationDate_MAX_LTE = creationDate_MAX_LTE;

  GDateTimeBuilder? _modifiedDate_EQUAL;
  GDateTimeBuilder get modifiedDate_EQUAL =>
      _$this._modifiedDate_EQUAL ??= new GDateTimeBuilder();
  set modifiedDate_EQUAL(GDateTimeBuilder? modifiedDate_EQUAL) =>
      _$this._modifiedDate_EQUAL = modifiedDate_EQUAL;

  GDateTimeBuilder? _modifiedDate_MIN_EQUAL;
  GDateTimeBuilder get modifiedDate_MIN_EQUAL =>
      _$this._modifiedDate_MIN_EQUAL ??= new GDateTimeBuilder();
  set modifiedDate_MIN_EQUAL(GDateTimeBuilder? modifiedDate_MIN_EQUAL) =>
      _$this._modifiedDate_MIN_EQUAL = modifiedDate_MIN_EQUAL;

  GDateTimeBuilder? _modifiedDate_MAX_EQUAL;
  GDateTimeBuilder get modifiedDate_MAX_EQUAL =>
      _$this._modifiedDate_MAX_EQUAL ??= new GDateTimeBuilder();
  set modifiedDate_MAX_EQUAL(GDateTimeBuilder? modifiedDate_MAX_EQUAL) =>
      _$this._modifiedDate_MAX_EQUAL = modifiedDate_MAX_EQUAL;

  GDateTimeBuilder? _modifiedDate_GT;
  GDateTimeBuilder get modifiedDate_GT =>
      _$this._modifiedDate_GT ??= new GDateTimeBuilder();
  set modifiedDate_GT(GDateTimeBuilder? modifiedDate_GT) =>
      _$this._modifiedDate_GT = modifiedDate_GT;

  GDateTimeBuilder? _modifiedDate_MIN_GT;
  GDateTimeBuilder get modifiedDate_MIN_GT =>
      _$this._modifiedDate_MIN_GT ??= new GDateTimeBuilder();
  set modifiedDate_MIN_GT(GDateTimeBuilder? modifiedDate_MIN_GT) =>
      _$this._modifiedDate_MIN_GT = modifiedDate_MIN_GT;

  GDateTimeBuilder? _modifiedDate_MAX_GT;
  GDateTimeBuilder get modifiedDate_MAX_GT =>
      _$this._modifiedDate_MAX_GT ??= new GDateTimeBuilder();
  set modifiedDate_MAX_GT(GDateTimeBuilder? modifiedDate_MAX_GT) =>
      _$this._modifiedDate_MAX_GT = modifiedDate_MAX_GT;

  GDateTimeBuilder? _modifiedDate_GTE;
  GDateTimeBuilder get modifiedDate_GTE =>
      _$this._modifiedDate_GTE ??= new GDateTimeBuilder();
  set modifiedDate_GTE(GDateTimeBuilder? modifiedDate_GTE) =>
      _$this._modifiedDate_GTE = modifiedDate_GTE;

  GDateTimeBuilder? _modifiedDate_MIN_GTE;
  GDateTimeBuilder get modifiedDate_MIN_GTE =>
      _$this._modifiedDate_MIN_GTE ??= new GDateTimeBuilder();
  set modifiedDate_MIN_GTE(GDateTimeBuilder? modifiedDate_MIN_GTE) =>
      _$this._modifiedDate_MIN_GTE = modifiedDate_MIN_GTE;

  GDateTimeBuilder? _modifiedDate_MAX_GTE;
  GDateTimeBuilder get modifiedDate_MAX_GTE =>
      _$this._modifiedDate_MAX_GTE ??= new GDateTimeBuilder();
  set modifiedDate_MAX_GTE(GDateTimeBuilder? modifiedDate_MAX_GTE) =>
      _$this._modifiedDate_MAX_GTE = modifiedDate_MAX_GTE;

  GDateTimeBuilder? _modifiedDate_LT;
  GDateTimeBuilder get modifiedDate_LT =>
      _$this._modifiedDate_LT ??= new GDateTimeBuilder();
  set modifiedDate_LT(GDateTimeBuilder? modifiedDate_LT) =>
      _$this._modifiedDate_LT = modifiedDate_LT;

  GDateTimeBuilder? _modifiedDate_MIN_LT;
  GDateTimeBuilder get modifiedDate_MIN_LT =>
      _$this._modifiedDate_MIN_LT ??= new GDateTimeBuilder();
  set modifiedDate_MIN_LT(GDateTimeBuilder? modifiedDate_MIN_LT) =>
      _$this._modifiedDate_MIN_LT = modifiedDate_MIN_LT;

  GDateTimeBuilder? _modifiedDate_MAX_LT;
  GDateTimeBuilder get modifiedDate_MAX_LT =>
      _$this._modifiedDate_MAX_LT ??= new GDateTimeBuilder();
  set modifiedDate_MAX_LT(GDateTimeBuilder? modifiedDate_MAX_LT) =>
      _$this._modifiedDate_MAX_LT = modifiedDate_MAX_LT;

  GDateTimeBuilder? _modifiedDate_LTE;
  GDateTimeBuilder get modifiedDate_LTE =>
      _$this._modifiedDate_LTE ??= new GDateTimeBuilder();
  set modifiedDate_LTE(GDateTimeBuilder? modifiedDate_LTE) =>
      _$this._modifiedDate_LTE = modifiedDate_LTE;

  GDateTimeBuilder? _modifiedDate_MIN_LTE;
  GDateTimeBuilder get modifiedDate_MIN_LTE =>
      _$this._modifiedDate_MIN_LTE ??= new GDateTimeBuilder();
  set modifiedDate_MIN_LTE(GDateTimeBuilder? modifiedDate_MIN_LTE) =>
      _$this._modifiedDate_MIN_LTE = modifiedDate_MIN_LTE;

  GDateTimeBuilder? _modifiedDate_MAX_LTE;
  GDateTimeBuilder get modifiedDate_MAX_LTE =>
      _$this._modifiedDate_MAX_LTE ??= new GDateTimeBuilder();
  set modifiedDate_MAX_LTE(GDateTimeBuilder? modifiedDate_MAX_LTE) =>
      _$this._modifiedDate_MAX_LTE = modifiedDate_MAX_LTE;

  GPageBelongsToNodeAggregationWhereInputBuilder();

  GPageBelongsToNodeAggregationWhereInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _id_EQUAL = $v.id_EQUAL;
      _title_EQUAL = $v.title_EQUAL;
      _title_AVERAGE_EQUAL = $v.title_AVERAGE_EQUAL;
      _title_LONGEST_EQUAL = $v.title_LONGEST_EQUAL;
      _title_SHORTEST_EQUAL = $v.title_SHORTEST_EQUAL;
      _title_GT = $v.title_GT;
      _title_AVERAGE_GT = $v.title_AVERAGE_GT;
      _title_LONGEST_GT = $v.title_LONGEST_GT;
      _title_SHORTEST_GT = $v.title_SHORTEST_GT;
      _title_GTE = $v.title_GTE;
      _title_AVERAGE_GTE = $v.title_AVERAGE_GTE;
      _title_LONGEST_GTE = $v.title_LONGEST_GTE;
      _title_SHORTEST_GTE = $v.title_SHORTEST_GTE;
      _title_LT = $v.title_LT;
      _title_AVERAGE_LT = $v.title_AVERAGE_LT;
      _title_LONGEST_LT = $v.title_LONGEST_LT;
      _title_SHORTEST_LT = $v.title_SHORTEST_LT;
      _title_LTE = $v.title_LTE;
      _title_AVERAGE_LTE = $v.title_AVERAGE_LTE;
      _title_LONGEST_LTE = $v.title_LONGEST_LTE;
      _title_SHORTEST_LTE = $v.title_SHORTEST_LTE;
      _description_EQUAL = $v.description_EQUAL;
      _description_AVERAGE_EQUAL = $v.description_AVERAGE_EQUAL;
      _description_LONGEST_EQUAL = $v.description_LONGEST_EQUAL;
      _description_SHORTEST_EQUAL = $v.description_SHORTEST_EQUAL;
      _description_GT = $v.description_GT;
      _description_AVERAGE_GT = $v.description_AVERAGE_GT;
      _description_LONGEST_GT = $v.description_LONGEST_GT;
      _description_SHORTEST_GT = $v.description_SHORTEST_GT;
      _description_GTE = $v.description_GTE;
      _description_AVERAGE_GTE = $v.description_AVERAGE_GTE;
      _description_LONGEST_GTE = $v.description_LONGEST_GTE;
      _description_SHORTEST_GTE = $v.description_SHORTEST_GTE;
      _description_LT = $v.description_LT;
      _description_AVERAGE_LT = $v.description_AVERAGE_LT;
      _description_LONGEST_LT = $v.description_LONGEST_LT;
      _description_SHORTEST_LT = $v.description_SHORTEST_LT;
      _description_LTE = $v.description_LTE;
      _description_AVERAGE_LTE = $v.description_AVERAGE_LTE;
      _description_LONGEST_LTE = $v.description_LONGEST_LTE;
      _description_SHORTEST_LTE = $v.description_SHORTEST_LTE;
      _creationDate_EQUAL = $v.creationDate_EQUAL?.toBuilder();
      _creationDate_MIN_EQUAL = $v.creationDate_MIN_EQUAL?.toBuilder();
      _creationDate_MAX_EQUAL = $v.creationDate_MAX_EQUAL?.toBuilder();
      _creationDate_GT = $v.creationDate_GT?.toBuilder();
      _creationDate_MIN_GT = $v.creationDate_MIN_GT?.toBuilder();
      _creationDate_MAX_GT = $v.creationDate_MAX_GT?.toBuilder();
      _creationDate_GTE = $v.creationDate_GTE?.toBuilder();
      _creationDate_MIN_GTE = $v.creationDate_MIN_GTE?.toBuilder();
      _creationDate_MAX_GTE = $v.creationDate_MAX_GTE?.toBuilder();
      _creationDate_LT = $v.creationDate_LT?.toBuilder();
      _creationDate_MIN_LT = $v.creationDate_MIN_LT?.toBuilder();
      _creationDate_MAX_LT = $v.creationDate_MAX_LT?.toBuilder();
      _creationDate_LTE = $v.creationDate_LTE?.toBuilder();
      _creationDate_MIN_LTE = $v.creationDate_MIN_LTE?.toBuilder();
      _creationDate_MAX_LTE = $v.creationDate_MAX_LTE?.toBuilder();
      _modifiedDate_EQUAL = $v.modifiedDate_EQUAL?.toBuilder();
      _modifiedDate_MIN_EQUAL = $v.modifiedDate_MIN_EQUAL?.toBuilder();
      _modifiedDate_MAX_EQUAL = $v.modifiedDate_MAX_EQUAL?.toBuilder();
      _modifiedDate_GT = $v.modifiedDate_GT?.toBuilder();
      _modifiedDate_MIN_GT = $v.modifiedDate_MIN_GT?.toBuilder();
      _modifiedDate_MAX_GT = $v.modifiedDate_MAX_GT?.toBuilder();
      _modifiedDate_GTE = $v.modifiedDate_GTE?.toBuilder();
      _modifiedDate_MIN_GTE = $v.modifiedDate_MIN_GTE?.toBuilder();
      _modifiedDate_MAX_GTE = $v.modifiedDate_MAX_GTE?.toBuilder();
      _modifiedDate_LT = $v.modifiedDate_LT?.toBuilder();
      _modifiedDate_MIN_LT = $v.modifiedDate_MIN_LT?.toBuilder();
      _modifiedDate_MAX_LT = $v.modifiedDate_MAX_LT?.toBuilder();
      _modifiedDate_LTE = $v.modifiedDate_LTE?.toBuilder();
      _modifiedDate_MIN_LTE = $v.modifiedDate_MIN_LTE?.toBuilder();
      _modifiedDate_MAX_LTE = $v.modifiedDate_MAX_LTE?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToNodeAggregationWhereInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToNodeAggregationWhereInput;
  }

  @override
  void update(
      void Function(GPageBelongsToNodeAggregationWhereInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToNodeAggregationWhereInput build() => _build();

  _$GPageBelongsToNodeAggregationWhereInput _build() {
    _$GPageBelongsToNodeAggregationWhereInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToNodeAggregationWhereInput._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              id_EQUAL: id_EQUAL,
              title_EQUAL: title_EQUAL,
              title_AVERAGE_EQUAL: title_AVERAGE_EQUAL,
              title_LONGEST_EQUAL: title_LONGEST_EQUAL,
              title_SHORTEST_EQUAL: title_SHORTEST_EQUAL,
              title_GT: title_GT,
              title_AVERAGE_GT: title_AVERAGE_GT,
              title_LONGEST_GT: title_LONGEST_GT,
              title_SHORTEST_GT: title_SHORTEST_GT,
              title_GTE: title_GTE,
              title_AVERAGE_GTE: title_AVERAGE_GTE,
              title_LONGEST_GTE: title_LONGEST_GTE,
              title_SHORTEST_GTE: title_SHORTEST_GTE,
              title_LT: title_LT,
              title_AVERAGE_LT: title_AVERAGE_LT,
              title_LONGEST_LT: title_LONGEST_LT,
              title_SHORTEST_LT: title_SHORTEST_LT,
              title_LTE: title_LTE,
              title_AVERAGE_LTE: title_AVERAGE_LTE,
              title_LONGEST_LTE: title_LONGEST_LTE,
              title_SHORTEST_LTE: title_SHORTEST_LTE,
              description_EQUAL: description_EQUAL,
              description_AVERAGE_EQUAL: description_AVERAGE_EQUAL,
              description_LONGEST_EQUAL: description_LONGEST_EQUAL,
              description_SHORTEST_EQUAL: description_SHORTEST_EQUAL,
              description_GT: description_GT,
              description_AVERAGE_GT: description_AVERAGE_GT,
              description_LONGEST_GT: description_LONGEST_GT,
              description_SHORTEST_GT: description_SHORTEST_GT,
              description_GTE: description_GTE,
              description_AVERAGE_GTE: description_AVERAGE_GTE,
              description_LONGEST_GTE: description_LONGEST_GTE,
              description_SHORTEST_GTE: description_SHORTEST_GTE,
              description_LT: description_LT,
              description_AVERAGE_LT: description_AVERAGE_LT,
              description_LONGEST_LT: description_LONGEST_LT,
              description_SHORTEST_LT: description_SHORTEST_LT,
              description_LTE: description_LTE,
              description_AVERAGE_LTE: description_AVERAGE_LTE,
              description_LONGEST_LTE: description_LONGEST_LTE,
              description_SHORTEST_LTE: description_SHORTEST_LTE,
              creationDate_EQUAL: _creationDate_EQUAL?.build(),
              creationDate_MIN_EQUAL: _creationDate_MIN_EQUAL?.build(),
              creationDate_MAX_EQUAL: _creationDate_MAX_EQUAL?.build(),
              creationDate_GT: _creationDate_GT?.build(),
              creationDate_MIN_GT: _creationDate_MIN_GT?.build(),
              creationDate_MAX_GT: _creationDate_MAX_GT?.build(),
              creationDate_GTE: _creationDate_GTE?.build(),
              creationDate_MIN_GTE: _creationDate_MIN_GTE?.build(),
              creationDate_MAX_GTE: _creationDate_MAX_GTE?.build(),
              creationDate_LT: _creationDate_LT?.build(),
              creationDate_MIN_LT: _creationDate_MIN_LT?.build(),
              creationDate_MAX_LT: _creationDate_MAX_LT?.build(),
              creationDate_LTE: _creationDate_LTE?.build(),
              creationDate_MIN_LTE: _creationDate_MIN_LTE?.build(),
              creationDate_MAX_LTE: _creationDate_MAX_LTE?.build(),
              modifiedDate_EQUAL: _modifiedDate_EQUAL?.build(),
              modifiedDate_MIN_EQUAL: _modifiedDate_MIN_EQUAL?.build(),
              modifiedDate_MAX_EQUAL: _modifiedDate_MAX_EQUAL?.build(),
              modifiedDate_GT: _modifiedDate_GT?.build(),
              modifiedDate_MIN_GT: _modifiedDate_MIN_GT?.build(),
              modifiedDate_MAX_GT: _modifiedDate_MAX_GT?.build(),
              modifiedDate_GTE: _modifiedDate_GTE?.build(),
              modifiedDate_MIN_GTE: _modifiedDate_MIN_GTE?.build(),
              modifiedDate_MAX_GTE: _modifiedDate_MAX_GTE?.build(),
              modifiedDate_LT: _modifiedDate_LT?.build(),
              modifiedDate_MIN_LT: _modifiedDate_MIN_LT?.build(),
              modifiedDate_MAX_LT: _modifiedDate_MAX_LT?.build(),
              modifiedDate_LTE: _modifiedDate_LTE?.build(),
              modifiedDate_MIN_LTE: _modifiedDate_MIN_LTE?.build(),
              modifiedDate_MAX_LTE: _modifiedDate_MAX_LTE?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();

        _$failedField = 'creationDate_EQUAL';
        _creationDate_EQUAL?.build();
        _$failedField = 'creationDate_MIN_EQUAL';
        _creationDate_MIN_EQUAL?.build();
        _$failedField = 'creationDate_MAX_EQUAL';
        _creationDate_MAX_EQUAL?.build();
        _$failedField = 'creationDate_GT';
        _creationDate_GT?.build();
        _$failedField = 'creationDate_MIN_GT';
        _creationDate_MIN_GT?.build();
        _$failedField = 'creationDate_MAX_GT';
        _creationDate_MAX_GT?.build();
        _$failedField = 'creationDate_GTE';
        _creationDate_GTE?.build();
        _$failedField = 'creationDate_MIN_GTE';
        _creationDate_MIN_GTE?.build();
        _$failedField = 'creationDate_MAX_GTE';
        _creationDate_MAX_GTE?.build();
        _$failedField = 'creationDate_LT';
        _creationDate_LT?.build();
        _$failedField = 'creationDate_MIN_LT';
        _creationDate_MIN_LT?.build();
        _$failedField = 'creationDate_MAX_LT';
        _creationDate_MAX_LT?.build();
        _$failedField = 'creationDate_LTE';
        _creationDate_LTE?.build();
        _$failedField = 'creationDate_MIN_LTE';
        _creationDate_MIN_LTE?.build();
        _$failedField = 'creationDate_MAX_LTE';
        _creationDate_MAX_LTE?.build();
        _$failedField = 'modifiedDate_EQUAL';
        _modifiedDate_EQUAL?.build();
        _$failedField = 'modifiedDate_MIN_EQUAL';
        _modifiedDate_MIN_EQUAL?.build();
        _$failedField = 'modifiedDate_MAX_EQUAL';
        _modifiedDate_MAX_EQUAL?.build();
        _$failedField = 'modifiedDate_GT';
        _modifiedDate_GT?.build();
        _$failedField = 'modifiedDate_MIN_GT';
        _modifiedDate_MIN_GT?.build();
        _$failedField = 'modifiedDate_MAX_GT';
        _modifiedDate_MAX_GT?.build();
        _$failedField = 'modifiedDate_GTE';
        _modifiedDate_GTE?.build();
        _$failedField = 'modifiedDate_MIN_GTE';
        _modifiedDate_MIN_GTE?.build();
        _$failedField = 'modifiedDate_MAX_GTE';
        _modifiedDate_MAX_GTE?.build();
        _$failedField = 'modifiedDate_LT';
        _modifiedDate_LT?.build();
        _$failedField = 'modifiedDate_MIN_LT';
        _modifiedDate_MIN_LT?.build();
        _$failedField = 'modifiedDate_MAX_LT';
        _modifiedDate_MAX_LT?.build();
        _$failedField = 'modifiedDate_LTE';
        _modifiedDate_LTE?.build();
        _$failedField = 'modifiedDate_MIN_LTE';
        _modifiedDate_MIN_LTE?.build();
        _$failedField = 'modifiedDate_MAX_LTE';
        _modifiedDate_MAX_LTE?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToNodeAggregationWhereInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToUpdateConnectionInput
    extends GPageBelongsToUpdateConnectionInput {
  @override
  final GProjectUpdateInput? node;

  factory _$GPageBelongsToUpdateConnectionInput(
          [void Function(GPageBelongsToUpdateConnectionInputBuilder)?
              updates]) =>
      (new GPageBelongsToUpdateConnectionInputBuilder()..update(updates))
          ._build();

  _$GPageBelongsToUpdateConnectionInput._({this.node}) : super._();

  @override
  GPageBelongsToUpdateConnectionInput rebuild(
          void Function(GPageBelongsToUpdateConnectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToUpdateConnectionInputBuilder toBuilder() =>
      new GPageBelongsToUpdateConnectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToUpdateConnectionInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToUpdateConnectionInput')
          ..add('node', node))
        .toString();
  }
}

class GPageBelongsToUpdateConnectionInputBuilder
    implements
        Builder<GPageBelongsToUpdateConnectionInput,
            GPageBelongsToUpdateConnectionInputBuilder> {
  _$GPageBelongsToUpdateConnectionInput? _$v;

  GProjectUpdateInputBuilder? _node;
  GProjectUpdateInputBuilder get node =>
      _$this._node ??= new GProjectUpdateInputBuilder();
  set node(GProjectUpdateInputBuilder? node) => _$this._node = node;

  GPageBelongsToUpdateConnectionInputBuilder();

  GPageBelongsToUpdateConnectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToUpdateConnectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToUpdateConnectionInput;
  }

  @override
  void update(
      void Function(GPageBelongsToUpdateConnectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToUpdateConnectionInput build() => _build();

  _$GPageBelongsToUpdateConnectionInput _build() {
    _$GPageBelongsToUpdateConnectionInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToUpdateConnectionInput._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToUpdateConnectionInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageBelongsToUpdateFieldInput extends GPageBelongsToUpdateFieldInput {
  @override
  final GPageBelongsToConnectionWhere? where;
  @override
  final GPageBelongsToUpdateConnectionInput? Gupdate;
  @override
  final GPageBelongsToConnectFieldInput? connect;
  @override
  final GPageBelongsToDisconnectFieldInput? disconnect;
  @override
  final GPageBelongsToCreateFieldInput? create;
  @override
  final GPageBelongsToDeleteFieldInput? delete;
  @override
  final GPageBelongsToConnectOrCreateFieldInput? connectOrCreate;

  factory _$GPageBelongsToUpdateFieldInput(
          [void Function(GPageBelongsToUpdateFieldInputBuilder)? updates]) =>
      (new GPageBelongsToUpdateFieldInputBuilder()..update(updates))._build();

  _$GPageBelongsToUpdateFieldInput._(
      {this.where,
      this.Gupdate,
      this.connect,
      this.disconnect,
      this.create,
      this.delete,
      this.connectOrCreate})
      : super._();

  @override
  GPageBelongsToUpdateFieldInput rebuild(
          void Function(GPageBelongsToUpdateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageBelongsToUpdateFieldInputBuilder toBuilder() =>
      new GPageBelongsToUpdateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageBelongsToUpdateFieldInput &&
        where == other.where &&
        Gupdate == other.Gupdate &&
        connect == other.connect &&
        disconnect == other.disconnect &&
        create == other.create &&
        delete == other.delete &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, where.hashCode), Gupdate.hashCode),
                        connect.hashCode),
                    disconnect.hashCode),
                create.hashCode),
            delete.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageBelongsToUpdateFieldInput')
          ..add('where', where)
          ..add('Gupdate', Gupdate)
          ..add('connect', connect)
          ..add('disconnect', disconnect)
          ..add('create', create)
          ..add('delete', delete)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GPageBelongsToUpdateFieldInputBuilder
    implements
        Builder<GPageBelongsToUpdateFieldInput,
            GPageBelongsToUpdateFieldInputBuilder> {
  _$GPageBelongsToUpdateFieldInput? _$v;

  GPageBelongsToConnectionWhereBuilder? _where;
  GPageBelongsToConnectionWhereBuilder get where =>
      _$this._where ??= new GPageBelongsToConnectionWhereBuilder();
  set where(GPageBelongsToConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageBelongsToUpdateConnectionInputBuilder? _Gupdate;
  GPageBelongsToUpdateConnectionInputBuilder get Gupdate =>
      _$this._Gupdate ??= new GPageBelongsToUpdateConnectionInputBuilder();
  set Gupdate(GPageBelongsToUpdateConnectionInputBuilder? Gupdate) =>
      _$this._Gupdate = Gupdate;

  GPageBelongsToConnectFieldInputBuilder? _connect;
  GPageBelongsToConnectFieldInputBuilder get connect =>
      _$this._connect ??= new GPageBelongsToConnectFieldInputBuilder();
  set connect(GPageBelongsToConnectFieldInputBuilder? connect) =>
      _$this._connect = connect;

  GPageBelongsToDisconnectFieldInputBuilder? _disconnect;
  GPageBelongsToDisconnectFieldInputBuilder get disconnect =>
      _$this._disconnect ??= new GPageBelongsToDisconnectFieldInputBuilder();
  set disconnect(GPageBelongsToDisconnectFieldInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GPageBelongsToCreateFieldInputBuilder? _create;
  GPageBelongsToCreateFieldInputBuilder get create =>
      _$this._create ??= new GPageBelongsToCreateFieldInputBuilder();
  set create(GPageBelongsToCreateFieldInputBuilder? create) =>
      _$this._create = create;

  GPageBelongsToDeleteFieldInputBuilder? _delete;
  GPageBelongsToDeleteFieldInputBuilder get delete =>
      _$this._delete ??= new GPageBelongsToDeleteFieldInputBuilder();
  set delete(GPageBelongsToDeleteFieldInputBuilder? delete) =>
      _$this._delete = delete;

  GPageBelongsToConnectOrCreateFieldInputBuilder? _connectOrCreate;
  GPageBelongsToConnectOrCreateFieldInputBuilder get connectOrCreate =>
      _$this._connectOrCreate ??=
          new GPageBelongsToConnectOrCreateFieldInputBuilder();
  set connectOrCreate(
          GPageBelongsToConnectOrCreateFieldInputBuilder? connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GPageBelongsToUpdateFieldInputBuilder();

  GPageBelongsToUpdateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _Gupdate = $v.Gupdate?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _create = $v.create?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageBelongsToUpdateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageBelongsToUpdateFieldInput;
  }

  @override
  void update(void Function(GPageBelongsToUpdateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageBelongsToUpdateFieldInput build() => _build();

  _$GPageBelongsToUpdateFieldInput _build() {
    _$GPageBelongsToUpdateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageBelongsToUpdateFieldInput._(
              where: _where?.build(),
              Gupdate: _Gupdate?.build(),
              connect: _connect?.build(),
              disconnect: _disconnect?.build(),
              create: _create?.build(),
              delete: _delete?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'Gupdate';
        _Gupdate?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'delete';
        _delete?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageBelongsToUpdateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageConnectInput extends GPageConnectInput {
  @override
  final BuiltList<GPageSubPagesConnectFieldInput>? subPages;
  @override
  final GPageParentPageConnectFieldInput? parentPage;
  @override
  final GPageBelongsToConnectFieldInput? belongsTo;

  factory _$GPageConnectInput(
          [void Function(GPageConnectInputBuilder)? updates]) =>
      (new GPageConnectInputBuilder()..update(updates))._build();

  _$GPageConnectInput._({this.subPages, this.parentPage, this.belongsTo})
      : super._();

  @override
  GPageConnectInput rebuild(void Function(GPageConnectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageConnectInputBuilder toBuilder() =>
      new GPageConnectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageConnectInput &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, subPages.hashCode), parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageConnectInput')
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageConnectInputBuilder
    implements Builder<GPageConnectInput, GPageConnectInputBuilder> {
  _$GPageConnectInput? _$v;

  ListBuilder<GPageSubPagesConnectFieldInput>? _subPages;
  ListBuilder<GPageSubPagesConnectFieldInput> get subPages =>
      _$this._subPages ??= new ListBuilder<GPageSubPagesConnectFieldInput>();
  set subPages(ListBuilder<GPageSubPagesConnectFieldInput>? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageConnectFieldInputBuilder? _parentPage;
  GPageParentPageConnectFieldInputBuilder get parentPage =>
      _$this._parentPage ??= new GPageParentPageConnectFieldInputBuilder();
  set parentPage(GPageParentPageConnectFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToConnectFieldInputBuilder? _belongsTo;
  GPageBelongsToConnectFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??= new GPageBelongsToConnectFieldInputBuilder();
  set belongsTo(GPageBelongsToConnectFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageConnectInputBuilder();

  GPageConnectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageConnectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageConnectInput;
  }

  @override
  void update(void Function(GPageConnectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageConnectInput build() => _build();

  _$GPageConnectInput _build() {
    _$GPageConnectInput _$result;
    try {
      _$result = _$v ??
          new _$GPageConnectInput._(
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageConnectInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageConnectOrCreateInput extends GPageConnectOrCreateInput {
  @override
  final BuiltList<GPageSubPagesConnectOrCreateFieldInput>? subPages;
  @override
  final GPageParentPageConnectOrCreateFieldInput? parentPage;
  @override
  final GPageBelongsToConnectOrCreateFieldInput? belongsTo;

  factory _$GPageConnectOrCreateInput(
          [void Function(GPageConnectOrCreateInputBuilder)? updates]) =>
      (new GPageConnectOrCreateInputBuilder()..update(updates))._build();

  _$GPageConnectOrCreateInput._(
      {this.subPages, this.parentPage, this.belongsTo})
      : super._();

  @override
  GPageConnectOrCreateInput rebuild(
          void Function(GPageConnectOrCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageConnectOrCreateInputBuilder toBuilder() =>
      new GPageConnectOrCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageConnectOrCreateInput &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, subPages.hashCode), parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageConnectOrCreateInput')
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageConnectOrCreateInputBuilder
    implements
        Builder<GPageConnectOrCreateInput, GPageConnectOrCreateInputBuilder> {
  _$GPageConnectOrCreateInput? _$v;

  ListBuilder<GPageSubPagesConnectOrCreateFieldInput>? _subPages;
  ListBuilder<GPageSubPagesConnectOrCreateFieldInput> get subPages =>
      _$this._subPages ??=
          new ListBuilder<GPageSubPagesConnectOrCreateFieldInput>();
  set subPages(ListBuilder<GPageSubPagesConnectOrCreateFieldInput>? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageConnectOrCreateFieldInputBuilder? _parentPage;
  GPageParentPageConnectOrCreateFieldInputBuilder get parentPage =>
      _$this._parentPage ??=
          new GPageParentPageConnectOrCreateFieldInputBuilder();
  set parentPage(GPageParentPageConnectOrCreateFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToConnectOrCreateFieldInputBuilder? _belongsTo;
  GPageBelongsToConnectOrCreateFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??=
          new GPageBelongsToConnectOrCreateFieldInputBuilder();
  set belongsTo(GPageBelongsToConnectOrCreateFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageConnectOrCreateInputBuilder();

  GPageConnectOrCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageConnectOrCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageConnectOrCreateInput;
  }

  @override
  void update(void Function(GPageConnectOrCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageConnectOrCreateInput build() => _build();

  _$GPageConnectOrCreateInput _build() {
    _$GPageConnectOrCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageConnectOrCreateInput._(
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageConnectOrCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageConnectOrCreateWhere extends GPageConnectOrCreateWhere {
  @override
  final GPageUniqueWhere node;

  factory _$GPageConnectOrCreateWhere(
          [void Function(GPageConnectOrCreateWhereBuilder)? updates]) =>
      (new GPageConnectOrCreateWhereBuilder()..update(updates))._build();

  _$GPageConnectOrCreateWhere._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageConnectOrCreateWhere', 'node');
  }

  @override
  GPageConnectOrCreateWhere rebuild(
          void Function(GPageConnectOrCreateWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageConnectOrCreateWhereBuilder toBuilder() =>
      new GPageConnectOrCreateWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageConnectOrCreateWhere && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageConnectOrCreateWhere')
          ..add('node', node))
        .toString();
  }
}

class GPageConnectOrCreateWhereBuilder
    implements
        Builder<GPageConnectOrCreateWhere, GPageConnectOrCreateWhereBuilder> {
  _$GPageConnectOrCreateWhere? _$v;

  GPageUniqueWhereBuilder? _node;
  GPageUniqueWhereBuilder get node =>
      _$this._node ??= new GPageUniqueWhereBuilder();
  set node(GPageUniqueWhereBuilder? node) => _$this._node = node;

  GPageConnectOrCreateWhereBuilder();

  GPageConnectOrCreateWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageConnectOrCreateWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageConnectOrCreateWhere;
  }

  @override
  void update(void Function(GPageConnectOrCreateWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageConnectOrCreateWhere build() => _build();

  _$GPageConnectOrCreateWhere _build() {
    _$GPageConnectOrCreateWhere _$result;
    try {
      _$result = _$v ?? new _$GPageConnectOrCreateWhere._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageConnectOrCreateWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageConnectWhere extends GPageConnectWhere {
  @override
  final GPageWhere node;

  factory _$GPageConnectWhere(
          [void Function(GPageConnectWhereBuilder)? updates]) =>
      (new GPageConnectWhereBuilder()..update(updates))._build();

  _$GPageConnectWhere._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(node, r'GPageConnectWhere', 'node');
  }

  @override
  GPageConnectWhere rebuild(void Function(GPageConnectWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageConnectWhereBuilder toBuilder() =>
      new GPageConnectWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageConnectWhere && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageConnectWhere')
          ..add('node', node))
        .toString();
  }
}

class GPageConnectWhereBuilder
    implements Builder<GPageConnectWhere, GPageConnectWhereBuilder> {
  _$GPageConnectWhere? _$v;

  GPageWhereBuilder? _node;
  GPageWhereBuilder get node => _$this._node ??= new GPageWhereBuilder();
  set node(GPageWhereBuilder? node) => _$this._node = node;

  GPageConnectWhereBuilder();

  GPageConnectWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageConnectWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageConnectWhere;
  }

  @override
  void update(void Function(GPageConnectWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageConnectWhere build() => _build();

  _$GPageConnectWhere _build() {
    _$GPageConnectWhere _$result;
    try {
      _$result = _$v ?? new _$GPageConnectWhere._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageConnectWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageCreateInput extends GPageCreateInput {
  @override
  final String title;
  @override
  final String? description;
  @override
  final String layout;
  @override
  final int orderNumber;
  @override
  final GPageSubPagesFieldInput? subPages;
  @override
  final GPageParentPageFieldInput? parentPage;
  @override
  final GPageBelongsToFieldInput? belongsTo;

  factory _$GPageCreateInput(
          [void Function(GPageCreateInputBuilder)? updates]) =>
      (new GPageCreateInputBuilder()..update(updates))._build();

  _$GPageCreateInput._(
      {required this.title,
      this.description,
      required this.layout,
      required this.orderNumber,
      this.subPages,
      this.parentPage,
      this.belongsTo})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(title, r'GPageCreateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        layout, r'GPageCreateInput', 'layout');
    BuiltValueNullFieldError.checkNotNull(
        orderNumber, r'GPageCreateInput', 'orderNumber');
  }

  @override
  GPageCreateInput rebuild(void Function(GPageCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageCreateInputBuilder toBuilder() =>
      new GPageCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageCreateInput &&
        title == other.title &&
        description == other.description &&
        layout == other.layout &&
        orderNumber == other.orderNumber &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, title.hashCode), description.hashCode),
                        layout.hashCode),
                    orderNumber.hashCode),
                subPages.hashCode),
            parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageCreateInput')
          ..add('title', title)
          ..add('description', description)
          ..add('layout', layout)
          ..add('orderNumber', orderNumber)
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageCreateInputBuilder
    implements Builder<GPageCreateInput, GPageCreateInputBuilder> {
  _$GPageCreateInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _layout;
  String? get layout => _$this._layout;
  set layout(String? layout) => _$this._layout = layout;

  int? _orderNumber;
  int? get orderNumber => _$this._orderNumber;
  set orderNumber(int? orderNumber) => _$this._orderNumber = orderNumber;

  GPageSubPagesFieldInputBuilder? _subPages;
  GPageSubPagesFieldInputBuilder get subPages =>
      _$this._subPages ??= new GPageSubPagesFieldInputBuilder();
  set subPages(GPageSubPagesFieldInputBuilder? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageFieldInputBuilder? _parentPage;
  GPageParentPageFieldInputBuilder get parentPage =>
      _$this._parentPage ??= new GPageParentPageFieldInputBuilder();
  set parentPage(GPageParentPageFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToFieldInputBuilder? _belongsTo;
  GPageBelongsToFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??= new GPageBelongsToFieldInputBuilder();
  set belongsTo(GPageBelongsToFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageCreateInputBuilder();

  GPageCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _layout = $v.layout;
      _orderNumber = $v.orderNumber;
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageCreateInput;
  }

  @override
  void update(void Function(GPageCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageCreateInput build() => _build();

  _$GPageCreateInput _build() {
    _$GPageCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageCreateInput._(
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GPageCreateInput', 'title'),
              description: description,
              layout: BuiltValueNullFieldError.checkNotNull(
                  layout, r'GPageCreateInput', 'layout'),
              orderNumber: BuiltValueNullFieldError.checkNotNull(
                  orderNumber, r'GPageCreateInput', 'orderNumber'),
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageDeleteInput extends GPageDeleteInput {
  @override
  final BuiltList<GPageSubPagesDeleteFieldInput>? subPages;
  @override
  final GPageParentPageDeleteFieldInput? parentPage;
  @override
  final GPageBelongsToDeleteFieldInput? belongsTo;

  factory _$GPageDeleteInput(
          [void Function(GPageDeleteInputBuilder)? updates]) =>
      (new GPageDeleteInputBuilder()..update(updates))._build();

  _$GPageDeleteInput._({this.subPages, this.parentPage, this.belongsTo})
      : super._();

  @override
  GPageDeleteInput rebuild(void Function(GPageDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageDeleteInputBuilder toBuilder() =>
      new GPageDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageDeleteInput &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, subPages.hashCode), parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageDeleteInput')
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageDeleteInputBuilder
    implements Builder<GPageDeleteInput, GPageDeleteInputBuilder> {
  _$GPageDeleteInput? _$v;

  ListBuilder<GPageSubPagesDeleteFieldInput>? _subPages;
  ListBuilder<GPageSubPagesDeleteFieldInput> get subPages =>
      _$this._subPages ??= new ListBuilder<GPageSubPagesDeleteFieldInput>();
  set subPages(ListBuilder<GPageSubPagesDeleteFieldInput>? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageDeleteFieldInputBuilder? _parentPage;
  GPageParentPageDeleteFieldInputBuilder get parentPage =>
      _$this._parentPage ??= new GPageParentPageDeleteFieldInputBuilder();
  set parentPage(GPageParentPageDeleteFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToDeleteFieldInputBuilder? _belongsTo;
  GPageBelongsToDeleteFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??= new GPageBelongsToDeleteFieldInputBuilder();
  set belongsTo(GPageBelongsToDeleteFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageDeleteInputBuilder();

  GPageDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageDeleteInput;
  }

  @override
  void update(void Function(GPageDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageDeleteInput build() => _build();

  _$GPageDeleteInput _build() {
    _$GPageDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GPageDeleteInput._(
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageDisconnectInput extends GPageDisconnectInput {
  @override
  final BuiltList<GPageSubPagesDisconnectFieldInput>? subPages;
  @override
  final GPageParentPageDisconnectFieldInput? parentPage;
  @override
  final GPageBelongsToDisconnectFieldInput? belongsTo;

  factory _$GPageDisconnectInput(
          [void Function(GPageDisconnectInputBuilder)? updates]) =>
      (new GPageDisconnectInputBuilder()..update(updates))._build();

  _$GPageDisconnectInput._({this.subPages, this.parentPage, this.belongsTo})
      : super._();

  @override
  GPageDisconnectInput rebuild(
          void Function(GPageDisconnectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageDisconnectInputBuilder toBuilder() =>
      new GPageDisconnectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageDisconnectInput &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, subPages.hashCode), parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageDisconnectInput')
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageDisconnectInputBuilder
    implements Builder<GPageDisconnectInput, GPageDisconnectInputBuilder> {
  _$GPageDisconnectInput? _$v;

  ListBuilder<GPageSubPagesDisconnectFieldInput>? _subPages;
  ListBuilder<GPageSubPagesDisconnectFieldInput> get subPages =>
      _$this._subPages ??= new ListBuilder<GPageSubPagesDisconnectFieldInput>();
  set subPages(ListBuilder<GPageSubPagesDisconnectFieldInput>? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageDisconnectFieldInputBuilder? _parentPage;
  GPageParentPageDisconnectFieldInputBuilder get parentPage =>
      _$this._parentPage ??= new GPageParentPageDisconnectFieldInputBuilder();
  set parentPage(GPageParentPageDisconnectFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToDisconnectFieldInputBuilder? _belongsTo;
  GPageBelongsToDisconnectFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??= new GPageBelongsToDisconnectFieldInputBuilder();
  set belongsTo(GPageBelongsToDisconnectFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageDisconnectInputBuilder();

  GPageDisconnectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageDisconnectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageDisconnectInput;
  }

  @override
  void update(void Function(GPageDisconnectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageDisconnectInput build() => _build();

  _$GPageDisconnectInput _build() {
    _$GPageDisconnectInput _$result;
    try {
      _$result = _$v ??
          new _$GPageDisconnectInput._(
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageDisconnectInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageOnCreateInput extends GPageOnCreateInput {
  @override
  final String title;
  @override
  final String? description;
  @override
  final String layout;
  @override
  final int orderNumber;

  factory _$GPageOnCreateInput(
          [void Function(GPageOnCreateInputBuilder)? updates]) =>
      (new GPageOnCreateInputBuilder()..update(updates))._build();

  _$GPageOnCreateInput._(
      {required this.title,
      this.description,
      required this.layout,
      required this.orderNumber})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        title, r'GPageOnCreateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        layout, r'GPageOnCreateInput', 'layout');
    BuiltValueNullFieldError.checkNotNull(
        orderNumber, r'GPageOnCreateInput', 'orderNumber');
  }

  @override
  GPageOnCreateInput rebuild(
          void Function(GPageOnCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageOnCreateInputBuilder toBuilder() =>
      new GPageOnCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageOnCreateInput &&
        title == other.title &&
        description == other.description &&
        layout == other.layout &&
        orderNumber == other.orderNumber;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, title.hashCode), description.hashCode), layout.hashCode),
        orderNumber.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageOnCreateInput')
          ..add('title', title)
          ..add('description', description)
          ..add('layout', layout)
          ..add('orderNumber', orderNumber))
        .toString();
  }
}

class GPageOnCreateInputBuilder
    implements Builder<GPageOnCreateInput, GPageOnCreateInputBuilder> {
  _$GPageOnCreateInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _layout;
  String? get layout => _$this._layout;
  set layout(String? layout) => _$this._layout = layout;

  int? _orderNumber;
  int? get orderNumber => _$this._orderNumber;
  set orderNumber(int? orderNumber) => _$this._orderNumber = orderNumber;

  GPageOnCreateInputBuilder();

  GPageOnCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _layout = $v.layout;
      _orderNumber = $v.orderNumber;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageOnCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageOnCreateInput;
  }

  @override
  void update(void Function(GPageOnCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageOnCreateInput build() => _build();

  _$GPageOnCreateInput _build() {
    final _$result = _$v ??
        new _$GPageOnCreateInput._(
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GPageOnCreateInput', 'title'),
            description: description,
            layout: BuiltValueNullFieldError.checkNotNull(
                layout, r'GPageOnCreateInput', 'layout'),
            orderNumber: BuiltValueNullFieldError.checkNotNull(
                orderNumber, r'GPageOnCreateInput', 'orderNumber'));
    replace(_$result);
    return _$result;
  }
}

class _$GPageOptions extends GPageOptions {
  @override
  final BuiltList<GPageSort>? sort;
  @override
  final int? limit;
  @override
  final int? offset;

  factory _$GPageOptions([void Function(GPageOptionsBuilder)? updates]) =>
      (new GPageOptionsBuilder()..update(updates))._build();

  _$GPageOptions._({this.sort, this.limit, this.offset}) : super._();

  @override
  GPageOptions rebuild(void Function(GPageOptionsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageOptionsBuilder toBuilder() => new GPageOptionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageOptions &&
        sort == other.sort &&
        limit == other.limit &&
        offset == other.offset;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, sort.hashCode), limit.hashCode), offset.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageOptions')
          ..add('sort', sort)
          ..add('limit', limit)
          ..add('offset', offset))
        .toString();
  }
}

class GPageOptionsBuilder
    implements Builder<GPageOptions, GPageOptionsBuilder> {
  _$GPageOptions? _$v;

  ListBuilder<GPageSort>? _sort;
  ListBuilder<GPageSort> get sort =>
      _$this._sort ??= new ListBuilder<GPageSort>();
  set sort(ListBuilder<GPageSort>? sort) => _$this._sort = sort;

  int? _limit;
  int? get limit => _$this._limit;
  set limit(int? limit) => _$this._limit = limit;

  int? _offset;
  int? get offset => _$this._offset;
  set offset(int? offset) => _$this._offset = offset;

  GPageOptionsBuilder();

  GPageOptionsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sort = $v.sort?.toBuilder();
      _limit = $v.limit;
      _offset = $v.offset;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageOptions other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageOptions;
  }

  @override
  void update(void Function(GPageOptionsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageOptions build() => _build();

  _$GPageOptions _build() {
    _$GPageOptions _$result;
    try {
      _$result = _$v ??
          new _$GPageOptions._(
              sort: _sort?.build(), limit: limit, offset: offset);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'sort';
        _sort?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageOptions', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageAggregateInput extends GPageParentPageAggregateInput {
  @override
  final int? count;
  @override
  final int? count_LT;
  @override
  final int? count_LTE;
  @override
  final int? count_GT;
  @override
  final int? count_GTE;
  @override
  final BuiltList<GPageParentPageAggregateInput>? AND;
  @override
  final BuiltList<GPageParentPageAggregateInput>? OR;
  @override
  final GPageParentPageNodeAggregationWhereInput? node;

  factory _$GPageParentPageAggregateInput(
          [void Function(GPageParentPageAggregateInputBuilder)? updates]) =>
      (new GPageParentPageAggregateInputBuilder()..update(updates))._build();

  _$GPageParentPageAggregateInput._(
      {this.count,
      this.count_LT,
      this.count_LTE,
      this.count_GT,
      this.count_GTE,
      this.AND,
      this.OR,
      this.node})
      : super._();

  @override
  GPageParentPageAggregateInput rebuild(
          void Function(GPageParentPageAggregateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageAggregateInputBuilder toBuilder() =>
      new GPageParentPageAggregateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageAggregateInput &&
        count == other.count &&
        count_LT == other.count_LT &&
        count_LTE == other.count_LTE &&
        count_GT == other.count_GT &&
        count_GTE == other.count_GTE &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, count.hashCode), count_LT.hashCode),
                            count_LTE.hashCode),
                        count_GT.hashCode),
                    count_GTE.hashCode),
                AND.hashCode),
            OR.hashCode),
        node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageAggregateInput')
          ..add('count', count)
          ..add('count_LT', count_LT)
          ..add('count_LTE', count_LTE)
          ..add('count_GT', count_GT)
          ..add('count_GTE', count_GTE)
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node))
        .toString();
  }
}

class GPageParentPageAggregateInputBuilder
    implements
        Builder<GPageParentPageAggregateInput,
            GPageParentPageAggregateInputBuilder> {
  _$GPageParentPageAggregateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  int? _count_LT;
  int? get count_LT => _$this._count_LT;
  set count_LT(int? count_LT) => _$this._count_LT = count_LT;

  int? _count_LTE;
  int? get count_LTE => _$this._count_LTE;
  set count_LTE(int? count_LTE) => _$this._count_LTE = count_LTE;

  int? _count_GT;
  int? get count_GT => _$this._count_GT;
  set count_GT(int? count_GT) => _$this._count_GT = count_GT;

  int? _count_GTE;
  int? get count_GTE => _$this._count_GTE;
  set count_GTE(int? count_GTE) => _$this._count_GTE = count_GTE;

  ListBuilder<GPageParentPageAggregateInput>? _AND;
  ListBuilder<GPageParentPageAggregateInput> get AND =>
      _$this._AND ??= new ListBuilder<GPageParentPageAggregateInput>();
  set AND(ListBuilder<GPageParentPageAggregateInput>? AND) => _$this._AND = AND;

  ListBuilder<GPageParentPageAggregateInput>? _OR;
  ListBuilder<GPageParentPageAggregateInput> get OR =>
      _$this._OR ??= new ListBuilder<GPageParentPageAggregateInput>();
  set OR(ListBuilder<GPageParentPageAggregateInput>? OR) => _$this._OR = OR;

  GPageParentPageNodeAggregationWhereInputBuilder? _node;
  GPageParentPageNodeAggregationWhereInputBuilder get node =>
      _$this._node ??= new GPageParentPageNodeAggregationWhereInputBuilder();
  set node(GPageParentPageNodeAggregationWhereInputBuilder? node) =>
      _$this._node = node;

  GPageParentPageAggregateInputBuilder();

  GPageParentPageAggregateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _count_LT = $v.count_LT;
      _count_LTE = $v.count_LTE;
      _count_GT = $v.count_GT;
      _count_GTE = $v.count_GTE;
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageAggregateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageAggregateInput;
  }

  @override
  void update(void Function(GPageParentPageAggregateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageAggregateInput build() => _build();

  _$GPageParentPageAggregateInput _build() {
    _$GPageParentPageAggregateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageAggregateInput._(
              count: count,
              count_LT: count_LT,
              count_LTE: count_LTE,
              count_GT: count_GT,
              count_GTE: count_GTE,
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageAggregateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageConnectFieldInput
    extends GPageParentPageConnectFieldInput {
  @override
  final GPageConnectWhere? where;
  @override
  final GPageConnectInput? connect;

  factory _$GPageParentPageConnectFieldInput(
          [void Function(GPageParentPageConnectFieldInputBuilder)? updates]) =>
      (new GPageParentPageConnectFieldInputBuilder()..update(updates))._build();

  _$GPageParentPageConnectFieldInput._({this.where, this.connect}) : super._();

  @override
  GPageParentPageConnectFieldInput rebuild(
          void Function(GPageParentPageConnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageConnectFieldInputBuilder toBuilder() =>
      new GPageParentPageConnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageConnectFieldInput &&
        where == other.where &&
        connect == other.connect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), connect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageConnectFieldInput')
          ..add('where', where)
          ..add('connect', connect))
        .toString();
  }
}

class GPageParentPageConnectFieldInputBuilder
    implements
        Builder<GPageParentPageConnectFieldInput,
            GPageParentPageConnectFieldInputBuilder> {
  _$GPageParentPageConnectFieldInput? _$v;

  GPageConnectWhereBuilder? _where;
  GPageConnectWhereBuilder get where =>
      _$this._where ??= new GPageConnectWhereBuilder();
  set where(GPageConnectWhereBuilder? where) => _$this._where = where;

  GPageConnectInputBuilder? _connect;
  GPageConnectInputBuilder get connect =>
      _$this._connect ??= new GPageConnectInputBuilder();
  set connect(GPageConnectInputBuilder? connect) => _$this._connect = connect;

  GPageParentPageConnectFieldInputBuilder();

  GPageParentPageConnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageConnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageConnectFieldInput;
  }

  @override
  void update(void Function(GPageParentPageConnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageConnectFieldInput build() => _build();

  _$GPageParentPageConnectFieldInput _build() {
    _$GPageParentPageConnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageConnectFieldInput._(
              where: _where?.build(), connect: _connect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'connect';
        _connect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageConnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageConnectionSort extends GPageParentPageConnectionSort {
  @override
  final GPageSort? node;

  factory _$GPageParentPageConnectionSort(
          [void Function(GPageParentPageConnectionSortBuilder)? updates]) =>
      (new GPageParentPageConnectionSortBuilder()..update(updates))._build();

  _$GPageParentPageConnectionSort._({this.node}) : super._();

  @override
  GPageParentPageConnectionSort rebuild(
          void Function(GPageParentPageConnectionSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageConnectionSortBuilder toBuilder() =>
      new GPageParentPageConnectionSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageConnectionSort && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageConnectionSort')
          ..add('node', node))
        .toString();
  }
}

class GPageParentPageConnectionSortBuilder
    implements
        Builder<GPageParentPageConnectionSort,
            GPageParentPageConnectionSortBuilder> {
  _$GPageParentPageConnectionSort? _$v;

  GPageSortBuilder? _node;
  GPageSortBuilder get node => _$this._node ??= new GPageSortBuilder();
  set node(GPageSortBuilder? node) => _$this._node = node;

  GPageParentPageConnectionSortBuilder();

  GPageParentPageConnectionSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageConnectionSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageConnectionSort;
  }

  @override
  void update(void Function(GPageParentPageConnectionSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageConnectionSort build() => _build();

  _$GPageParentPageConnectionSort _build() {
    _$GPageParentPageConnectionSort _$result;
    try {
      _$result =
          _$v ?? new _$GPageParentPageConnectionSort._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageConnectionSort', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageConnectionWhere extends GPageParentPageConnectionWhere {
  @override
  final BuiltList<GPageParentPageConnectionWhere>? AND;
  @override
  final BuiltList<GPageParentPageConnectionWhere>? OR;
  @override
  final GPageWhere? node;
  @override
  final GPageWhere? node_NOT;

  factory _$GPageParentPageConnectionWhere(
          [void Function(GPageParentPageConnectionWhereBuilder)? updates]) =>
      (new GPageParentPageConnectionWhereBuilder()..update(updates))._build();

  _$GPageParentPageConnectionWhere._(
      {this.AND, this.OR, this.node, this.node_NOT})
      : super._();

  @override
  GPageParentPageConnectionWhere rebuild(
          void Function(GPageParentPageConnectionWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageConnectionWhereBuilder toBuilder() =>
      new GPageParentPageConnectionWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageConnectionWhere &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node &&
        node_NOT == other.node_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), node.hashCode),
        node_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageConnectionWhere')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node)
          ..add('node_NOT', node_NOT))
        .toString();
  }
}

class GPageParentPageConnectionWhereBuilder
    implements
        Builder<GPageParentPageConnectionWhere,
            GPageParentPageConnectionWhereBuilder> {
  _$GPageParentPageConnectionWhere? _$v;

  ListBuilder<GPageParentPageConnectionWhere>? _AND;
  ListBuilder<GPageParentPageConnectionWhere> get AND =>
      _$this._AND ??= new ListBuilder<GPageParentPageConnectionWhere>();
  set AND(ListBuilder<GPageParentPageConnectionWhere>? AND) =>
      _$this._AND = AND;

  ListBuilder<GPageParentPageConnectionWhere>? _OR;
  ListBuilder<GPageParentPageConnectionWhere> get OR =>
      _$this._OR ??= new ListBuilder<GPageParentPageConnectionWhere>();
  set OR(ListBuilder<GPageParentPageConnectionWhere>? OR) => _$this._OR = OR;

  GPageWhereBuilder? _node;
  GPageWhereBuilder get node => _$this._node ??= new GPageWhereBuilder();
  set node(GPageWhereBuilder? node) => _$this._node = node;

  GPageWhereBuilder? _node_NOT;
  GPageWhereBuilder get node_NOT =>
      _$this._node_NOT ??= new GPageWhereBuilder();
  set node_NOT(GPageWhereBuilder? node_NOT) => _$this._node_NOT = node_NOT;

  GPageParentPageConnectionWhereBuilder();

  GPageParentPageConnectionWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _node_NOT = $v.node_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageConnectionWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageConnectionWhere;
  }

  @override
  void update(void Function(GPageParentPageConnectionWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageConnectionWhere build() => _build();

  _$GPageParentPageConnectionWhere _build() {
    _$GPageParentPageConnectionWhere _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageConnectionWhere._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build(),
              node_NOT: _node_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
        _$failedField = 'node_NOT';
        _node_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageConnectionWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageConnectOrCreateFieldInput
    extends GPageParentPageConnectOrCreateFieldInput {
  @override
  final GPageConnectOrCreateWhere where;
  @override
  final GPageParentPageConnectOrCreateFieldInputOnCreate onCreate;

  factory _$GPageParentPageConnectOrCreateFieldInput(
          [void Function(GPageParentPageConnectOrCreateFieldInputBuilder)?
              updates]) =>
      (new GPageParentPageConnectOrCreateFieldInputBuilder()..update(updates))
          ._build();

  _$GPageParentPageConnectOrCreateFieldInput._(
      {required this.where, required this.onCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GPageParentPageConnectOrCreateFieldInput', 'where');
    BuiltValueNullFieldError.checkNotNull(
        onCreate, r'GPageParentPageConnectOrCreateFieldInput', 'onCreate');
  }

  @override
  GPageParentPageConnectOrCreateFieldInput rebuild(
          void Function(GPageParentPageConnectOrCreateFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageConnectOrCreateFieldInputBuilder toBuilder() =>
      new GPageParentPageConnectOrCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageConnectOrCreateFieldInput &&
        where == other.where &&
        onCreate == other.onCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), onCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageParentPageConnectOrCreateFieldInput')
          ..add('where', where)
          ..add('onCreate', onCreate))
        .toString();
  }
}

class GPageParentPageConnectOrCreateFieldInputBuilder
    implements
        Builder<GPageParentPageConnectOrCreateFieldInput,
            GPageParentPageConnectOrCreateFieldInputBuilder> {
  _$GPageParentPageConnectOrCreateFieldInput? _$v;

  GPageConnectOrCreateWhereBuilder? _where;
  GPageConnectOrCreateWhereBuilder get where =>
      _$this._where ??= new GPageConnectOrCreateWhereBuilder();
  set where(GPageConnectOrCreateWhereBuilder? where) => _$this._where = where;

  GPageParentPageConnectOrCreateFieldInputOnCreateBuilder? _onCreate;
  GPageParentPageConnectOrCreateFieldInputOnCreateBuilder get onCreate =>
      _$this._onCreate ??=
          new GPageParentPageConnectOrCreateFieldInputOnCreateBuilder();
  set onCreate(
          GPageParentPageConnectOrCreateFieldInputOnCreateBuilder? onCreate) =>
      _$this._onCreate = onCreate;

  GPageParentPageConnectOrCreateFieldInputBuilder();

  GPageParentPageConnectOrCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where.toBuilder();
      _onCreate = $v.onCreate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageConnectOrCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageConnectOrCreateFieldInput;
  }

  @override
  void update(
      void Function(GPageParentPageConnectOrCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageConnectOrCreateFieldInput build() => _build();

  _$GPageParentPageConnectOrCreateFieldInput _build() {
    _$GPageParentPageConnectOrCreateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageConnectOrCreateFieldInput._(
              where: where.build(), onCreate: onCreate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        where.build();
        _$failedField = 'onCreate';
        onCreate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageConnectOrCreateFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageConnectOrCreateFieldInputOnCreate
    extends GPageParentPageConnectOrCreateFieldInputOnCreate {
  @override
  final GPageOnCreateInput node;

  factory _$GPageParentPageConnectOrCreateFieldInputOnCreate(
          [void Function(
                  GPageParentPageConnectOrCreateFieldInputOnCreateBuilder)?
              updates]) =>
      (new GPageParentPageConnectOrCreateFieldInputOnCreateBuilder()
            ..update(updates))
          ._build();

  _$GPageParentPageConnectOrCreateFieldInputOnCreate._({required this.node})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageParentPageConnectOrCreateFieldInputOnCreate', 'node');
  }

  @override
  GPageParentPageConnectOrCreateFieldInputOnCreate rebuild(
          void Function(GPageParentPageConnectOrCreateFieldInputOnCreateBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageConnectOrCreateFieldInputOnCreateBuilder toBuilder() =>
      new GPageParentPageConnectOrCreateFieldInputOnCreateBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageConnectOrCreateFieldInputOnCreate &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageParentPageConnectOrCreateFieldInputOnCreate')
          ..add('node', node))
        .toString();
  }
}

class GPageParentPageConnectOrCreateFieldInputOnCreateBuilder
    implements
        Builder<GPageParentPageConnectOrCreateFieldInputOnCreate,
            GPageParentPageConnectOrCreateFieldInputOnCreateBuilder> {
  _$GPageParentPageConnectOrCreateFieldInputOnCreate? _$v;

  GPageOnCreateInputBuilder? _node;
  GPageOnCreateInputBuilder get node =>
      _$this._node ??= new GPageOnCreateInputBuilder();
  set node(GPageOnCreateInputBuilder? node) => _$this._node = node;

  GPageParentPageConnectOrCreateFieldInputOnCreateBuilder();

  GPageParentPageConnectOrCreateFieldInputOnCreateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageConnectOrCreateFieldInputOnCreate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageConnectOrCreateFieldInputOnCreate;
  }

  @override
  void update(
      void Function(GPageParentPageConnectOrCreateFieldInputOnCreateBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageConnectOrCreateFieldInputOnCreate build() => _build();

  _$GPageParentPageConnectOrCreateFieldInputOnCreate _build() {
    _$GPageParentPageConnectOrCreateFieldInputOnCreate _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageConnectOrCreateFieldInputOnCreate._(
              node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageConnectOrCreateFieldInputOnCreate',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageCreateFieldInput
    extends GPageParentPageCreateFieldInput {
  @override
  final GPageCreateInput node;

  factory _$GPageParentPageCreateFieldInput(
          [void Function(GPageParentPageCreateFieldInputBuilder)? updates]) =>
      (new GPageParentPageCreateFieldInputBuilder()..update(updates))._build();

  _$GPageParentPageCreateFieldInput._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageParentPageCreateFieldInput', 'node');
  }

  @override
  GPageParentPageCreateFieldInput rebuild(
          void Function(GPageParentPageCreateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageCreateFieldInputBuilder toBuilder() =>
      new GPageParentPageCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageCreateFieldInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageCreateFieldInput')
          ..add('node', node))
        .toString();
  }
}

class GPageParentPageCreateFieldInputBuilder
    implements
        Builder<GPageParentPageCreateFieldInput,
            GPageParentPageCreateFieldInputBuilder> {
  _$GPageParentPageCreateFieldInput? _$v;

  GPageCreateInputBuilder? _node;
  GPageCreateInputBuilder get node =>
      _$this._node ??= new GPageCreateInputBuilder();
  set node(GPageCreateInputBuilder? node) => _$this._node = node;

  GPageParentPageCreateFieldInputBuilder();

  GPageParentPageCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageCreateFieldInput;
  }

  @override
  void update(void Function(GPageParentPageCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageCreateFieldInput build() => _build();

  _$GPageParentPageCreateFieldInput _build() {
    _$GPageParentPageCreateFieldInput _$result;
    try {
      _$result =
          _$v ?? new _$GPageParentPageCreateFieldInput._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageCreateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageDeleteFieldInput
    extends GPageParentPageDeleteFieldInput {
  @override
  final GPageParentPageConnectionWhere? where;
  @override
  final GPageDeleteInput? delete;

  factory _$GPageParentPageDeleteFieldInput(
          [void Function(GPageParentPageDeleteFieldInputBuilder)? updates]) =>
      (new GPageParentPageDeleteFieldInputBuilder()..update(updates))._build();

  _$GPageParentPageDeleteFieldInput._({this.where, this.delete}) : super._();

  @override
  GPageParentPageDeleteFieldInput rebuild(
          void Function(GPageParentPageDeleteFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageDeleteFieldInputBuilder toBuilder() =>
      new GPageParentPageDeleteFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageDeleteFieldInput &&
        where == other.where &&
        delete == other.delete;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), delete.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageDeleteFieldInput')
          ..add('where', where)
          ..add('delete', delete))
        .toString();
  }
}

class GPageParentPageDeleteFieldInputBuilder
    implements
        Builder<GPageParentPageDeleteFieldInput,
            GPageParentPageDeleteFieldInputBuilder> {
  _$GPageParentPageDeleteFieldInput? _$v;

  GPageParentPageConnectionWhereBuilder? _where;
  GPageParentPageConnectionWhereBuilder get where =>
      _$this._where ??= new GPageParentPageConnectionWhereBuilder();
  set where(GPageParentPageConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageDeleteInputBuilder? _delete;
  GPageDeleteInputBuilder get delete =>
      _$this._delete ??= new GPageDeleteInputBuilder();
  set delete(GPageDeleteInputBuilder? delete) => _$this._delete = delete;

  GPageParentPageDeleteFieldInputBuilder();

  GPageParentPageDeleteFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageDeleteFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageDeleteFieldInput;
  }

  @override
  void update(void Function(GPageParentPageDeleteFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageDeleteFieldInput build() => _build();

  _$GPageParentPageDeleteFieldInput _build() {
    _$GPageParentPageDeleteFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageDeleteFieldInput._(
              where: _where?.build(), delete: _delete?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'delete';
        _delete?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageDeleteFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageDisconnectFieldInput
    extends GPageParentPageDisconnectFieldInput {
  @override
  final GPageParentPageConnectionWhere? where;
  @override
  final GPageDisconnectInput? disconnect;

  factory _$GPageParentPageDisconnectFieldInput(
          [void Function(GPageParentPageDisconnectFieldInputBuilder)?
              updates]) =>
      (new GPageParentPageDisconnectFieldInputBuilder()..update(updates))
          ._build();

  _$GPageParentPageDisconnectFieldInput._({this.where, this.disconnect})
      : super._();

  @override
  GPageParentPageDisconnectFieldInput rebuild(
          void Function(GPageParentPageDisconnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageDisconnectFieldInputBuilder toBuilder() =>
      new GPageParentPageDisconnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageDisconnectFieldInput &&
        where == other.where &&
        disconnect == other.disconnect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), disconnect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageDisconnectFieldInput')
          ..add('where', where)
          ..add('disconnect', disconnect))
        .toString();
  }
}

class GPageParentPageDisconnectFieldInputBuilder
    implements
        Builder<GPageParentPageDisconnectFieldInput,
            GPageParentPageDisconnectFieldInputBuilder> {
  _$GPageParentPageDisconnectFieldInput? _$v;

  GPageParentPageConnectionWhereBuilder? _where;
  GPageParentPageConnectionWhereBuilder get where =>
      _$this._where ??= new GPageParentPageConnectionWhereBuilder();
  set where(GPageParentPageConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageDisconnectInputBuilder? _disconnect;
  GPageDisconnectInputBuilder get disconnect =>
      _$this._disconnect ??= new GPageDisconnectInputBuilder();
  set disconnect(GPageDisconnectInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GPageParentPageDisconnectFieldInputBuilder();

  GPageParentPageDisconnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageDisconnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageDisconnectFieldInput;
  }

  @override
  void update(
      void Function(GPageParentPageDisconnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageDisconnectFieldInput build() => _build();

  _$GPageParentPageDisconnectFieldInput _build() {
    _$GPageParentPageDisconnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageDisconnectFieldInput._(
              where: _where?.build(), disconnect: _disconnect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageDisconnectFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageFieldInput extends GPageParentPageFieldInput {
  @override
  final GPageParentPageCreateFieldInput? create;
  @override
  final GPageParentPageConnectFieldInput? connect;
  @override
  final GPageParentPageConnectOrCreateFieldInput? connectOrCreate;

  factory _$GPageParentPageFieldInput(
          [void Function(GPageParentPageFieldInputBuilder)? updates]) =>
      (new GPageParentPageFieldInputBuilder()..update(updates))._build();

  _$GPageParentPageFieldInput._(
      {this.create, this.connect, this.connectOrCreate})
      : super._();

  @override
  GPageParentPageFieldInput rebuild(
          void Function(GPageParentPageFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageFieldInputBuilder toBuilder() =>
      new GPageParentPageFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageFieldInput &&
        create == other.create &&
        connect == other.connect &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, create.hashCode), connect.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageFieldInput')
          ..add('create', create)
          ..add('connect', connect)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GPageParentPageFieldInputBuilder
    implements
        Builder<GPageParentPageFieldInput, GPageParentPageFieldInputBuilder> {
  _$GPageParentPageFieldInput? _$v;

  GPageParentPageCreateFieldInputBuilder? _create;
  GPageParentPageCreateFieldInputBuilder get create =>
      _$this._create ??= new GPageParentPageCreateFieldInputBuilder();
  set create(GPageParentPageCreateFieldInputBuilder? create) =>
      _$this._create = create;

  GPageParentPageConnectFieldInputBuilder? _connect;
  GPageParentPageConnectFieldInputBuilder get connect =>
      _$this._connect ??= new GPageParentPageConnectFieldInputBuilder();
  set connect(GPageParentPageConnectFieldInputBuilder? connect) =>
      _$this._connect = connect;

  GPageParentPageConnectOrCreateFieldInputBuilder? _connectOrCreate;
  GPageParentPageConnectOrCreateFieldInputBuilder get connectOrCreate =>
      _$this._connectOrCreate ??=
          new GPageParentPageConnectOrCreateFieldInputBuilder();
  set connectOrCreate(
          GPageParentPageConnectOrCreateFieldInputBuilder? connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GPageParentPageFieldInputBuilder();

  GPageParentPageFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _create = $v.create?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageFieldInput;
  }

  @override
  void update(void Function(GPageParentPageFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageFieldInput build() => _build();

  _$GPageParentPageFieldInput _build() {
    _$GPageParentPageFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageFieldInput._(
              create: _create?.build(),
              connect: _connect?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageNodeAggregationWhereInput
    extends GPageParentPageNodeAggregationWhereInput {
  @override
  final BuiltList<GPageParentPageNodeAggregationWhereInput>? AND;
  @override
  final BuiltList<GPageParentPageNodeAggregationWhereInput>? OR;
  @override
  final String? id_EQUAL;
  @override
  final String? title_EQUAL;
  @override
  final double? title_AVERAGE_EQUAL;
  @override
  final int? title_LONGEST_EQUAL;
  @override
  final int? title_SHORTEST_EQUAL;
  @override
  final int? title_GT;
  @override
  final double? title_AVERAGE_GT;
  @override
  final int? title_LONGEST_GT;
  @override
  final int? title_SHORTEST_GT;
  @override
  final int? title_GTE;
  @override
  final double? title_AVERAGE_GTE;
  @override
  final int? title_LONGEST_GTE;
  @override
  final int? title_SHORTEST_GTE;
  @override
  final int? title_LT;
  @override
  final double? title_AVERAGE_LT;
  @override
  final int? title_LONGEST_LT;
  @override
  final int? title_SHORTEST_LT;
  @override
  final int? title_LTE;
  @override
  final double? title_AVERAGE_LTE;
  @override
  final int? title_LONGEST_LTE;
  @override
  final int? title_SHORTEST_LTE;
  @override
  final String? description_EQUAL;
  @override
  final double? description_AVERAGE_EQUAL;
  @override
  final int? description_LONGEST_EQUAL;
  @override
  final int? description_SHORTEST_EQUAL;
  @override
  final int? description_GT;
  @override
  final double? description_AVERAGE_GT;
  @override
  final int? description_LONGEST_GT;
  @override
  final int? description_SHORTEST_GT;
  @override
  final int? description_GTE;
  @override
  final double? description_AVERAGE_GTE;
  @override
  final int? description_LONGEST_GTE;
  @override
  final int? description_SHORTEST_GTE;
  @override
  final int? description_LT;
  @override
  final double? description_AVERAGE_LT;
  @override
  final int? description_LONGEST_LT;
  @override
  final int? description_SHORTEST_LT;
  @override
  final int? description_LTE;
  @override
  final double? description_AVERAGE_LTE;
  @override
  final int? description_LONGEST_LTE;
  @override
  final int? description_SHORTEST_LTE;
  @override
  final String? layout_EQUAL;
  @override
  final double? layout_AVERAGE_EQUAL;
  @override
  final int? layout_LONGEST_EQUAL;
  @override
  final int? layout_SHORTEST_EQUAL;
  @override
  final int? layout_GT;
  @override
  final double? layout_AVERAGE_GT;
  @override
  final int? layout_LONGEST_GT;
  @override
  final int? layout_SHORTEST_GT;
  @override
  final int? layout_GTE;
  @override
  final double? layout_AVERAGE_GTE;
  @override
  final int? layout_LONGEST_GTE;
  @override
  final int? layout_SHORTEST_GTE;
  @override
  final int? layout_LT;
  @override
  final double? layout_AVERAGE_LT;
  @override
  final int? layout_LONGEST_LT;
  @override
  final int? layout_SHORTEST_LT;
  @override
  final int? layout_LTE;
  @override
  final double? layout_AVERAGE_LTE;
  @override
  final int? layout_LONGEST_LTE;
  @override
  final int? layout_SHORTEST_LTE;
  @override
  final int? orderNumber_EQUAL;
  @override
  final double? orderNumber_AVERAGE_EQUAL;
  @override
  final int? orderNumber_MIN_EQUAL;
  @override
  final int? orderNumber_MAX_EQUAL;
  @override
  final int? orderNumber_SUM_EQUAL;
  @override
  final int? orderNumber_GT;
  @override
  final double? orderNumber_AVERAGE_GT;
  @override
  final int? orderNumber_MIN_GT;
  @override
  final int? orderNumber_MAX_GT;
  @override
  final int? orderNumber_SUM_GT;
  @override
  final int? orderNumber_GTE;
  @override
  final double? orderNumber_AVERAGE_GTE;
  @override
  final int? orderNumber_MIN_GTE;
  @override
  final int? orderNumber_MAX_GTE;
  @override
  final int? orderNumber_SUM_GTE;
  @override
  final int? orderNumber_LT;
  @override
  final double? orderNumber_AVERAGE_LT;
  @override
  final int? orderNumber_MIN_LT;
  @override
  final int? orderNumber_MAX_LT;
  @override
  final int? orderNumber_SUM_LT;
  @override
  final int? orderNumber_LTE;
  @override
  final double? orderNumber_AVERAGE_LTE;
  @override
  final int? orderNumber_MIN_LTE;
  @override
  final int? orderNumber_MAX_LTE;
  @override
  final int? orderNumber_SUM_LTE;

  factory _$GPageParentPageNodeAggregationWhereInput(
          [void Function(GPageParentPageNodeAggregationWhereInputBuilder)?
              updates]) =>
      (new GPageParentPageNodeAggregationWhereInputBuilder()..update(updates))
          ._build();

  _$GPageParentPageNodeAggregationWhereInput._(
      {this.AND,
      this.OR,
      this.id_EQUAL,
      this.title_EQUAL,
      this.title_AVERAGE_EQUAL,
      this.title_LONGEST_EQUAL,
      this.title_SHORTEST_EQUAL,
      this.title_GT,
      this.title_AVERAGE_GT,
      this.title_LONGEST_GT,
      this.title_SHORTEST_GT,
      this.title_GTE,
      this.title_AVERAGE_GTE,
      this.title_LONGEST_GTE,
      this.title_SHORTEST_GTE,
      this.title_LT,
      this.title_AVERAGE_LT,
      this.title_LONGEST_LT,
      this.title_SHORTEST_LT,
      this.title_LTE,
      this.title_AVERAGE_LTE,
      this.title_LONGEST_LTE,
      this.title_SHORTEST_LTE,
      this.description_EQUAL,
      this.description_AVERAGE_EQUAL,
      this.description_LONGEST_EQUAL,
      this.description_SHORTEST_EQUAL,
      this.description_GT,
      this.description_AVERAGE_GT,
      this.description_LONGEST_GT,
      this.description_SHORTEST_GT,
      this.description_GTE,
      this.description_AVERAGE_GTE,
      this.description_LONGEST_GTE,
      this.description_SHORTEST_GTE,
      this.description_LT,
      this.description_AVERAGE_LT,
      this.description_LONGEST_LT,
      this.description_SHORTEST_LT,
      this.description_LTE,
      this.description_AVERAGE_LTE,
      this.description_LONGEST_LTE,
      this.description_SHORTEST_LTE,
      this.layout_EQUAL,
      this.layout_AVERAGE_EQUAL,
      this.layout_LONGEST_EQUAL,
      this.layout_SHORTEST_EQUAL,
      this.layout_GT,
      this.layout_AVERAGE_GT,
      this.layout_LONGEST_GT,
      this.layout_SHORTEST_GT,
      this.layout_GTE,
      this.layout_AVERAGE_GTE,
      this.layout_LONGEST_GTE,
      this.layout_SHORTEST_GTE,
      this.layout_LT,
      this.layout_AVERAGE_LT,
      this.layout_LONGEST_LT,
      this.layout_SHORTEST_LT,
      this.layout_LTE,
      this.layout_AVERAGE_LTE,
      this.layout_LONGEST_LTE,
      this.layout_SHORTEST_LTE,
      this.orderNumber_EQUAL,
      this.orderNumber_AVERAGE_EQUAL,
      this.orderNumber_MIN_EQUAL,
      this.orderNumber_MAX_EQUAL,
      this.orderNumber_SUM_EQUAL,
      this.orderNumber_GT,
      this.orderNumber_AVERAGE_GT,
      this.orderNumber_MIN_GT,
      this.orderNumber_MAX_GT,
      this.orderNumber_SUM_GT,
      this.orderNumber_GTE,
      this.orderNumber_AVERAGE_GTE,
      this.orderNumber_MIN_GTE,
      this.orderNumber_MAX_GTE,
      this.orderNumber_SUM_GTE,
      this.orderNumber_LT,
      this.orderNumber_AVERAGE_LT,
      this.orderNumber_MIN_LT,
      this.orderNumber_MAX_LT,
      this.orderNumber_SUM_LT,
      this.orderNumber_LTE,
      this.orderNumber_AVERAGE_LTE,
      this.orderNumber_MIN_LTE,
      this.orderNumber_MAX_LTE,
      this.orderNumber_SUM_LTE})
      : super._();

  @override
  GPageParentPageNodeAggregationWhereInput rebuild(
          void Function(GPageParentPageNodeAggregationWhereInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageNodeAggregationWhereInputBuilder toBuilder() =>
      new GPageParentPageNodeAggregationWhereInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageNodeAggregationWhereInput &&
        AND == other.AND &&
        OR == other.OR &&
        id_EQUAL == other.id_EQUAL &&
        title_EQUAL == other.title_EQUAL &&
        title_AVERAGE_EQUAL == other.title_AVERAGE_EQUAL &&
        title_LONGEST_EQUAL == other.title_LONGEST_EQUAL &&
        title_SHORTEST_EQUAL == other.title_SHORTEST_EQUAL &&
        title_GT == other.title_GT &&
        title_AVERAGE_GT == other.title_AVERAGE_GT &&
        title_LONGEST_GT == other.title_LONGEST_GT &&
        title_SHORTEST_GT == other.title_SHORTEST_GT &&
        title_GTE == other.title_GTE &&
        title_AVERAGE_GTE == other.title_AVERAGE_GTE &&
        title_LONGEST_GTE == other.title_LONGEST_GTE &&
        title_SHORTEST_GTE == other.title_SHORTEST_GTE &&
        title_LT == other.title_LT &&
        title_AVERAGE_LT == other.title_AVERAGE_LT &&
        title_LONGEST_LT == other.title_LONGEST_LT &&
        title_SHORTEST_LT == other.title_SHORTEST_LT &&
        title_LTE == other.title_LTE &&
        title_AVERAGE_LTE == other.title_AVERAGE_LTE &&
        title_LONGEST_LTE == other.title_LONGEST_LTE &&
        title_SHORTEST_LTE == other.title_SHORTEST_LTE &&
        description_EQUAL == other.description_EQUAL &&
        description_AVERAGE_EQUAL == other.description_AVERAGE_EQUAL &&
        description_LONGEST_EQUAL == other.description_LONGEST_EQUAL &&
        description_SHORTEST_EQUAL == other.description_SHORTEST_EQUAL &&
        description_GT == other.description_GT &&
        description_AVERAGE_GT == other.description_AVERAGE_GT &&
        description_LONGEST_GT == other.description_LONGEST_GT &&
        description_SHORTEST_GT == other.description_SHORTEST_GT &&
        description_GTE == other.description_GTE &&
        description_AVERAGE_GTE == other.description_AVERAGE_GTE &&
        description_LONGEST_GTE == other.description_LONGEST_GTE &&
        description_SHORTEST_GTE == other.description_SHORTEST_GTE &&
        description_LT == other.description_LT &&
        description_AVERAGE_LT == other.description_AVERAGE_LT &&
        description_LONGEST_LT == other.description_LONGEST_LT &&
        description_SHORTEST_LT == other.description_SHORTEST_LT &&
        description_LTE == other.description_LTE &&
        description_AVERAGE_LTE == other.description_AVERAGE_LTE &&
        description_LONGEST_LTE == other.description_LONGEST_LTE &&
        description_SHORTEST_LTE == other.description_SHORTEST_LTE &&
        layout_EQUAL == other.layout_EQUAL &&
        layout_AVERAGE_EQUAL == other.layout_AVERAGE_EQUAL &&
        layout_LONGEST_EQUAL == other.layout_LONGEST_EQUAL &&
        layout_SHORTEST_EQUAL == other.layout_SHORTEST_EQUAL &&
        layout_GT == other.layout_GT &&
        layout_AVERAGE_GT == other.layout_AVERAGE_GT &&
        layout_LONGEST_GT == other.layout_LONGEST_GT &&
        layout_SHORTEST_GT == other.layout_SHORTEST_GT &&
        layout_GTE == other.layout_GTE &&
        layout_AVERAGE_GTE == other.layout_AVERAGE_GTE &&
        layout_LONGEST_GTE == other.layout_LONGEST_GTE &&
        layout_SHORTEST_GTE == other.layout_SHORTEST_GTE &&
        layout_LT == other.layout_LT &&
        layout_AVERAGE_LT == other.layout_AVERAGE_LT &&
        layout_LONGEST_LT == other.layout_LONGEST_LT &&
        layout_SHORTEST_LT == other.layout_SHORTEST_LT &&
        layout_LTE == other.layout_LTE &&
        layout_AVERAGE_LTE == other.layout_AVERAGE_LTE &&
        layout_LONGEST_LTE == other.layout_LONGEST_LTE &&
        layout_SHORTEST_LTE == other.layout_SHORTEST_LTE &&
        orderNumber_EQUAL == other.orderNumber_EQUAL &&
        orderNumber_AVERAGE_EQUAL == other.orderNumber_AVERAGE_EQUAL &&
        orderNumber_MIN_EQUAL == other.orderNumber_MIN_EQUAL &&
        orderNumber_MAX_EQUAL == other.orderNumber_MAX_EQUAL &&
        orderNumber_SUM_EQUAL == other.orderNumber_SUM_EQUAL &&
        orderNumber_GT == other.orderNumber_GT &&
        orderNumber_AVERAGE_GT == other.orderNumber_AVERAGE_GT &&
        orderNumber_MIN_GT == other.orderNumber_MIN_GT &&
        orderNumber_MAX_GT == other.orderNumber_MAX_GT &&
        orderNumber_SUM_GT == other.orderNumber_SUM_GT &&
        orderNumber_GTE == other.orderNumber_GTE &&
        orderNumber_AVERAGE_GTE == other.orderNumber_AVERAGE_GTE &&
        orderNumber_MIN_GTE == other.orderNumber_MIN_GTE &&
        orderNumber_MAX_GTE == other.orderNumber_MAX_GTE &&
        orderNumber_SUM_GTE == other.orderNumber_SUM_GTE &&
        orderNumber_LT == other.orderNumber_LT &&
        orderNumber_AVERAGE_LT == other.orderNumber_AVERAGE_LT &&
        orderNumber_MIN_LT == other.orderNumber_MIN_LT &&
        orderNumber_MAX_LT == other.orderNumber_MAX_LT &&
        orderNumber_SUM_LT == other.orderNumber_SUM_LT &&
        orderNumber_LTE == other.orderNumber_LTE &&
        orderNumber_AVERAGE_LTE == other.orderNumber_AVERAGE_LTE &&
        orderNumber_MIN_LTE == other.orderNumber_MIN_LTE &&
        orderNumber_MAX_LTE == other.orderNumber_MAX_LTE &&
        orderNumber_SUM_LTE == other.orderNumber_SUM_LTE;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), id_EQUAL.hashCode), title_EQUAL.hashCode), title_AVERAGE_EQUAL.hashCode), title_LONGEST_EQUAL.hashCode), title_SHORTEST_EQUAL.hashCode), title_GT.hashCode), title_AVERAGE_GT.hashCode), title_LONGEST_GT.hashCode), title_SHORTEST_GT.hashCode), title_GTE.hashCode), title_AVERAGE_GTE.hashCode), title_LONGEST_GTE.hashCode), title_SHORTEST_GTE.hashCode), title_LT.hashCode), title_AVERAGE_LT.hashCode), title_LONGEST_LT.hashCode), title_SHORTEST_LT.hashCode), title_LTE.hashCode), title_AVERAGE_LTE.hashCode), title_LONGEST_LTE.hashCode), title_SHORTEST_LTE.hashCode), description_EQUAL.hashCode), description_AVERAGE_EQUAL.hashCode), description_LONGEST_EQUAL.hashCode), description_SHORTEST_EQUAL.hashCode), description_GT.hashCode), description_AVERAGE_GT.hashCode), description_LONGEST_GT.hashCode), description_SHORTEST_GT.hashCode), description_GTE.hashCode), description_AVERAGE_GTE.hashCode), description_LONGEST_GTE.hashCode), description_SHORTEST_GTE.hashCode), description_LT.hashCode), description_AVERAGE_LT.hashCode), description_LONGEST_LT.hashCode), description_SHORTEST_LT.hashCode), description_LTE.hashCode), description_AVERAGE_LTE.hashCode), description_LONGEST_LTE.hashCode), description_SHORTEST_LTE.hashCode), layout_EQUAL.hashCode), layout_AVERAGE_EQUAL.hashCode), layout_LONGEST_EQUAL.hashCode), layout_SHORTEST_EQUAL.hashCode), layout_GT.hashCode), layout_AVERAGE_GT.hashCode), layout_LONGEST_GT.hashCode), layout_SHORTEST_GT.hashCode), layout_GTE.hashCode), layout_AVERAGE_GTE.hashCode), layout_LONGEST_GTE.hashCode), layout_SHORTEST_GTE.hashCode), layout_LT.hashCode), layout_AVERAGE_LT.hashCode), layout_LONGEST_LT.hashCode), layout_SHORTEST_LT.hashCode), layout_LTE.hashCode), layout_AVERAGE_LTE.hashCode), layout_LONGEST_LTE.hashCode), layout_SHORTEST_LTE.hashCode), orderNumber_EQUAL.hashCode), orderNumber_AVERAGE_EQUAL.hashCode), orderNumber_MIN_EQUAL.hashCode), orderNumber_MAX_EQUAL.hashCode), orderNumber_SUM_EQUAL.hashCode), orderNumber_GT.hashCode),
                                                                                orderNumber_AVERAGE_GT.hashCode),
                                                                            orderNumber_MIN_GT.hashCode),
                                                                        orderNumber_MAX_GT.hashCode),
                                                                    orderNumber_SUM_GT.hashCode),
                                                                orderNumber_GTE.hashCode),
                                                            orderNumber_AVERAGE_GTE.hashCode),
                                                        orderNumber_MIN_GTE.hashCode),
                                                    orderNumber_MAX_GTE.hashCode),
                                                orderNumber_SUM_GTE.hashCode),
                                            orderNumber_LT.hashCode),
                                        orderNumber_AVERAGE_LT.hashCode),
                                    orderNumber_MIN_LT.hashCode),
                                orderNumber_MAX_LT.hashCode),
                            orderNumber_SUM_LT.hashCode),
                        orderNumber_LTE.hashCode),
                    orderNumber_AVERAGE_LTE.hashCode),
                orderNumber_MIN_LTE.hashCode),
            orderNumber_MAX_LTE.hashCode),
        orderNumber_SUM_LTE.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageParentPageNodeAggregationWhereInput')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('id_EQUAL', id_EQUAL)
          ..add('title_EQUAL', title_EQUAL)
          ..add('title_AVERAGE_EQUAL', title_AVERAGE_EQUAL)
          ..add('title_LONGEST_EQUAL', title_LONGEST_EQUAL)
          ..add('title_SHORTEST_EQUAL', title_SHORTEST_EQUAL)
          ..add('title_GT', title_GT)
          ..add('title_AVERAGE_GT', title_AVERAGE_GT)
          ..add('title_LONGEST_GT', title_LONGEST_GT)
          ..add('title_SHORTEST_GT', title_SHORTEST_GT)
          ..add('title_GTE', title_GTE)
          ..add('title_AVERAGE_GTE', title_AVERAGE_GTE)
          ..add('title_LONGEST_GTE', title_LONGEST_GTE)
          ..add('title_SHORTEST_GTE', title_SHORTEST_GTE)
          ..add('title_LT', title_LT)
          ..add('title_AVERAGE_LT', title_AVERAGE_LT)
          ..add('title_LONGEST_LT', title_LONGEST_LT)
          ..add('title_SHORTEST_LT', title_SHORTEST_LT)
          ..add('title_LTE', title_LTE)
          ..add('title_AVERAGE_LTE', title_AVERAGE_LTE)
          ..add('title_LONGEST_LTE', title_LONGEST_LTE)
          ..add('title_SHORTEST_LTE', title_SHORTEST_LTE)
          ..add('description_EQUAL', description_EQUAL)
          ..add('description_AVERAGE_EQUAL', description_AVERAGE_EQUAL)
          ..add('description_LONGEST_EQUAL', description_LONGEST_EQUAL)
          ..add('description_SHORTEST_EQUAL', description_SHORTEST_EQUAL)
          ..add('description_GT', description_GT)
          ..add('description_AVERAGE_GT', description_AVERAGE_GT)
          ..add('description_LONGEST_GT', description_LONGEST_GT)
          ..add('description_SHORTEST_GT', description_SHORTEST_GT)
          ..add('description_GTE', description_GTE)
          ..add('description_AVERAGE_GTE', description_AVERAGE_GTE)
          ..add('description_LONGEST_GTE', description_LONGEST_GTE)
          ..add('description_SHORTEST_GTE', description_SHORTEST_GTE)
          ..add('description_LT', description_LT)
          ..add('description_AVERAGE_LT', description_AVERAGE_LT)
          ..add('description_LONGEST_LT', description_LONGEST_LT)
          ..add('description_SHORTEST_LT', description_SHORTEST_LT)
          ..add('description_LTE', description_LTE)
          ..add('description_AVERAGE_LTE', description_AVERAGE_LTE)
          ..add('description_LONGEST_LTE', description_LONGEST_LTE)
          ..add('description_SHORTEST_LTE', description_SHORTEST_LTE)
          ..add('layout_EQUAL', layout_EQUAL)
          ..add('layout_AVERAGE_EQUAL', layout_AVERAGE_EQUAL)
          ..add('layout_LONGEST_EQUAL', layout_LONGEST_EQUAL)
          ..add('layout_SHORTEST_EQUAL', layout_SHORTEST_EQUAL)
          ..add('layout_GT', layout_GT)
          ..add('layout_AVERAGE_GT', layout_AVERAGE_GT)
          ..add('layout_LONGEST_GT', layout_LONGEST_GT)
          ..add('layout_SHORTEST_GT', layout_SHORTEST_GT)
          ..add('layout_GTE', layout_GTE)
          ..add('layout_AVERAGE_GTE', layout_AVERAGE_GTE)
          ..add('layout_LONGEST_GTE', layout_LONGEST_GTE)
          ..add('layout_SHORTEST_GTE', layout_SHORTEST_GTE)
          ..add('layout_LT', layout_LT)
          ..add('layout_AVERAGE_LT', layout_AVERAGE_LT)
          ..add('layout_LONGEST_LT', layout_LONGEST_LT)
          ..add('layout_SHORTEST_LT', layout_SHORTEST_LT)
          ..add('layout_LTE', layout_LTE)
          ..add('layout_AVERAGE_LTE', layout_AVERAGE_LTE)
          ..add('layout_LONGEST_LTE', layout_LONGEST_LTE)
          ..add('layout_SHORTEST_LTE', layout_SHORTEST_LTE)
          ..add('orderNumber_EQUAL', orderNumber_EQUAL)
          ..add('orderNumber_AVERAGE_EQUAL', orderNumber_AVERAGE_EQUAL)
          ..add('orderNumber_MIN_EQUAL', orderNumber_MIN_EQUAL)
          ..add('orderNumber_MAX_EQUAL', orderNumber_MAX_EQUAL)
          ..add('orderNumber_SUM_EQUAL', orderNumber_SUM_EQUAL)
          ..add('orderNumber_GT', orderNumber_GT)
          ..add('orderNumber_AVERAGE_GT', orderNumber_AVERAGE_GT)
          ..add('orderNumber_MIN_GT', orderNumber_MIN_GT)
          ..add('orderNumber_MAX_GT', orderNumber_MAX_GT)
          ..add('orderNumber_SUM_GT', orderNumber_SUM_GT)
          ..add('orderNumber_GTE', orderNumber_GTE)
          ..add('orderNumber_AVERAGE_GTE', orderNumber_AVERAGE_GTE)
          ..add('orderNumber_MIN_GTE', orderNumber_MIN_GTE)
          ..add('orderNumber_MAX_GTE', orderNumber_MAX_GTE)
          ..add('orderNumber_SUM_GTE', orderNumber_SUM_GTE)
          ..add('orderNumber_LT', orderNumber_LT)
          ..add('orderNumber_AVERAGE_LT', orderNumber_AVERAGE_LT)
          ..add('orderNumber_MIN_LT', orderNumber_MIN_LT)
          ..add('orderNumber_MAX_LT', orderNumber_MAX_LT)
          ..add('orderNumber_SUM_LT', orderNumber_SUM_LT)
          ..add('orderNumber_LTE', orderNumber_LTE)
          ..add('orderNumber_AVERAGE_LTE', orderNumber_AVERAGE_LTE)
          ..add('orderNumber_MIN_LTE', orderNumber_MIN_LTE)
          ..add('orderNumber_MAX_LTE', orderNumber_MAX_LTE)
          ..add('orderNumber_SUM_LTE', orderNumber_SUM_LTE))
        .toString();
  }
}

class GPageParentPageNodeAggregationWhereInputBuilder
    implements
        Builder<GPageParentPageNodeAggregationWhereInput,
            GPageParentPageNodeAggregationWhereInputBuilder> {
  _$GPageParentPageNodeAggregationWhereInput? _$v;

  ListBuilder<GPageParentPageNodeAggregationWhereInput>? _AND;
  ListBuilder<GPageParentPageNodeAggregationWhereInput> get AND =>
      _$this._AND ??=
          new ListBuilder<GPageParentPageNodeAggregationWhereInput>();
  set AND(ListBuilder<GPageParentPageNodeAggregationWhereInput>? AND) =>
      _$this._AND = AND;

  ListBuilder<GPageParentPageNodeAggregationWhereInput>? _OR;
  ListBuilder<GPageParentPageNodeAggregationWhereInput> get OR => _$this._OR ??=
      new ListBuilder<GPageParentPageNodeAggregationWhereInput>();
  set OR(ListBuilder<GPageParentPageNodeAggregationWhereInput>? OR) =>
      _$this._OR = OR;

  String? _id_EQUAL;
  String? get id_EQUAL => _$this._id_EQUAL;
  set id_EQUAL(String? id_EQUAL) => _$this._id_EQUAL = id_EQUAL;

  String? _title_EQUAL;
  String? get title_EQUAL => _$this._title_EQUAL;
  set title_EQUAL(String? title_EQUAL) => _$this._title_EQUAL = title_EQUAL;

  double? _title_AVERAGE_EQUAL;
  double? get title_AVERAGE_EQUAL => _$this._title_AVERAGE_EQUAL;
  set title_AVERAGE_EQUAL(double? title_AVERAGE_EQUAL) =>
      _$this._title_AVERAGE_EQUAL = title_AVERAGE_EQUAL;

  int? _title_LONGEST_EQUAL;
  int? get title_LONGEST_EQUAL => _$this._title_LONGEST_EQUAL;
  set title_LONGEST_EQUAL(int? title_LONGEST_EQUAL) =>
      _$this._title_LONGEST_EQUAL = title_LONGEST_EQUAL;

  int? _title_SHORTEST_EQUAL;
  int? get title_SHORTEST_EQUAL => _$this._title_SHORTEST_EQUAL;
  set title_SHORTEST_EQUAL(int? title_SHORTEST_EQUAL) =>
      _$this._title_SHORTEST_EQUAL = title_SHORTEST_EQUAL;

  int? _title_GT;
  int? get title_GT => _$this._title_GT;
  set title_GT(int? title_GT) => _$this._title_GT = title_GT;

  double? _title_AVERAGE_GT;
  double? get title_AVERAGE_GT => _$this._title_AVERAGE_GT;
  set title_AVERAGE_GT(double? title_AVERAGE_GT) =>
      _$this._title_AVERAGE_GT = title_AVERAGE_GT;

  int? _title_LONGEST_GT;
  int? get title_LONGEST_GT => _$this._title_LONGEST_GT;
  set title_LONGEST_GT(int? title_LONGEST_GT) =>
      _$this._title_LONGEST_GT = title_LONGEST_GT;

  int? _title_SHORTEST_GT;
  int? get title_SHORTEST_GT => _$this._title_SHORTEST_GT;
  set title_SHORTEST_GT(int? title_SHORTEST_GT) =>
      _$this._title_SHORTEST_GT = title_SHORTEST_GT;

  int? _title_GTE;
  int? get title_GTE => _$this._title_GTE;
  set title_GTE(int? title_GTE) => _$this._title_GTE = title_GTE;

  double? _title_AVERAGE_GTE;
  double? get title_AVERAGE_GTE => _$this._title_AVERAGE_GTE;
  set title_AVERAGE_GTE(double? title_AVERAGE_GTE) =>
      _$this._title_AVERAGE_GTE = title_AVERAGE_GTE;

  int? _title_LONGEST_GTE;
  int? get title_LONGEST_GTE => _$this._title_LONGEST_GTE;
  set title_LONGEST_GTE(int? title_LONGEST_GTE) =>
      _$this._title_LONGEST_GTE = title_LONGEST_GTE;

  int? _title_SHORTEST_GTE;
  int? get title_SHORTEST_GTE => _$this._title_SHORTEST_GTE;
  set title_SHORTEST_GTE(int? title_SHORTEST_GTE) =>
      _$this._title_SHORTEST_GTE = title_SHORTEST_GTE;

  int? _title_LT;
  int? get title_LT => _$this._title_LT;
  set title_LT(int? title_LT) => _$this._title_LT = title_LT;

  double? _title_AVERAGE_LT;
  double? get title_AVERAGE_LT => _$this._title_AVERAGE_LT;
  set title_AVERAGE_LT(double? title_AVERAGE_LT) =>
      _$this._title_AVERAGE_LT = title_AVERAGE_LT;

  int? _title_LONGEST_LT;
  int? get title_LONGEST_LT => _$this._title_LONGEST_LT;
  set title_LONGEST_LT(int? title_LONGEST_LT) =>
      _$this._title_LONGEST_LT = title_LONGEST_LT;

  int? _title_SHORTEST_LT;
  int? get title_SHORTEST_LT => _$this._title_SHORTEST_LT;
  set title_SHORTEST_LT(int? title_SHORTEST_LT) =>
      _$this._title_SHORTEST_LT = title_SHORTEST_LT;

  int? _title_LTE;
  int? get title_LTE => _$this._title_LTE;
  set title_LTE(int? title_LTE) => _$this._title_LTE = title_LTE;

  double? _title_AVERAGE_LTE;
  double? get title_AVERAGE_LTE => _$this._title_AVERAGE_LTE;
  set title_AVERAGE_LTE(double? title_AVERAGE_LTE) =>
      _$this._title_AVERAGE_LTE = title_AVERAGE_LTE;

  int? _title_LONGEST_LTE;
  int? get title_LONGEST_LTE => _$this._title_LONGEST_LTE;
  set title_LONGEST_LTE(int? title_LONGEST_LTE) =>
      _$this._title_LONGEST_LTE = title_LONGEST_LTE;

  int? _title_SHORTEST_LTE;
  int? get title_SHORTEST_LTE => _$this._title_SHORTEST_LTE;
  set title_SHORTEST_LTE(int? title_SHORTEST_LTE) =>
      _$this._title_SHORTEST_LTE = title_SHORTEST_LTE;

  String? _description_EQUAL;
  String? get description_EQUAL => _$this._description_EQUAL;
  set description_EQUAL(String? description_EQUAL) =>
      _$this._description_EQUAL = description_EQUAL;

  double? _description_AVERAGE_EQUAL;
  double? get description_AVERAGE_EQUAL => _$this._description_AVERAGE_EQUAL;
  set description_AVERAGE_EQUAL(double? description_AVERAGE_EQUAL) =>
      _$this._description_AVERAGE_EQUAL = description_AVERAGE_EQUAL;

  int? _description_LONGEST_EQUAL;
  int? get description_LONGEST_EQUAL => _$this._description_LONGEST_EQUAL;
  set description_LONGEST_EQUAL(int? description_LONGEST_EQUAL) =>
      _$this._description_LONGEST_EQUAL = description_LONGEST_EQUAL;

  int? _description_SHORTEST_EQUAL;
  int? get description_SHORTEST_EQUAL => _$this._description_SHORTEST_EQUAL;
  set description_SHORTEST_EQUAL(int? description_SHORTEST_EQUAL) =>
      _$this._description_SHORTEST_EQUAL = description_SHORTEST_EQUAL;

  int? _description_GT;
  int? get description_GT => _$this._description_GT;
  set description_GT(int? description_GT) =>
      _$this._description_GT = description_GT;

  double? _description_AVERAGE_GT;
  double? get description_AVERAGE_GT => _$this._description_AVERAGE_GT;
  set description_AVERAGE_GT(double? description_AVERAGE_GT) =>
      _$this._description_AVERAGE_GT = description_AVERAGE_GT;

  int? _description_LONGEST_GT;
  int? get description_LONGEST_GT => _$this._description_LONGEST_GT;
  set description_LONGEST_GT(int? description_LONGEST_GT) =>
      _$this._description_LONGEST_GT = description_LONGEST_GT;

  int? _description_SHORTEST_GT;
  int? get description_SHORTEST_GT => _$this._description_SHORTEST_GT;
  set description_SHORTEST_GT(int? description_SHORTEST_GT) =>
      _$this._description_SHORTEST_GT = description_SHORTEST_GT;

  int? _description_GTE;
  int? get description_GTE => _$this._description_GTE;
  set description_GTE(int? description_GTE) =>
      _$this._description_GTE = description_GTE;

  double? _description_AVERAGE_GTE;
  double? get description_AVERAGE_GTE => _$this._description_AVERAGE_GTE;
  set description_AVERAGE_GTE(double? description_AVERAGE_GTE) =>
      _$this._description_AVERAGE_GTE = description_AVERAGE_GTE;

  int? _description_LONGEST_GTE;
  int? get description_LONGEST_GTE => _$this._description_LONGEST_GTE;
  set description_LONGEST_GTE(int? description_LONGEST_GTE) =>
      _$this._description_LONGEST_GTE = description_LONGEST_GTE;

  int? _description_SHORTEST_GTE;
  int? get description_SHORTEST_GTE => _$this._description_SHORTEST_GTE;
  set description_SHORTEST_GTE(int? description_SHORTEST_GTE) =>
      _$this._description_SHORTEST_GTE = description_SHORTEST_GTE;

  int? _description_LT;
  int? get description_LT => _$this._description_LT;
  set description_LT(int? description_LT) =>
      _$this._description_LT = description_LT;

  double? _description_AVERAGE_LT;
  double? get description_AVERAGE_LT => _$this._description_AVERAGE_LT;
  set description_AVERAGE_LT(double? description_AVERAGE_LT) =>
      _$this._description_AVERAGE_LT = description_AVERAGE_LT;

  int? _description_LONGEST_LT;
  int? get description_LONGEST_LT => _$this._description_LONGEST_LT;
  set description_LONGEST_LT(int? description_LONGEST_LT) =>
      _$this._description_LONGEST_LT = description_LONGEST_LT;

  int? _description_SHORTEST_LT;
  int? get description_SHORTEST_LT => _$this._description_SHORTEST_LT;
  set description_SHORTEST_LT(int? description_SHORTEST_LT) =>
      _$this._description_SHORTEST_LT = description_SHORTEST_LT;

  int? _description_LTE;
  int? get description_LTE => _$this._description_LTE;
  set description_LTE(int? description_LTE) =>
      _$this._description_LTE = description_LTE;

  double? _description_AVERAGE_LTE;
  double? get description_AVERAGE_LTE => _$this._description_AVERAGE_LTE;
  set description_AVERAGE_LTE(double? description_AVERAGE_LTE) =>
      _$this._description_AVERAGE_LTE = description_AVERAGE_LTE;

  int? _description_LONGEST_LTE;
  int? get description_LONGEST_LTE => _$this._description_LONGEST_LTE;
  set description_LONGEST_LTE(int? description_LONGEST_LTE) =>
      _$this._description_LONGEST_LTE = description_LONGEST_LTE;

  int? _description_SHORTEST_LTE;
  int? get description_SHORTEST_LTE => _$this._description_SHORTEST_LTE;
  set description_SHORTEST_LTE(int? description_SHORTEST_LTE) =>
      _$this._description_SHORTEST_LTE = description_SHORTEST_LTE;

  String? _layout_EQUAL;
  String? get layout_EQUAL => _$this._layout_EQUAL;
  set layout_EQUAL(String? layout_EQUAL) => _$this._layout_EQUAL = layout_EQUAL;

  double? _layout_AVERAGE_EQUAL;
  double? get layout_AVERAGE_EQUAL => _$this._layout_AVERAGE_EQUAL;
  set layout_AVERAGE_EQUAL(double? layout_AVERAGE_EQUAL) =>
      _$this._layout_AVERAGE_EQUAL = layout_AVERAGE_EQUAL;

  int? _layout_LONGEST_EQUAL;
  int? get layout_LONGEST_EQUAL => _$this._layout_LONGEST_EQUAL;
  set layout_LONGEST_EQUAL(int? layout_LONGEST_EQUAL) =>
      _$this._layout_LONGEST_EQUAL = layout_LONGEST_EQUAL;

  int? _layout_SHORTEST_EQUAL;
  int? get layout_SHORTEST_EQUAL => _$this._layout_SHORTEST_EQUAL;
  set layout_SHORTEST_EQUAL(int? layout_SHORTEST_EQUAL) =>
      _$this._layout_SHORTEST_EQUAL = layout_SHORTEST_EQUAL;

  int? _layout_GT;
  int? get layout_GT => _$this._layout_GT;
  set layout_GT(int? layout_GT) => _$this._layout_GT = layout_GT;

  double? _layout_AVERAGE_GT;
  double? get layout_AVERAGE_GT => _$this._layout_AVERAGE_GT;
  set layout_AVERAGE_GT(double? layout_AVERAGE_GT) =>
      _$this._layout_AVERAGE_GT = layout_AVERAGE_GT;

  int? _layout_LONGEST_GT;
  int? get layout_LONGEST_GT => _$this._layout_LONGEST_GT;
  set layout_LONGEST_GT(int? layout_LONGEST_GT) =>
      _$this._layout_LONGEST_GT = layout_LONGEST_GT;

  int? _layout_SHORTEST_GT;
  int? get layout_SHORTEST_GT => _$this._layout_SHORTEST_GT;
  set layout_SHORTEST_GT(int? layout_SHORTEST_GT) =>
      _$this._layout_SHORTEST_GT = layout_SHORTEST_GT;

  int? _layout_GTE;
  int? get layout_GTE => _$this._layout_GTE;
  set layout_GTE(int? layout_GTE) => _$this._layout_GTE = layout_GTE;

  double? _layout_AVERAGE_GTE;
  double? get layout_AVERAGE_GTE => _$this._layout_AVERAGE_GTE;
  set layout_AVERAGE_GTE(double? layout_AVERAGE_GTE) =>
      _$this._layout_AVERAGE_GTE = layout_AVERAGE_GTE;

  int? _layout_LONGEST_GTE;
  int? get layout_LONGEST_GTE => _$this._layout_LONGEST_GTE;
  set layout_LONGEST_GTE(int? layout_LONGEST_GTE) =>
      _$this._layout_LONGEST_GTE = layout_LONGEST_GTE;

  int? _layout_SHORTEST_GTE;
  int? get layout_SHORTEST_GTE => _$this._layout_SHORTEST_GTE;
  set layout_SHORTEST_GTE(int? layout_SHORTEST_GTE) =>
      _$this._layout_SHORTEST_GTE = layout_SHORTEST_GTE;

  int? _layout_LT;
  int? get layout_LT => _$this._layout_LT;
  set layout_LT(int? layout_LT) => _$this._layout_LT = layout_LT;

  double? _layout_AVERAGE_LT;
  double? get layout_AVERAGE_LT => _$this._layout_AVERAGE_LT;
  set layout_AVERAGE_LT(double? layout_AVERAGE_LT) =>
      _$this._layout_AVERAGE_LT = layout_AVERAGE_LT;

  int? _layout_LONGEST_LT;
  int? get layout_LONGEST_LT => _$this._layout_LONGEST_LT;
  set layout_LONGEST_LT(int? layout_LONGEST_LT) =>
      _$this._layout_LONGEST_LT = layout_LONGEST_LT;

  int? _layout_SHORTEST_LT;
  int? get layout_SHORTEST_LT => _$this._layout_SHORTEST_LT;
  set layout_SHORTEST_LT(int? layout_SHORTEST_LT) =>
      _$this._layout_SHORTEST_LT = layout_SHORTEST_LT;

  int? _layout_LTE;
  int? get layout_LTE => _$this._layout_LTE;
  set layout_LTE(int? layout_LTE) => _$this._layout_LTE = layout_LTE;

  double? _layout_AVERAGE_LTE;
  double? get layout_AVERAGE_LTE => _$this._layout_AVERAGE_LTE;
  set layout_AVERAGE_LTE(double? layout_AVERAGE_LTE) =>
      _$this._layout_AVERAGE_LTE = layout_AVERAGE_LTE;

  int? _layout_LONGEST_LTE;
  int? get layout_LONGEST_LTE => _$this._layout_LONGEST_LTE;
  set layout_LONGEST_LTE(int? layout_LONGEST_LTE) =>
      _$this._layout_LONGEST_LTE = layout_LONGEST_LTE;

  int? _layout_SHORTEST_LTE;
  int? get layout_SHORTEST_LTE => _$this._layout_SHORTEST_LTE;
  set layout_SHORTEST_LTE(int? layout_SHORTEST_LTE) =>
      _$this._layout_SHORTEST_LTE = layout_SHORTEST_LTE;

  int? _orderNumber_EQUAL;
  int? get orderNumber_EQUAL => _$this._orderNumber_EQUAL;
  set orderNumber_EQUAL(int? orderNumber_EQUAL) =>
      _$this._orderNumber_EQUAL = orderNumber_EQUAL;

  double? _orderNumber_AVERAGE_EQUAL;
  double? get orderNumber_AVERAGE_EQUAL => _$this._orderNumber_AVERAGE_EQUAL;
  set orderNumber_AVERAGE_EQUAL(double? orderNumber_AVERAGE_EQUAL) =>
      _$this._orderNumber_AVERAGE_EQUAL = orderNumber_AVERAGE_EQUAL;

  int? _orderNumber_MIN_EQUAL;
  int? get orderNumber_MIN_EQUAL => _$this._orderNumber_MIN_EQUAL;
  set orderNumber_MIN_EQUAL(int? orderNumber_MIN_EQUAL) =>
      _$this._orderNumber_MIN_EQUAL = orderNumber_MIN_EQUAL;

  int? _orderNumber_MAX_EQUAL;
  int? get orderNumber_MAX_EQUAL => _$this._orderNumber_MAX_EQUAL;
  set orderNumber_MAX_EQUAL(int? orderNumber_MAX_EQUAL) =>
      _$this._orderNumber_MAX_EQUAL = orderNumber_MAX_EQUAL;

  int? _orderNumber_SUM_EQUAL;
  int? get orderNumber_SUM_EQUAL => _$this._orderNumber_SUM_EQUAL;
  set orderNumber_SUM_EQUAL(int? orderNumber_SUM_EQUAL) =>
      _$this._orderNumber_SUM_EQUAL = orderNumber_SUM_EQUAL;

  int? _orderNumber_GT;
  int? get orderNumber_GT => _$this._orderNumber_GT;
  set orderNumber_GT(int? orderNumber_GT) =>
      _$this._orderNumber_GT = orderNumber_GT;

  double? _orderNumber_AVERAGE_GT;
  double? get orderNumber_AVERAGE_GT => _$this._orderNumber_AVERAGE_GT;
  set orderNumber_AVERAGE_GT(double? orderNumber_AVERAGE_GT) =>
      _$this._orderNumber_AVERAGE_GT = orderNumber_AVERAGE_GT;

  int? _orderNumber_MIN_GT;
  int? get orderNumber_MIN_GT => _$this._orderNumber_MIN_GT;
  set orderNumber_MIN_GT(int? orderNumber_MIN_GT) =>
      _$this._orderNumber_MIN_GT = orderNumber_MIN_GT;

  int? _orderNumber_MAX_GT;
  int? get orderNumber_MAX_GT => _$this._orderNumber_MAX_GT;
  set orderNumber_MAX_GT(int? orderNumber_MAX_GT) =>
      _$this._orderNumber_MAX_GT = orderNumber_MAX_GT;

  int? _orderNumber_SUM_GT;
  int? get orderNumber_SUM_GT => _$this._orderNumber_SUM_GT;
  set orderNumber_SUM_GT(int? orderNumber_SUM_GT) =>
      _$this._orderNumber_SUM_GT = orderNumber_SUM_GT;

  int? _orderNumber_GTE;
  int? get orderNumber_GTE => _$this._orderNumber_GTE;
  set orderNumber_GTE(int? orderNumber_GTE) =>
      _$this._orderNumber_GTE = orderNumber_GTE;

  double? _orderNumber_AVERAGE_GTE;
  double? get orderNumber_AVERAGE_GTE => _$this._orderNumber_AVERAGE_GTE;
  set orderNumber_AVERAGE_GTE(double? orderNumber_AVERAGE_GTE) =>
      _$this._orderNumber_AVERAGE_GTE = orderNumber_AVERAGE_GTE;

  int? _orderNumber_MIN_GTE;
  int? get orderNumber_MIN_GTE => _$this._orderNumber_MIN_GTE;
  set orderNumber_MIN_GTE(int? orderNumber_MIN_GTE) =>
      _$this._orderNumber_MIN_GTE = orderNumber_MIN_GTE;

  int? _orderNumber_MAX_GTE;
  int? get orderNumber_MAX_GTE => _$this._orderNumber_MAX_GTE;
  set orderNumber_MAX_GTE(int? orderNumber_MAX_GTE) =>
      _$this._orderNumber_MAX_GTE = orderNumber_MAX_GTE;

  int? _orderNumber_SUM_GTE;
  int? get orderNumber_SUM_GTE => _$this._orderNumber_SUM_GTE;
  set orderNumber_SUM_GTE(int? orderNumber_SUM_GTE) =>
      _$this._orderNumber_SUM_GTE = orderNumber_SUM_GTE;

  int? _orderNumber_LT;
  int? get orderNumber_LT => _$this._orderNumber_LT;
  set orderNumber_LT(int? orderNumber_LT) =>
      _$this._orderNumber_LT = orderNumber_LT;

  double? _orderNumber_AVERAGE_LT;
  double? get orderNumber_AVERAGE_LT => _$this._orderNumber_AVERAGE_LT;
  set orderNumber_AVERAGE_LT(double? orderNumber_AVERAGE_LT) =>
      _$this._orderNumber_AVERAGE_LT = orderNumber_AVERAGE_LT;

  int? _orderNumber_MIN_LT;
  int? get orderNumber_MIN_LT => _$this._orderNumber_MIN_LT;
  set orderNumber_MIN_LT(int? orderNumber_MIN_LT) =>
      _$this._orderNumber_MIN_LT = orderNumber_MIN_LT;

  int? _orderNumber_MAX_LT;
  int? get orderNumber_MAX_LT => _$this._orderNumber_MAX_LT;
  set orderNumber_MAX_LT(int? orderNumber_MAX_LT) =>
      _$this._orderNumber_MAX_LT = orderNumber_MAX_LT;

  int? _orderNumber_SUM_LT;
  int? get orderNumber_SUM_LT => _$this._orderNumber_SUM_LT;
  set orderNumber_SUM_LT(int? orderNumber_SUM_LT) =>
      _$this._orderNumber_SUM_LT = orderNumber_SUM_LT;

  int? _orderNumber_LTE;
  int? get orderNumber_LTE => _$this._orderNumber_LTE;
  set orderNumber_LTE(int? orderNumber_LTE) =>
      _$this._orderNumber_LTE = orderNumber_LTE;

  double? _orderNumber_AVERAGE_LTE;
  double? get orderNumber_AVERAGE_LTE => _$this._orderNumber_AVERAGE_LTE;
  set orderNumber_AVERAGE_LTE(double? orderNumber_AVERAGE_LTE) =>
      _$this._orderNumber_AVERAGE_LTE = orderNumber_AVERAGE_LTE;

  int? _orderNumber_MIN_LTE;
  int? get orderNumber_MIN_LTE => _$this._orderNumber_MIN_LTE;
  set orderNumber_MIN_LTE(int? orderNumber_MIN_LTE) =>
      _$this._orderNumber_MIN_LTE = orderNumber_MIN_LTE;

  int? _orderNumber_MAX_LTE;
  int? get orderNumber_MAX_LTE => _$this._orderNumber_MAX_LTE;
  set orderNumber_MAX_LTE(int? orderNumber_MAX_LTE) =>
      _$this._orderNumber_MAX_LTE = orderNumber_MAX_LTE;

  int? _orderNumber_SUM_LTE;
  int? get orderNumber_SUM_LTE => _$this._orderNumber_SUM_LTE;
  set orderNumber_SUM_LTE(int? orderNumber_SUM_LTE) =>
      _$this._orderNumber_SUM_LTE = orderNumber_SUM_LTE;

  GPageParentPageNodeAggregationWhereInputBuilder();

  GPageParentPageNodeAggregationWhereInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _id_EQUAL = $v.id_EQUAL;
      _title_EQUAL = $v.title_EQUAL;
      _title_AVERAGE_EQUAL = $v.title_AVERAGE_EQUAL;
      _title_LONGEST_EQUAL = $v.title_LONGEST_EQUAL;
      _title_SHORTEST_EQUAL = $v.title_SHORTEST_EQUAL;
      _title_GT = $v.title_GT;
      _title_AVERAGE_GT = $v.title_AVERAGE_GT;
      _title_LONGEST_GT = $v.title_LONGEST_GT;
      _title_SHORTEST_GT = $v.title_SHORTEST_GT;
      _title_GTE = $v.title_GTE;
      _title_AVERAGE_GTE = $v.title_AVERAGE_GTE;
      _title_LONGEST_GTE = $v.title_LONGEST_GTE;
      _title_SHORTEST_GTE = $v.title_SHORTEST_GTE;
      _title_LT = $v.title_LT;
      _title_AVERAGE_LT = $v.title_AVERAGE_LT;
      _title_LONGEST_LT = $v.title_LONGEST_LT;
      _title_SHORTEST_LT = $v.title_SHORTEST_LT;
      _title_LTE = $v.title_LTE;
      _title_AVERAGE_LTE = $v.title_AVERAGE_LTE;
      _title_LONGEST_LTE = $v.title_LONGEST_LTE;
      _title_SHORTEST_LTE = $v.title_SHORTEST_LTE;
      _description_EQUAL = $v.description_EQUAL;
      _description_AVERAGE_EQUAL = $v.description_AVERAGE_EQUAL;
      _description_LONGEST_EQUAL = $v.description_LONGEST_EQUAL;
      _description_SHORTEST_EQUAL = $v.description_SHORTEST_EQUAL;
      _description_GT = $v.description_GT;
      _description_AVERAGE_GT = $v.description_AVERAGE_GT;
      _description_LONGEST_GT = $v.description_LONGEST_GT;
      _description_SHORTEST_GT = $v.description_SHORTEST_GT;
      _description_GTE = $v.description_GTE;
      _description_AVERAGE_GTE = $v.description_AVERAGE_GTE;
      _description_LONGEST_GTE = $v.description_LONGEST_GTE;
      _description_SHORTEST_GTE = $v.description_SHORTEST_GTE;
      _description_LT = $v.description_LT;
      _description_AVERAGE_LT = $v.description_AVERAGE_LT;
      _description_LONGEST_LT = $v.description_LONGEST_LT;
      _description_SHORTEST_LT = $v.description_SHORTEST_LT;
      _description_LTE = $v.description_LTE;
      _description_AVERAGE_LTE = $v.description_AVERAGE_LTE;
      _description_LONGEST_LTE = $v.description_LONGEST_LTE;
      _description_SHORTEST_LTE = $v.description_SHORTEST_LTE;
      _layout_EQUAL = $v.layout_EQUAL;
      _layout_AVERAGE_EQUAL = $v.layout_AVERAGE_EQUAL;
      _layout_LONGEST_EQUAL = $v.layout_LONGEST_EQUAL;
      _layout_SHORTEST_EQUAL = $v.layout_SHORTEST_EQUAL;
      _layout_GT = $v.layout_GT;
      _layout_AVERAGE_GT = $v.layout_AVERAGE_GT;
      _layout_LONGEST_GT = $v.layout_LONGEST_GT;
      _layout_SHORTEST_GT = $v.layout_SHORTEST_GT;
      _layout_GTE = $v.layout_GTE;
      _layout_AVERAGE_GTE = $v.layout_AVERAGE_GTE;
      _layout_LONGEST_GTE = $v.layout_LONGEST_GTE;
      _layout_SHORTEST_GTE = $v.layout_SHORTEST_GTE;
      _layout_LT = $v.layout_LT;
      _layout_AVERAGE_LT = $v.layout_AVERAGE_LT;
      _layout_LONGEST_LT = $v.layout_LONGEST_LT;
      _layout_SHORTEST_LT = $v.layout_SHORTEST_LT;
      _layout_LTE = $v.layout_LTE;
      _layout_AVERAGE_LTE = $v.layout_AVERAGE_LTE;
      _layout_LONGEST_LTE = $v.layout_LONGEST_LTE;
      _layout_SHORTEST_LTE = $v.layout_SHORTEST_LTE;
      _orderNumber_EQUAL = $v.orderNumber_EQUAL;
      _orderNumber_AVERAGE_EQUAL = $v.orderNumber_AVERAGE_EQUAL;
      _orderNumber_MIN_EQUAL = $v.orderNumber_MIN_EQUAL;
      _orderNumber_MAX_EQUAL = $v.orderNumber_MAX_EQUAL;
      _orderNumber_SUM_EQUAL = $v.orderNumber_SUM_EQUAL;
      _orderNumber_GT = $v.orderNumber_GT;
      _orderNumber_AVERAGE_GT = $v.orderNumber_AVERAGE_GT;
      _orderNumber_MIN_GT = $v.orderNumber_MIN_GT;
      _orderNumber_MAX_GT = $v.orderNumber_MAX_GT;
      _orderNumber_SUM_GT = $v.orderNumber_SUM_GT;
      _orderNumber_GTE = $v.orderNumber_GTE;
      _orderNumber_AVERAGE_GTE = $v.orderNumber_AVERAGE_GTE;
      _orderNumber_MIN_GTE = $v.orderNumber_MIN_GTE;
      _orderNumber_MAX_GTE = $v.orderNumber_MAX_GTE;
      _orderNumber_SUM_GTE = $v.orderNumber_SUM_GTE;
      _orderNumber_LT = $v.orderNumber_LT;
      _orderNumber_AVERAGE_LT = $v.orderNumber_AVERAGE_LT;
      _orderNumber_MIN_LT = $v.orderNumber_MIN_LT;
      _orderNumber_MAX_LT = $v.orderNumber_MAX_LT;
      _orderNumber_SUM_LT = $v.orderNumber_SUM_LT;
      _orderNumber_LTE = $v.orderNumber_LTE;
      _orderNumber_AVERAGE_LTE = $v.orderNumber_AVERAGE_LTE;
      _orderNumber_MIN_LTE = $v.orderNumber_MIN_LTE;
      _orderNumber_MAX_LTE = $v.orderNumber_MAX_LTE;
      _orderNumber_SUM_LTE = $v.orderNumber_SUM_LTE;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageNodeAggregationWhereInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageNodeAggregationWhereInput;
  }

  @override
  void update(
      void Function(GPageParentPageNodeAggregationWhereInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageNodeAggregationWhereInput build() => _build();

  _$GPageParentPageNodeAggregationWhereInput _build() {
    _$GPageParentPageNodeAggregationWhereInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageNodeAggregationWhereInput._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              id_EQUAL: id_EQUAL,
              title_EQUAL: title_EQUAL,
              title_AVERAGE_EQUAL: title_AVERAGE_EQUAL,
              title_LONGEST_EQUAL: title_LONGEST_EQUAL,
              title_SHORTEST_EQUAL: title_SHORTEST_EQUAL,
              title_GT: title_GT,
              title_AVERAGE_GT: title_AVERAGE_GT,
              title_LONGEST_GT: title_LONGEST_GT,
              title_SHORTEST_GT: title_SHORTEST_GT,
              title_GTE: title_GTE,
              title_AVERAGE_GTE: title_AVERAGE_GTE,
              title_LONGEST_GTE: title_LONGEST_GTE,
              title_SHORTEST_GTE: title_SHORTEST_GTE,
              title_LT: title_LT,
              title_AVERAGE_LT: title_AVERAGE_LT,
              title_LONGEST_LT: title_LONGEST_LT,
              title_SHORTEST_LT: title_SHORTEST_LT,
              title_LTE: title_LTE,
              title_AVERAGE_LTE: title_AVERAGE_LTE,
              title_LONGEST_LTE: title_LONGEST_LTE,
              title_SHORTEST_LTE: title_SHORTEST_LTE,
              description_EQUAL: description_EQUAL,
              description_AVERAGE_EQUAL: description_AVERAGE_EQUAL,
              description_LONGEST_EQUAL: description_LONGEST_EQUAL,
              description_SHORTEST_EQUAL: description_SHORTEST_EQUAL,
              description_GT: description_GT,
              description_AVERAGE_GT: description_AVERAGE_GT,
              description_LONGEST_GT: description_LONGEST_GT,
              description_SHORTEST_GT: description_SHORTEST_GT,
              description_GTE: description_GTE,
              description_AVERAGE_GTE: description_AVERAGE_GTE,
              description_LONGEST_GTE: description_LONGEST_GTE,
              description_SHORTEST_GTE: description_SHORTEST_GTE,
              description_LT: description_LT,
              description_AVERAGE_LT: description_AVERAGE_LT,
              description_LONGEST_LT: description_LONGEST_LT,
              description_SHORTEST_LT: description_SHORTEST_LT,
              description_LTE: description_LTE,
              description_AVERAGE_LTE: description_AVERAGE_LTE,
              description_LONGEST_LTE: description_LONGEST_LTE,
              description_SHORTEST_LTE: description_SHORTEST_LTE,
              layout_EQUAL: layout_EQUAL,
              layout_AVERAGE_EQUAL: layout_AVERAGE_EQUAL,
              layout_LONGEST_EQUAL: layout_LONGEST_EQUAL,
              layout_SHORTEST_EQUAL: layout_SHORTEST_EQUAL,
              layout_GT: layout_GT,
              layout_AVERAGE_GT: layout_AVERAGE_GT,
              layout_LONGEST_GT: layout_LONGEST_GT,
              layout_SHORTEST_GT: layout_SHORTEST_GT,
              layout_GTE: layout_GTE,
              layout_AVERAGE_GTE: layout_AVERAGE_GTE,
              layout_LONGEST_GTE: layout_LONGEST_GTE,
              layout_SHORTEST_GTE: layout_SHORTEST_GTE,
              layout_LT: layout_LT,
              layout_AVERAGE_LT: layout_AVERAGE_LT,
              layout_LONGEST_LT: layout_LONGEST_LT,
              layout_SHORTEST_LT: layout_SHORTEST_LT,
              layout_LTE: layout_LTE,
              layout_AVERAGE_LTE: layout_AVERAGE_LTE,
              layout_LONGEST_LTE: layout_LONGEST_LTE,
              layout_SHORTEST_LTE: layout_SHORTEST_LTE,
              orderNumber_EQUAL: orderNumber_EQUAL,
              orderNumber_AVERAGE_EQUAL: orderNumber_AVERAGE_EQUAL,
              orderNumber_MIN_EQUAL: orderNumber_MIN_EQUAL,
              orderNumber_MAX_EQUAL: orderNumber_MAX_EQUAL,
              orderNumber_SUM_EQUAL: orderNumber_SUM_EQUAL,
              orderNumber_GT: orderNumber_GT,
              orderNumber_AVERAGE_GT: orderNumber_AVERAGE_GT,
              orderNumber_MIN_GT: orderNumber_MIN_GT,
              orderNumber_MAX_GT: orderNumber_MAX_GT,
              orderNumber_SUM_GT: orderNumber_SUM_GT,
              orderNumber_GTE: orderNumber_GTE,
              orderNumber_AVERAGE_GTE: orderNumber_AVERAGE_GTE,
              orderNumber_MIN_GTE: orderNumber_MIN_GTE,
              orderNumber_MAX_GTE: orderNumber_MAX_GTE,
              orderNumber_SUM_GTE: orderNumber_SUM_GTE,
              orderNumber_LT: orderNumber_LT,
              orderNumber_AVERAGE_LT: orderNumber_AVERAGE_LT,
              orderNumber_MIN_LT: orderNumber_MIN_LT,
              orderNumber_MAX_LT: orderNumber_MAX_LT,
              orderNumber_SUM_LT: orderNumber_SUM_LT,
              orderNumber_LTE: orderNumber_LTE,
              orderNumber_AVERAGE_LTE: orderNumber_AVERAGE_LTE,
              orderNumber_MIN_LTE: orderNumber_MIN_LTE,
              orderNumber_MAX_LTE: orderNumber_MAX_LTE,
              orderNumber_SUM_LTE: orderNumber_SUM_LTE);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageNodeAggregationWhereInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageUpdateConnectionInput
    extends GPageParentPageUpdateConnectionInput {
  @override
  final GPageUpdateInput? node;

  factory _$GPageParentPageUpdateConnectionInput(
          [void Function(GPageParentPageUpdateConnectionInputBuilder)?
              updates]) =>
      (new GPageParentPageUpdateConnectionInputBuilder()..update(updates))
          ._build();

  _$GPageParentPageUpdateConnectionInput._({this.node}) : super._();

  @override
  GPageParentPageUpdateConnectionInput rebuild(
          void Function(GPageParentPageUpdateConnectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageUpdateConnectionInputBuilder toBuilder() =>
      new GPageParentPageUpdateConnectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageUpdateConnectionInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageUpdateConnectionInput')
          ..add('node', node))
        .toString();
  }
}

class GPageParentPageUpdateConnectionInputBuilder
    implements
        Builder<GPageParentPageUpdateConnectionInput,
            GPageParentPageUpdateConnectionInputBuilder> {
  _$GPageParentPageUpdateConnectionInput? _$v;

  GPageUpdateInputBuilder? _node;
  GPageUpdateInputBuilder get node =>
      _$this._node ??= new GPageUpdateInputBuilder();
  set node(GPageUpdateInputBuilder? node) => _$this._node = node;

  GPageParentPageUpdateConnectionInputBuilder();

  GPageParentPageUpdateConnectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageUpdateConnectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageUpdateConnectionInput;
  }

  @override
  void update(
      void Function(GPageParentPageUpdateConnectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageUpdateConnectionInput build() => _build();

  _$GPageParentPageUpdateConnectionInput _build() {
    _$GPageParentPageUpdateConnectionInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageUpdateConnectionInput._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageUpdateConnectionInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageParentPageUpdateFieldInput
    extends GPageParentPageUpdateFieldInput {
  @override
  final GPageParentPageConnectionWhere? where;
  @override
  final GPageParentPageUpdateConnectionInput? Gupdate;
  @override
  final GPageParentPageConnectFieldInput? connect;
  @override
  final GPageParentPageDisconnectFieldInput? disconnect;
  @override
  final GPageParentPageCreateFieldInput? create;
  @override
  final GPageParentPageDeleteFieldInput? delete;
  @override
  final GPageParentPageConnectOrCreateFieldInput? connectOrCreate;

  factory _$GPageParentPageUpdateFieldInput(
          [void Function(GPageParentPageUpdateFieldInputBuilder)? updates]) =>
      (new GPageParentPageUpdateFieldInputBuilder()..update(updates))._build();

  _$GPageParentPageUpdateFieldInput._(
      {this.where,
      this.Gupdate,
      this.connect,
      this.disconnect,
      this.create,
      this.delete,
      this.connectOrCreate})
      : super._();

  @override
  GPageParentPageUpdateFieldInput rebuild(
          void Function(GPageParentPageUpdateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageParentPageUpdateFieldInputBuilder toBuilder() =>
      new GPageParentPageUpdateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageParentPageUpdateFieldInput &&
        where == other.where &&
        Gupdate == other.Gupdate &&
        connect == other.connect &&
        disconnect == other.disconnect &&
        create == other.create &&
        delete == other.delete &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, where.hashCode), Gupdate.hashCode),
                        connect.hashCode),
                    disconnect.hashCode),
                create.hashCode),
            delete.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageParentPageUpdateFieldInput')
          ..add('where', where)
          ..add('Gupdate', Gupdate)
          ..add('connect', connect)
          ..add('disconnect', disconnect)
          ..add('create', create)
          ..add('delete', delete)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GPageParentPageUpdateFieldInputBuilder
    implements
        Builder<GPageParentPageUpdateFieldInput,
            GPageParentPageUpdateFieldInputBuilder> {
  _$GPageParentPageUpdateFieldInput? _$v;

  GPageParentPageConnectionWhereBuilder? _where;
  GPageParentPageConnectionWhereBuilder get where =>
      _$this._where ??= new GPageParentPageConnectionWhereBuilder();
  set where(GPageParentPageConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageParentPageUpdateConnectionInputBuilder? _Gupdate;
  GPageParentPageUpdateConnectionInputBuilder get Gupdate =>
      _$this._Gupdate ??= new GPageParentPageUpdateConnectionInputBuilder();
  set Gupdate(GPageParentPageUpdateConnectionInputBuilder? Gupdate) =>
      _$this._Gupdate = Gupdate;

  GPageParentPageConnectFieldInputBuilder? _connect;
  GPageParentPageConnectFieldInputBuilder get connect =>
      _$this._connect ??= new GPageParentPageConnectFieldInputBuilder();
  set connect(GPageParentPageConnectFieldInputBuilder? connect) =>
      _$this._connect = connect;

  GPageParentPageDisconnectFieldInputBuilder? _disconnect;
  GPageParentPageDisconnectFieldInputBuilder get disconnect =>
      _$this._disconnect ??= new GPageParentPageDisconnectFieldInputBuilder();
  set disconnect(GPageParentPageDisconnectFieldInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GPageParentPageCreateFieldInputBuilder? _create;
  GPageParentPageCreateFieldInputBuilder get create =>
      _$this._create ??= new GPageParentPageCreateFieldInputBuilder();
  set create(GPageParentPageCreateFieldInputBuilder? create) =>
      _$this._create = create;

  GPageParentPageDeleteFieldInputBuilder? _delete;
  GPageParentPageDeleteFieldInputBuilder get delete =>
      _$this._delete ??= new GPageParentPageDeleteFieldInputBuilder();
  set delete(GPageParentPageDeleteFieldInputBuilder? delete) =>
      _$this._delete = delete;

  GPageParentPageConnectOrCreateFieldInputBuilder? _connectOrCreate;
  GPageParentPageConnectOrCreateFieldInputBuilder get connectOrCreate =>
      _$this._connectOrCreate ??=
          new GPageParentPageConnectOrCreateFieldInputBuilder();
  set connectOrCreate(
          GPageParentPageConnectOrCreateFieldInputBuilder? connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GPageParentPageUpdateFieldInputBuilder();

  GPageParentPageUpdateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _Gupdate = $v.Gupdate?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _create = $v.create?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageParentPageUpdateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageParentPageUpdateFieldInput;
  }

  @override
  void update(void Function(GPageParentPageUpdateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageParentPageUpdateFieldInput build() => _build();

  _$GPageParentPageUpdateFieldInput _build() {
    _$GPageParentPageUpdateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageParentPageUpdateFieldInput._(
              where: _where?.build(),
              Gupdate: _Gupdate?.build(),
              connect: _connect?.build(),
              disconnect: _disconnect?.build(),
              create: _create?.build(),
              delete: _delete?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'Gupdate';
        _Gupdate?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'delete';
        _delete?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageParentPageUpdateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageRelationInput extends GPageRelationInput {
  @override
  final BuiltList<GPageSubPagesCreateFieldInput>? subPages;
  @override
  final GPageParentPageCreateFieldInput? parentPage;
  @override
  final GPageBelongsToCreateFieldInput? belongsTo;

  factory _$GPageRelationInput(
          [void Function(GPageRelationInputBuilder)? updates]) =>
      (new GPageRelationInputBuilder()..update(updates))._build();

  _$GPageRelationInput._({this.subPages, this.parentPage, this.belongsTo})
      : super._();

  @override
  GPageRelationInput rebuild(
          void Function(GPageRelationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageRelationInputBuilder toBuilder() =>
      new GPageRelationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageRelationInput &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, subPages.hashCode), parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageRelationInput')
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageRelationInputBuilder
    implements Builder<GPageRelationInput, GPageRelationInputBuilder> {
  _$GPageRelationInput? _$v;

  ListBuilder<GPageSubPagesCreateFieldInput>? _subPages;
  ListBuilder<GPageSubPagesCreateFieldInput> get subPages =>
      _$this._subPages ??= new ListBuilder<GPageSubPagesCreateFieldInput>();
  set subPages(ListBuilder<GPageSubPagesCreateFieldInput>? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageCreateFieldInputBuilder? _parentPage;
  GPageParentPageCreateFieldInputBuilder get parentPage =>
      _$this._parentPage ??= new GPageParentPageCreateFieldInputBuilder();
  set parentPage(GPageParentPageCreateFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToCreateFieldInputBuilder? _belongsTo;
  GPageBelongsToCreateFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??= new GPageBelongsToCreateFieldInputBuilder();
  set belongsTo(GPageBelongsToCreateFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageRelationInputBuilder();

  GPageRelationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageRelationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageRelationInput;
  }

  @override
  void update(void Function(GPageRelationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageRelationInput build() => _build();

  _$GPageRelationInput _build() {
    _$GPageRelationInput _$result;
    try {
      _$result = _$v ??
          new _$GPageRelationInput._(
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageRelationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSort extends GPageSort {
  @override
  final GSortDirection? id;
  @override
  final GSortDirection? title;
  @override
  final GSortDirection? description;
  @override
  final GSortDirection? layout;
  @override
  final GSortDirection? orderNumber;

  factory _$GPageSort([void Function(GPageSortBuilder)? updates]) =>
      (new GPageSortBuilder()..update(updates))._build();

  _$GPageSort._(
      {this.id, this.title, this.description, this.layout, this.orderNumber})
      : super._();

  @override
  GPageSort rebuild(void Function(GPageSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSortBuilder toBuilder() => new GPageSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSort &&
        id == other.id &&
        title == other.title &&
        description == other.description &&
        layout == other.layout &&
        orderNumber == other.orderNumber;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, id.hashCode), title.hashCode), description.hashCode),
            layout.hashCode),
        orderNumber.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSort')
          ..add('id', id)
          ..add('title', title)
          ..add('description', description)
          ..add('layout', layout)
          ..add('orderNumber', orderNumber))
        .toString();
  }
}

class GPageSortBuilder implements Builder<GPageSort, GPageSortBuilder> {
  _$GPageSort? _$v;

  GSortDirection? _id;
  GSortDirection? get id => _$this._id;
  set id(GSortDirection? id) => _$this._id = id;

  GSortDirection? _title;
  GSortDirection? get title => _$this._title;
  set title(GSortDirection? title) => _$this._title = title;

  GSortDirection? _description;
  GSortDirection? get description => _$this._description;
  set description(GSortDirection? description) =>
      _$this._description = description;

  GSortDirection? _layout;
  GSortDirection? get layout => _$this._layout;
  set layout(GSortDirection? layout) => _$this._layout = layout;

  GSortDirection? _orderNumber;
  GSortDirection? get orderNumber => _$this._orderNumber;
  set orderNumber(GSortDirection? orderNumber) =>
      _$this._orderNumber = orderNumber;

  GPageSortBuilder();

  GPageSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _title = $v.title;
      _description = $v.description;
      _layout = $v.layout;
      _orderNumber = $v.orderNumber;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSort;
  }

  @override
  void update(void Function(GPageSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSort build() => _build();

  _$GPageSort _build() {
    final _$result = _$v ??
        new _$GPageSort._(
            id: id,
            title: title,
            description: description,
            layout: layout,
            orderNumber: orderNumber);
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesAggregateInput extends GPageSubPagesAggregateInput {
  @override
  final int? count;
  @override
  final int? count_LT;
  @override
  final int? count_LTE;
  @override
  final int? count_GT;
  @override
  final int? count_GTE;
  @override
  final BuiltList<GPageSubPagesAggregateInput>? AND;
  @override
  final BuiltList<GPageSubPagesAggregateInput>? OR;
  @override
  final GPageSubPagesNodeAggregationWhereInput? node;

  factory _$GPageSubPagesAggregateInput(
          [void Function(GPageSubPagesAggregateInputBuilder)? updates]) =>
      (new GPageSubPagesAggregateInputBuilder()..update(updates))._build();

  _$GPageSubPagesAggregateInput._(
      {this.count,
      this.count_LT,
      this.count_LTE,
      this.count_GT,
      this.count_GTE,
      this.AND,
      this.OR,
      this.node})
      : super._();

  @override
  GPageSubPagesAggregateInput rebuild(
          void Function(GPageSubPagesAggregateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesAggregateInputBuilder toBuilder() =>
      new GPageSubPagesAggregateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesAggregateInput &&
        count == other.count &&
        count_LT == other.count_LT &&
        count_LTE == other.count_LTE &&
        count_GT == other.count_GT &&
        count_GTE == other.count_GTE &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, count.hashCode), count_LT.hashCode),
                            count_LTE.hashCode),
                        count_GT.hashCode),
                    count_GTE.hashCode),
                AND.hashCode),
            OR.hashCode),
        node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesAggregateInput')
          ..add('count', count)
          ..add('count_LT', count_LT)
          ..add('count_LTE', count_LTE)
          ..add('count_GT', count_GT)
          ..add('count_GTE', count_GTE)
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node))
        .toString();
  }
}

class GPageSubPagesAggregateInputBuilder
    implements
        Builder<GPageSubPagesAggregateInput,
            GPageSubPagesAggregateInputBuilder> {
  _$GPageSubPagesAggregateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  int? _count_LT;
  int? get count_LT => _$this._count_LT;
  set count_LT(int? count_LT) => _$this._count_LT = count_LT;

  int? _count_LTE;
  int? get count_LTE => _$this._count_LTE;
  set count_LTE(int? count_LTE) => _$this._count_LTE = count_LTE;

  int? _count_GT;
  int? get count_GT => _$this._count_GT;
  set count_GT(int? count_GT) => _$this._count_GT = count_GT;

  int? _count_GTE;
  int? get count_GTE => _$this._count_GTE;
  set count_GTE(int? count_GTE) => _$this._count_GTE = count_GTE;

  ListBuilder<GPageSubPagesAggregateInput>? _AND;
  ListBuilder<GPageSubPagesAggregateInput> get AND =>
      _$this._AND ??= new ListBuilder<GPageSubPagesAggregateInput>();
  set AND(ListBuilder<GPageSubPagesAggregateInput>? AND) => _$this._AND = AND;

  ListBuilder<GPageSubPagesAggregateInput>? _OR;
  ListBuilder<GPageSubPagesAggregateInput> get OR =>
      _$this._OR ??= new ListBuilder<GPageSubPagesAggregateInput>();
  set OR(ListBuilder<GPageSubPagesAggregateInput>? OR) => _$this._OR = OR;

  GPageSubPagesNodeAggregationWhereInputBuilder? _node;
  GPageSubPagesNodeAggregationWhereInputBuilder get node =>
      _$this._node ??= new GPageSubPagesNodeAggregationWhereInputBuilder();
  set node(GPageSubPagesNodeAggregationWhereInputBuilder? node) =>
      _$this._node = node;

  GPageSubPagesAggregateInputBuilder();

  GPageSubPagesAggregateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _count_LT = $v.count_LT;
      _count_LTE = $v.count_LTE;
      _count_GT = $v.count_GT;
      _count_GTE = $v.count_GTE;
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesAggregateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesAggregateInput;
  }

  @override
  void update(void Function(GPageSubPagesAggregateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesAggregateInput build() => _build();

  _$GPageSubPagesAggregateInput _build() {
    _$GPageSubPagesAggregateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesAggregateInput._(
              count: count,
              count_LT: count_LT,
              count_LTE: count_LTE,
              count_GT: count_GT,
              count_GTE: count_GTE,
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesAggregateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesConnectFieldInput extends GPageSubPagesConnectFieldInput {
  @override
  final GPageConnectWhere? where;
  @override
  final BuiltList<GPageConnectInput>? connect;

  factory _$GPageSubPagesConnectFieldInput(
          [void Function(GPageSubPagesConnectFieldInputBuilder)? updates]) =>
      (new GPageSubPagesConnectFieldInputBuilder()..update(updates))._build();

  _$GPageSubPagesConnectFieldInput._({this.where, this.connect}) : super._();

  @override
  GPageSubPagesConnectFieldInput rebuild(
          void Function(GPageSubPagesConnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesConnectFieldInputBuilder toBuilder() =>
      new GPageSubPagesConnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesConnectFieldInput &&
        where == other.where &&
        connect == other.connect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), connect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesConnectFieldInput')
          ..add('where', where)
          ..add('connect', connect))
        .toString();
  }
}

class GPageSubPagesConnectFieldInputBuilder
    implements
        Builder<GPageSubPagesConnectFieldInput,
            GPageSubPagesConnectFieldInputBuilder> {
  _$GPageSubPagesConnectFieldInput? _$v;

  GPageConnectWhereBuilder? _where;
  GPageConnectWhereBuilder get where =>
      _$this._where ??= new GPageConnectWhereBuilder();
  set where(GPageConnectWhereBuilder? where) => _$this._where = where;

  ListBuilder<GPageConnectInput>? _connect;
  ListBuilder<GPageConnectInput> get connect =>
      _$this._connect ??= new ListBuilder<GPageConnectInput>();
  set connect(ListBuilder<GPageConnectInput>? connect) =>
      _$this._connect = connect;

  GPageSubPagesConnectFieldInputBuilder();

  GPageSubPagesConnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesConnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesConnectFieldInput;
  }

  @override
  void update(void Function(GPageSubPagesConnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesConnectFieldInput build() => _build();

  _$GPageSubPagesConnectFieldInput _build() {
    _$GPageSubPagesConnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesConnectFieldInput._(
              where: _where?.build(), connect: _connect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'connect';
        _connect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesConnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesConnectionSort extends GPageSubPagesConnectionSort {
  @override
  final GPageSort? node;

  factory _$GPageSubPagesConnectionSort(
          [void Function(GPageSubPagesConnectionSortBuilder)? updates]) =>
      (new GPageSubPagesConnectionSortBuilder()..update(updates))._build();

  _$GPageSubPagesConnectionSort._({this.node}) : super._();

  @override
  GPageSubPagesConnectionSort rebuild(
          void Function(GPageSubPagesConnectionSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesConnectionSortBuilder toBuilder() =>
      new GPageSubPagesConnectionSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesConnectionSort && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesConnectionSort')
          ..add('node', node))
        .toString();
  }
}

class GPageSubPagesConnectionSortBuilder
    implements
        Builder<GPageSubPagesConnectionSort,
            GPageSubPagesConnectionSortBuilder> {
  _$GPageSubPagesConnectionSort? _$v;

  GPageSortBuilder? _node;
  GPageSortBuilder get node => _$this._node ??= new GPageSortBuilder();
  set node(GPageSortBuilder? node) => _$this._node = node;

  GPageSubPagesConnectionSortBuilder();

  GPageSubPagesConnectionSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesConnectionSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesConnectionSort;
  }

  @override
  void update(void Function(GPageSubPagesConnectionSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesConnectionSort build() => _build();

  _$GPageSubPagesConnectionSort _build() {
    _$GPageSubPagesConnectionSort _$result;
    try {
      _$result =
          _$v ?? new _$GPageSubPagesConnectionSort._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesConnectionSort', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesConnectionWhere extends GPageSubPagesConnectionWhere {
  @override
  final BuiltList<GPageSubPagesConnectionWhere>? AND;
  @override
  final BuiltList<GPageSubPagesConnectionWhere>? OR;
  @override
  final GPageWhere? node;
  @override
  final GPageWhere? node_NOT;

  factory _$GPageSubPagesConnectionWhere(
          [void Function(GPageSubPagesConnectionWhereBuilder)? updates]) =>
      (new GPageSubPagesConnectionWhereBuilder()..update(updates))._build();

  _$GPageSubPagesConnectionWhere._(
      {this.AND, this.OR, this.node, this.node_NOT})
      : super._();

  @override
  GPageSubPagesConnectionWhere rebuild(
          void Function(GPageSubPagesConnectionWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesConnectionWhereBuilder toBuilder() =>
      new GPageSubPagesConnectionWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesConnectionWhere &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node &&
        node_NOT == other.node_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), node.hashCode),
        node_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesConnectionWhere')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node)
          ..add('node_NOT', node_NOT))
        .toString();
  }
}

class GPageSubPagesConnectionWhereBuilder
    implements
        Builder<GPageSubPagesConnectionWhere,
            GPageSubPagesConnectionWhereBuilder> {
  _$GPageSubPagesConnectionWhere? _$v;

  ListBuilder<GPageSubPagesConnectionWhere>? _AND;
  ListBuilder<GPageSubPagesConnectionWhere> get AND =>
      _$this._AND ??= new ListBuilder<GPageSubPagesConnectionWhere>();
  set AND(ListBuilder<GPageSubPagesConnectionWhere>? AND) => _$this._AND = AND;

  ListBuilder<GPageSubPagesConnectionWhere>? _OR;
  ListBuilder<GPageSubPagesConnectionWhere> get OR =>
      _$this._OR ??= new ListBuilder<GPageSubPagesConnectionWhere>();
  set OR(ListBuilder<GPageSubPagesConnectionWhere>? OR) => _$this._OR = OR;

  GPageWhereBuilder? _node;
  GPageWhereBuilder get node => _$this._node ??= new GPageWhereBuilder();
  set node(GPageWhereBuilder? node) => _$this._node = node;

  GPageWhereBuilder? _node_NOT;
  GPageWhereBuilder get node_NOT =>
      _$this._node_NOT ??= new GPageWhereBuilder();
  set node_NOT(GPageWhereBuilder? node_NOT) => _$this._node_NOT = node_NOT;

  GPageSubPagesConnectionWhereBuilder();

  GPageSubPagesConnectionWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _node_NOT = $v.node_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesConnectionWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesConnectionWhere;
  }

  @override
  void update(void Function(GPageSubPagesConnectionWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesConnectionWhere build() => _build();

  _$GPageSubPagesConnectionWhere _build() {
    _$GPageSubPagesConnectionWhere _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesConnectionWhere._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build(),
              node_NOT: _node_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
        _$failedField = 'node_NOT';
        _node_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesConnectionWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesConnectOrCreateFieldInput
    extends GPageSubPagesConnectOrCreateFieldInput {
  @override
  final GPageConnectOrCreateWhere where;
  @override
  final GPageSubPagesConnectOrCreateFieldInputOnCreate onCreate;

  factory _$GPageSubPagesConnectOrCreateFieldInput(
          [void Function(GPageSubPagesConnectOrCreateFieldInputBuilder)?
              updates]) =>
      (new GPageSubPagesConnectOrCreateFieldInputBuilder()..update(updates))
          ._build();

  _$GPageSubPagesConnectOrCreateFieldInput._(
      {required this.where, required this.onCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GPageSubPagesConnectOrCreateFieldInput', 'where');
    BuiltValueNullFieldError.checkNotNull(
        onCreate, r'GPageSubPagesConnectOrCreateFieldInput', 'onCreate');
  }

  @override
  GPageSubPagesConnectOrCreateFieldInput rebuild(
          void Function(GPageSubPagesConnectOrCreateFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesConnectOrCreateFieldInputBuilder toBuilder() =>
      new GPageSubPagesConnectOrCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesConnectOrCreateFieldInput &&
        where == other.where &&
        onCreate == other.onCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), onCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageSubPagesConnectOrCreateFieldInput')
          ..add('where', where)
          ..add('onCreate', onCreate))
        .toString();
  }
}

class GPageSubPagesConnectOrCreateFieldInputBuilder
    implements
        Builder<GPageSubPagesConnectOrCreateFieldInput,
            GPageSubPagesConnectOrCreateFieldInputBuilder> {
  _$GPageSubPagesConnectOrCreateFieldInput? _$v;

  GPageConnectOrCreateWhereBuilder? _where;
  GPageConnectOrCreateWhereBuilder get where =>
      _$this._where ??= new GPageConnectOrCreateWhereBuilder();
  set where(GPageConnectOrCreateWhereBuilder? where) => _$this._where = where;

  GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder? _onCreate;
  GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder get onCreate =>
      _$this._onCreate ??=
          new GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder();
  set onCreate(
          GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder? onCreate) =>
      _$this._onCreate = onCreate;

  GPageSubPagesConnectOrCreateFieldInputBuilder();

  GPageSubPagesConnectOrCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where.toBuilder();
      _onCreate = $v.onCreate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesConnectOrCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesConnectOrCreateFieldInput;
  }

  @override
  void update(
      void Function(GPageSubPagesConnectOrCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesConnectOrCreateFieldInput build() => _build();

  _$GPageSubPagesConnectOrCreateFieldInput _build() {
    _$GPageSubPagesConnectOrCreateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesConnectOrCreateFieldInput._(
              where: where.build(), onCreate: onCreate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        where.build();
        _$failedField = 'onCreate';
        onCreate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesConnectOrCreateFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesConnectOrCreateFieldInputOnCreate
    extends GPageSubPagesConnectOrCreateFieldInputOnCreate {
  @override
  final GPageOnCreateInput node;

  factory _$GPageSubPagesConnectOrCreateFieldInputOnCreate(
          [void Function(GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder)?
              updates]) =>
      (new GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder()
            ..update(updates))
          ._build();

  _$GPageSubPagesConnectOrCreateFieldInputOnCreate._({required this.node})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageSubPagesConnectOrCreateFieldInputOnCreate', 'node');
  }

  @override
  GPageSubPagesConnectOrCreateFieldInputOnCreate rebuild(
          void Function(GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder toBuilder() =>
      new GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesConnectOrCreateFieldInputOnCreate &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageSubPagesConnectOrCreateFieldInputOnCreate')
          ..add('node', node))
        .toString();
  }
}

class GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder
    implements
        Builder<GPageSubPagesConnectOrCreateFieldInputOnCreate,
            GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder> {
  _$GPageSubPagesConnectOrCreateFieldInputOnCreate? _$v;

  GPageOnCreateInputBuilder? _node;
  GPageOnCreateInputBuilder get node =>
      _$this._node ??= new GPageOnCreateInputBuilder();
  set node(GPageOnCreateInputBuilder? node) => _$this._node = node;

  GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder();

  GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesConnectOrCreateFieldInputOnCreate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesConnectOrCreateFieldInputOnCreate;
  }

  @override
  void update(
      void Function(GPageSubPagesConnectOrCreateFieldInputOnCreateBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesConnectOrCreateFieldInputOnCreate build() => _build();

  _$GPageSubPagesConnectOrCreateFieldInputOnCreate _build() {
    _$GPageSubPagesConnectOrCreateFieldInputOnCreate _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesConnectOrCreateFieldInputOnCreate._(
              node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesConnectOrCreateFieldInputOnCreate',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesCreateFieldInput extends GPageSubPagesCreateFieldInput {
  @override
  final GPageCreateInput node;

  factory _$GPageSubPagesCreateFieldInput(
          [void Function(GPageSubPagesCreateFieldInputBuilder)? updates]) =>
      (new GPageSubPagesCreateFieldInputBuilder()..update(updates))._build();

  _$GPageSubPagesCreateFieldInput._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GPageSubPagesCreateFieldInput', 'node');
  }

  @override
  GPageSubPagesCreateFieldInput rebuild(
          void Function(GPageSubPagesCreateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesCreateFieldInputBuilder toBuilder() =>
      new GPageSubPagesCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesCreateFieldInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesCreateFieldInput')
          ..add('node', node))
        .toString();
  }
}

class GPageSubPagesCreateFieldInputBuilder
    implements
        Builder<GPageSubPagesCreateFieldInput,
            GPageSubPagesCreateFieldInputBuilder> {
  _$GPageSubPagesCreateFieldInput? _$v;

  GPageCreateInputBuilder? _node;
  GPageCreateInputBuilder get node =>
      _$this._node ??= new GPageCreateInputBuilder();
  set node(GPageCreateInputBuilder? node) => _$this._node = node;

  GPageSubPagesCreateFieldInputBuilder();

  GPageSubPagesCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesCreateFieldInput;
  }

  @override
  void update(void Function(GPageSubPagesCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesCreateFieldInput build() => _build();

  _$GPageSubPagesCreateFieldInput _build() {
    _$GPageSubPagesCreateFieldInput _$result;
    try {
      _$result =
          _$v ?? new _$GPageSubPagesCreateFieldInput._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesCreateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesDeleteFieldInput extends GPageSubPagesDeleteFieldInput {
  @override
  final GPageSubPagesConnectionWhere? where;
  @override
  final GPageDeleteInput? delete;

  factory _$GPageSubPagesDeleteFieldInput(
          [void Function(GPageSubPagesDeleteFieldInputBuilder)? updates]) =>
      (new GPageSubPagesDeleteFieldInputBuilder()..update(updates))._build();

  _$GPageSubPagesDeleteFieldInput._({this.where, this.delete}) : super._();

  @override
  GPageSubPagesDeleteFieldInput rebuild(
          void Function(GPageSubPagesDeleteFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesDeleteFieldInputBuilder toBuilder() =>
      new GPageSubPagesDeleteFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesDeleteFieldInput &&
        where == other.where &&
        delete == other.delete;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), delete.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesDeleteFieldInput')
          ..add('where', where)
          ..add('delete', delete))
        .toString();
  }
}

class GPageSubPagesDeleteFieldInputBuilder
    implements
        Builder<GPageSubPagesDeleteFieldInput,
            GPageSubPagesDeleteFieldInputBuilder> {
  _$GPageSubPagesDeleteFieldInput? _$v;

  GPageSubPagesConnectionWhereBuilder? _where;
  GPageSubPagesConnectionWhereBuilder get where =>
      _$this._where ??= new GPageSubPagesConnectionWhereBuilder();
  set where(GPageSubPagesConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageDeleteInputBuilder? _delete;
  GPageDeleteInputBuilder get delete =>
      _$this._delete ??= new GPageDeleteInputBuilder();
  set delete(GPageDeleteInputBuilder? delete) => _$this._delete = delete;

  GPageSubPagesDeleteFieldInputBuilder();

  GPageSubPagesDeleteFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesDeleteFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesDeleteFieldInput;
  }

  @override
  void update(void Function(GPageSubPagesDeleteFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesDeleteFieldInput build() => _build();

  _$GPageSubPagesDeleteFieldInput _build() {
    _$GPageSubPagesDeleteFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesDeleteFieldInput._(
              where: _where?.build(), delete: _delete?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'delete';
        _delete?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesDeleteFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesDisconnectFieldInput
    extends GPageSubPagesDisconnectFieldInput {
  @override
  final GPageSubPagesConnectionWhere? where;
  @override
  final GPageDisconnectInput? disconnect;

  factory _$GPageSubPagesDisconnectFieldInput(
          [void Function(GPageSubPagesDisconnectFieldInputBuilder)? updates]) =>
      (new GPageSubPagesDisconnectFieldInputBuilder()..update(updates))
          ._build();

  _$GPageSubPagesDisconnectFieldInput._({this.where, this.disconnect})
      : super._();

  @override
  GPageSubPagesDisconnectFieldInput rebuild(
          void Function(GPageSubPagesDisconnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesDisconnectFieldInputBuilder toBuilder() =>
      new GPageSubPagesDisconnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesDisconnectFieldInput &&
        where == other.where &&
        disconnect == other.disconnect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), disconnect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesDisconnectFieldInput')
          ..add('where', where)
          ..add('disconnect', disconnect))
        .toString();
  }
}

class GPageSubPagesDisconnectFieldInputBuilder
    implements
        Builder<GPageSubPagesDisconnectFieldInput,
            GPageSubPagesDisconnectFieldInputBuilder> {
  _$GPageSubPagesDisconnectFieldInput? _$v;

  GPageSubPagesConnectionWhereBuilder? _where;
  GPageSubPagesConnectionWhereBuilder get where =>
      _$this._where ??= new GPageSubPagesConnectionWhereBuilder();
  set where(GPageSubPagesConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageDisconnectInputBuilder? _disconnect;
  GPageDisconnectInputBuilder get disconnect =>
      _$this._disconnect ??= new GPageDisconnectInputBuilder();
  set disconnect(GPageDisconnectInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GPageSubPagesDisconnectFieldInputBuilder();

  GPageSubPagesDisconnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesDisconnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesDisconnectFieldInput;
  }

  @override
  void update(
      void Function(GPageSubPagesDisconnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesDisconnectFieldInput build() => _build();

  _$GPageSubPagesDisconnectFieldInput _build() {
    _$GPageSubPagesDisconnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesDisconnectFieldInput._(
              where: _where?.build(), disconnect: _disconnect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesDisconnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesFieldInput extends GPageSubPagesFieldInput {
  @override
  final BuiltList<GPageSubPagesCreateFieldInput>? create;
  @override
  final BuiltList<GPageSubPagesConnectFieldInput>? connect;
  @override
  final BuiltList<GPageSubPagesConnectOrCreateFieldInput>? connectOrCreate;

  factory _$GPageSubPagesFieldInput(
          [void Function(GPageSubPagesFieldInputBuilder)? updates]) =>
      (new GPageSubPagesFieldInputBuilder()..update(updates))._build();

  _$GPageSubPagesFieldInput._({this.create, this.connect, this.connectOrCreate})
      : super._();

  @override
  GPageSubPagesFieldInput rebuild(
          void Function(GPageSubPagesFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesFieldInputBuilder toBuilder() =>
      new GPageSubPagesFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesFieldInput &&
        create == other.create &&
        connect == other.connect &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, create.hashCode), connect.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesFieldInput')
          ..add('create', create)
          ..add('connect', connect)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GPageSubPagesFieldInputBuilder
    implements
        Builder<GPageSubPagesFieldInput, GPageSubPagesFieldInputBuilder> {
  _$GPageSubPagesFieldInput? _$v;

  ListBuilder<GPageSubPagesCreateFieldInput>? _create;
  ListBuilder<GPageSubPagesCreateFieldInput> get create =>
      _$this._create ??= new ListBuilder<GPageSubPagesCreateFieldInput>();
  set create(ListBuilder<GPageSubPagesCreateFieldInput>? create) =>
      _$this._create = create;

  ListBuilder<GPageSubPagesConnectFieldInput>? _connect;
  ListBuilder<GPageSubPagesConnectFieldInput> get connect =>
      _$this._connect ??= new ListBuilder<GPageSubPagesConnectFieldInput>();
  set connect(ListBuilder<GPageSubPagesConnectFieldInput>? connect) =>
      _$this._connect = connect;

  ListBuilder<GPageSubPagesConnectOrCreateFieldInput>? _connectOrCreate;
  ListBuilder<GPageSubPagesConnectOrCreateFieldInput> get connectOrCreate =>
      _$this._connectOrCreate ??=
          new ListBuilder<GPageSubPagesConnectOrCreateFieldInput>();
  set connectOrCreate(
          ListBuilder<GPageSubPagesConnectOrCreateFieldInput>?
              connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GPageSubPagesFieldInputBuilder();

  GPageSubPagesFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _create = $v.create?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesFieldInput;
  }

  @override
  void update(void Function(GPageSubPagesFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesFieldInput build() => _build();

  _$GPageSubPagesFieldInput _build() {
    _$GPageSubPagesFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesFieldInput._(
              create: _create?.build(),
              connect: _connect?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesNodeAggregationWhereInput
    extends GPageSubPagesNodeAggregationWhereInput {
  @override
  final BuiltList<GPageSubPagesNodeAggregationWhereInput>? AND;
  @override
  final BuiltList<GPageSubPagesNodeAggregationWhereInput>? OR;
  @override
  final String? id_EQUAL;
  @override
  final String? title_EQUAL;
  @override
  final double? title_AVERAGE_EQUAL;
  @override
  final int? title_LONGEST_EQUAL;
  @override
  final int? title_SHORTEST_EQUAL;
  @override
  final int? title_GT;
  @override
  final double? title_AVERAGE_GT;
  @override
  final int? title_LONGEST_GT;
  @override
  final int? title_SHORTEST_GT;
  @override
  final int? title_GTE;
  @override
  final double? title_AVERAGE_GTE;
  @override
  final int? title_LONGEST_GTE;
  @override
  final int? title_SHORTEST_GTE;
  @override
  final int? title_LT;
  @override
  final double? title_AVERAGE_LT;
  @override
  final int? title_LONGEST_LT;
  @override
  final int? title_SHORTEST_LT;
  @override
  final int? title_LTE;
  @override
  final double? title_AVERAGE_LTE;
  @override
  final int? title_LONGEST_LTE;
  @override
  final int? title_SHORTEST_LTE;
  @override
  final String? description_EQUAL;
  @override
  final double? description_AVERAGE_EQUAL;
  @override
  final int? description_LONGEST_EQUAL;
  @override
  final int? description_SHORTEST_EQUAL;
  @override
  final int? description_GT;
  @override
  final double? description_AVERAGE_GT;
  @override
  final int? description_LONGEST_GT;
  @override
  final int? description_SHORTEST_GT;
  @override
  final int? description_GTE;
  @override
  final double? description_AVERAGE_GTE;
  @override
  final int? description_LONGEST_GTE;
  @override
  final int? description_SHORTEST_GTE;
  @override
  final int? description_LT;
  @override
  final double? description_AVERAGE_LT;
  @override
  final int? description_LONGEST_LT;
  @override
  final int? description_SHORTEST_LT;
  @override
  final int? description_LTE;
  @override
  final double? description_AVERAGE_LTE;
  @override
  final int? description_LONGEST_LTE;
  @override
  final int? description_SHORTEST_LTE;
  @override
  final String? layout_EQUAL;
  @override
  final double? layout_AVERAGE_EQUAL;
  @override
  final int? layout_LONGEST_EQUAL;
  @override
  final int? layout_SHORTEST_EQUAL;
  @override
  final int? layout_GT;
  @override
  final double? layout_AVERAGE_GT;
  @override
  final int? layout_LONGEST_GT;
  @override
  final int? layout_SHORTEST_GT;
  @override
  final int? layout_GTE;
  @override
  final double? layout_AVERAGE_GTE;
  @override
  final int? layout_LONGEST_GTE;
  @override
  final int? layout_SHORTEST_GTE;
  @override
  final int? layout_LT;
  @override
  final double? layout_AVERAGE_LT;
  @override
  final int? layout_LONGEST_LT;
  @override
  final int? layout_SHORTEST_LT;
  @override
  final int? layout_LTE;
  @override
  final double? layout_AVERAGE_LTE;
  @override
  final int? layout_LONGEST_LTE;
  @override
  final int? layout_SHORTEST_LTE;
  @override
  final int? orderNumber_EQUAL;
  @override
  final double? orderNumber_AVERAGE_EQUAL;
  @override
  final int? orderNumber_MIN_EQUAL;
  @override
  final int? orderNumber_MAX_EQUAL;
  @override
  final int? orderNumber_SUM_EQUAL;
  @override
  final int? orderNumber_GT;
  @override
  final double? orderNumber_AVERAGE_GT;
  @override
  final int? orderNumber_MIN_GT;
  @override
  final int? orderNumber_MAX_GT;
  @override
  final int? orderNumber_SUM_GT;
  @override
  final int? orderNumber_GTE;
  @override
  final double? orderNumber_AVERAGE_GTE;
  @override
  final int? orderNumber_MIN_GTE;
  @override
  final int? orderNumber_MAX_GTE;
  @override
  final int? orderNumber_SUM_GTE;
  @override
  final int? orderNumber_LT;
  @override
  final double? orderNumber_AVERAGE_LT;
  @override
  final int? orderNumber_MIN_LT;
  @override
  final int? orderNumber_MAX_LT;
  @override
  final int? orderNumber_SUM_LT;
  @override
  final int? orderNumber_LTE;
  @override
  final double? orderNumber_AVERAGE_LTE;
  @override
  final int? orderNumber_MIN_LTE;
  @override
  final int? orderNumber_MAX_LTE;
  @override
  final int? orderNumber_SUM_LTE;

  factory _$GPageSubPagesNodeAggregationWhereInput(
          [void Function(GPageSubPagesNodeAggregationWhereInputBuilder)?
              updates]) =>
      (new GPageSubPagesNodeAggregationWhereInputBuilder()..update(updates))
          ._build();

  _$GPageSubPagesNodeAggregationWhereInput._(
      {this.AND,
      this.OR,
      this.id_EQUAL,
      this.title_EQUAL,
      this.title_AVERAGE_EQUAL,
      this.title_LONGEST_EQUAL,
      this.title_SHORTEST_EQUAL,
      this.title_GT,
      this.title_AVERAGE_GT,
      this.title_LONGEST_GT,
      this.title_SHORTEST_GT,
      this.title_GTE,
      this.title_AVERAGE_GTE,
      this.title_LONGEST_GTE,
      this.title_SHORTEST_GTE,
      this.title_LT,
      this.title_AVERAGE_LT,
      this.title_LONGEST_LT,
      this.title_SHORTEST_LT,
      this.title_LTE,
      this.title_AVERAGE_LTE,
      this.title_LONGEST_LTE,
      this.title_SHORTEST_LTE,
      this.description_EQUAL,
      this.description_AVERAGE_EQUAL,
      this.description_LONGEST_EQUAL,
      this.description_SHORTEST_EQUAL,
      this.description_GT,
      this.description_AVERAGE_GT,
      this.description_LONGEST_GT,
      this.description_SHORTEST_GT,
      this.description_GTE,
      this.description_AVERAGE_GTE,
      this.description_LONGEST_GTE,
      this.description_SHORTEST_GTE,
      this.description_LT,
      this.description_AVERAGE_LT,
      this.description_LONGEST_LT,
      this.description_SHORTEST_LT,
      this.description_LTE,
      this.description_AVERAGE_LTE,
      this.description_LONGEST_LTE,
      this.description_SHORTEST_LTE,
      this.layout_EQUAL,
      this.layout_AVERAGE_EQUAL,
      this.layout_LONGEST_EQUAL,
      this.layout_SHORTEST_EQUAL,
      this.layout_GT,
      this.layout_AVERAGE_GT,
      this.layout_LONGEST_GT,
      this.layout_SHORTEST_GT,
      this.layout_GTE,
      this.layout_AVERAGE_GTE,
      this.layout_LONGEST_GTE,
      this.layout_SHORTEST_GTE,
      this.layout_LT,
      this.layout_AVERAGE_LT,
      this.layout_LONGEST_LT,
      this.layout_SHORTEST_LT,
      this.layout_LTE,
      this.layout_AVERAGE_LTE,
      this.layout_LONGEST_LTE,
      this.layout_SHORTEST_LTE,
      this.orderNumber_EQUAL,
      this.orderNumber_AVERAGE_EQUAL,
      this.orderNumber_MIN_EQUAL,
      this.orderNumber_MAX_EQUAL,
      this.orderNumber_SUM_EQUAL,
      this.orderNumber_GT,
      this.orderNumber_AVERAGE_GT,
      this.orderNumber_MIN_GT,
      this.orderNumber_MAX_GT,
      this.orderNumber_SUM_GT,
      this.orderNumber_GTE,
      this.orderNumber_AVERAGE_GTE,
      this.orderNumber_MIN_GTE,
      this.orderNumber_MAX_GTE,
      this.orderNumber_SUM_GTE,
      this.orderNumber_LT,
      this.orderNumber_AVERAGE_LT,
      this.orderNumber_MIN_LT,
      this.orderNumber_MAX_LT,
      this.orderNumber_SUM_LT,
      this.orderNumber_LTE,
      this.orderNumber_AVERAGE_LTE,
      this.orderNumber_MIN_LTE,
      this.orderNumber_MAX_LTE,
      this.orderNumber_SUM_LTE})
      : super._();

  @override
  GPageSubPagesNodeAggregationWhereInput rebuild(
          void Function(GPageSubPagesNodeAggregationWhereInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesNodeAggregationWhereInputBuilder toBuilder() =>
      new GPageSubPagesNodeAggregationWhereInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesNodeAggregationWhereInput &&
        AND == other.AND &&
        OR == other.OR &&
        id_EQUAL == other.id_EQUAL &&
        title_EQUAL == other.title_EQUAL &&
        title_AVERAGE_EQUAL == other.title_AVERAGE_EQUAL &&
        title_LONGEST_EQUAL == other.title_LONGEST_EQUAL &&
        title_SHORTEST_EQUAL == other.title_SHORTEST_EQUAL &&
        title_GT == other.title_GT &&
        title_AVERAGE_GT == other.title_AVERAGE_GT &&
        title_LONGEST_GT == other.title_LONGEST_GT &&
        title_SHORTEST_GT == other.title_SHORTEST_GT &&
        title_GTE == other.title_GTE &&
        title_AVERAGE_GTE == other.title_AVERAGE_GTE &&
        title_LONGEST_GTE == other.title_LONGEST_GTE &&
        title_SHORTEST_GTE == other.title_SHORTEST_GTE &&
        title_LT == other.title_LT &&
        title_AVERAGE_LT == other.title_AVERAGE_LT &&
        title_LONGEST_LT == other.title_LONGEST_LT &&
        title_SHORTEST_LT == other.title_SHORTEST_LT &&
        title_LTE == other.title_LTE &&
        title_AVERAGE_LTE == other.title_AVERAGE_LTE &&
        title_LONGEST_LTE == other.title_LONGEST_LTE &&
        title_SHORTEST_LTE == other.title_SHORTEST_LTE &&
        description_EQUAL == other.description_EQUAL &&
        description_AVERAGE_EQUAL == other.description_AVERAGE_EQUAL &&
        description_LONGEST_EQUAL == other.description_LONGEST_EQUAL &&
        description_SHORTEST_EQUAL == other.description_SHORTEST_EQUAL &&
        description_GT == other.description_GT &&
        description_AVERAGE_GT == other.description_AVERAGE_GT &&
        description_LONGEST_GT == other.description_LONGEST_GT &&
        description_SHORTEST_GT == other.description_SHORTEST_GT &&
        description_GTE == other.description_GTE &&
        description_AVERAGE_GTE == other.description_AVERAGE_GTE &&
        description_LONGEST_GTE == other.description_LONGEST_GTE &&
        description_SHORTEST_GTE == other.description_SHORTEST_GTE &&
        description_LT == other.description_LT &&
        description_AVERAGE_LT == other.description_AVERAGE_LT &&
        description_LONGEST_LT == other.description_LONGEST_LT &&
        description_SHORTEST_LT == other.description_SHORTEST_LT &&
        description_LTE == other.description_LTE &&
        description_AVERAGE_LTE == other.description_AVERAGE_LTE &&
        description_LONGEST_LTE == other.description_LONGEST_LTE &&
        description_SHORTEST_LTE == other.description_SHORTEST_LTE &&
        layout_EQUAL == other.layout_EQUAL &&
        layout_AVERAGE_EQUAL == other.layout_AVERAGE_EQUAL &&
        layout_LONGEST_EQUAL == other.layout_LONGEST_EQUAL &&
        layout_SHORTEST_EQUAL == other.layout_SHORTEST_EQUAL &&
        layout_GT == other.layout_GT &&
        layout_AVERAGE_GT == other.layout_AVERAGE_GT &&
        layout_LONGEST_GT == other.layout_LONGEST_GT &&
        layout_SHORTEST_GT == other.layout_SHORTEST_GT &&
        layout_GTE == other.layout_GTE &&
        layout_AVERAGE_GTE == other.layout_AVERAGE_GTE &&
        layout_LONGEST_GTE == other.layout_LONGEST_GTE &&
        layout_SHORTEST_GTE == other.layout_SHORTEST_GTE &&
        layout_LT == other.layout_LT &&
        layout_AVERAGE_LT == other.layout_AVERAGE_LT &&
        layout_LONGEST_LT == other.layout_LONGEST_LT &&
        layout_SHORTEST_LT == other.layout_SHORTEST_LT &&
        layout_LTE == other.layout_LTE &&
        layout_AVERAGE_LTE == other.layout_AVERAGE_LTE &&
        layout_LONGEST_LTE == other.layout_LONGEST_LTE &&
        layout_SHORTEST_LTE == other.layout_SHORTEST_LTE &&
        orderNumber_EQUAL == other.orderNumber_EQUAL &&
        orderNumber_AVERAGE_EQUAL == other.orderNumber_AVERAGE_EQUAL &&
        orderNumber_MIN_EQUAL == other.orderNumber_MIN_EQUAL &&
        orderNumber_MAX_EQUAL == other.orderNumber_MAX_EQUAL &&
        orderNumber_SUM_EQUAL == other.orderNumber_SUM_EQUAL &&
        orderNumber_GT == other.orderNumber_GT &&
        orderNumber_AVERAGE_GT == other.orderNumber_AVERAGE_GT &&
        orderNumber_MIN_GT == other.orderNumber_MIN_GT &&
        orderNumber_MAX_GT == other.orderNumber_MAX_GT &&
        orderNumber_SUM_GT == other.orderNumber_SUM_GT &&
        orderNumber_GTE == other.orderNumber_GTE &&
        orderNumber_AVERAGE_GTE == other.orderNumber_AVERAGE_GTE &&
        orderNumber_MIN_GTE == other.orderNumber_MIN_GTE &&
        orderNumber_MAX_GTE == other.orderNumber_MAX_GTE &&
        orderNumber_SUM_GTE == other.orderNumber_SUM_GTE &&
        orderNumber_LT == other.orderNumber_LT &&
        orderNumber_AVERAGE_LT == other.orderNumber_AVERAGE_LT &&
        orderNumber_MIN_LT == other.orderNumber_MIN_LT &&
        orderNumber_MAX_LT == other.orderNumber_MAX_LT &&
        orderNumber_SUM_LT == other.orderNumber_SUM_LT &&
        orderNumber_LTE == other.orderNumber_LTE &&
        orderNumber_AVERAGE_LTE == other.orderNumber_AVERAGE_LTE &&
        orderNumber_MIN_LTE == other.orderNumber_MIN_LTE &&
        orderNumber_MAX_LTE == other.orderNumber_MAX_LTE &&
        orderNumber_SUM_LTE == other.orderNumber_SUM_LTE;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), id_EQUAL.hashCode), title_EQUAL.hashCode), title_AVERAGE_EQUAL.hashCode), title_LONGEST_EQUAL.hashCode), title_SHORTEST_EQUAL.hashCode), title_GT.hashCode), title_AVERAGE_GT.hashCode), title_LONGEST_GT.hashCode), title_SHORTEST_GT.hashCode), title_GTE.hashCode), title_AVERAGE_GTE.hashCode), title_LONGEST_GTE.hashCode), title_SHORTEST_GTE.hashCode), title_LT.hashCode), title_AVERAGE_LT.hashCode), title_LONGEST_LT.hashCode), title_SHORTEST_LT.hashCode), title_LTE.hashCode), title_AVERAGE_LTE.hashCode), title_LONGEST_LTE.hashCode), title_SHORTEST_LTE.hashCode), description_EQUAL.hashCode), description_AVERAGE_EQUAL.hashCode), description_LONGEST_EQUAL.hashCode), description_SHORTEST_EQUAL.hashCode), description_GT.hashCode), description_AVERAGE_GT.hashCode), description_LONGEST_GT.hashCode), description_SHORTEST_GT.hashCode), description_GTE.hashCode), description_AVERAGE_GTE.hashCode), description_LONGEST_GTE.hashCode), description_SHORTEST_GTE.hashCode), description_LT.hashCode), description_AVERAGE_LT.hashCode), description_LONGEST_LT.hashCode), description_SHORTEST_LT.hashCode), description_LTE.hashCode), description_AVERAGE_LTE.hashCode), description_LONGEST_LTE.hashCode), description_SHORTEST_LTE.hashCode), layout_EQUAL.hashCode), layout_AVERAGE_EQUAL.hashCode), layout_LONGEST_EQUAL.hashCode), layout_SHORTEST_EQUAL.hashCode), layout_GT.hashCode), layout_AVERAGE_GT.hashCode), layout_LONGEST_GT.hashCode), layout_SHORTEST_GT.hashCode), layout_GTE.hashCode), layout_AVERAGE_GTE.hashCode), layout_LONGEST_GTE.hashCode), layout_SHORTEST_GTE.hashCode), layout_LT.hashCode), layout_AVERAGE_LT.hashCode), layout_LONGEST_LT.hashCode), layout_SHORTEST_LT.hashCode), layout_LTE.hashCode), layout_AVERAGE_LTE.hashCode), layout_LONGEST_LTE.hashCode), layout_SHORTEST_LTE.hashCode), orderNumber_EQUAL.hashCode), orderNumber_AVERAGE_EQUAL.hashCode), orderNumber_MIN_EQUAL.hashCode), orderNumber_MAX_EQUAL.hashCode), orderNumber_SUM_EQUAL.hashCode), orderNumber_GT.hashCode),
                                                                                orderNumber_AVERAGE_GT.hashCode),
                                                                            orderNumber_MIN_GT.hashCode),
                                                                        orderNumber_MAX_GT.hashCode),
                                                                    orderNumber_SUM_GT.hashCode),
                                                                orderNumber_GTE.hashCode),
                                                            orderNumber_AVERAGE_GTE.hashCode),
                                                        orderNumber_MIN_GTE.hashCode),
                                                    orderNumber_MAX_GTE.hashCode),
                                                orderNumber_SUM_GTE.hashCode),
                                            orderNumber_LT.hashCode),
                                        orderNumber_AVERAGE_LT.hashCode),
                                    orderNumber_MIN_LT.hashCode),
                                orderNumber_MAX_LT.hashCode),
                            orderNumber_SUM_LT.hashCode),
                        orderNumber_LTE.hashCode),
                    orderNumber_AVERAGE_LTE.hashCode),
                orderNumber_MIN_LTE.hashCode),
            orderNumber_MAX_LTE.hashCode),
        orderNumber_SUM_LTE.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GPageSubPagesNodeAggregationWhereInput')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('id_EQUAL', id_EQUAL)
          ..add('title_EQUAL', title_EQUAL)
          ..add('title_AVERAGE_EQUAL', title_AVERAGE_EQUAL)
          ..add('title_LONGEST_EQUAL', title_LONGEST_EQUAL)
          ..add('title_SHORTEST_EQUAL', title_SHORTEST_EQUAL)
          ..add('title_GT', title_GT)
          ..add('title_AVERAGE_GT', title_AVERAGE_GT)
          ..add('title_LONGEST_GT', title_LONGEST_GT)
          ..add('title_SHORTEST_GT', title_SHORTEST_GT)
          ..add('title_GTE', title_GTE)
          ..add('title_AVERAGE_GTE', title_AVERAGE_GTE)
          ..add('title_LONGEST_GTE', title_LONGEST_GTE)
          ..add('title_SHORTEST_GTE', title_SHORTEST_GTE)
          ..add('title_LT', title_LT)
          ..add('title_AVERAGE_LT', title_AVERAGE_LT)
          ..add('title_LONGEST_LT', title_LONGEST_LT)
          ..add('title_SHORTEST_LT', title_SHORTEST_LT)
          ..add('title_LTE', title_LTE)
          ..add('title_AVERAGE_LTE', title_AVERAGE_LTE)
          ..add('title_LONGEST_LTE', title_LONGEST_LTE)
          ..add('title_SHORTEST_LTE', title_SHORTEST_LTE)
          ..add('description_EQUAL', description_EQUAL)
          ..add('description_AVERAGE_EQUAL', description_AVERAGE_EQUAL)
          ..add('description_LONGEST_EQUAL', description_LONGEST_EQUAL)
          ..add('description_SHORTEST_EQUAL', description_SHORTEST_EQUAL)
          ..add('description_GT', description_GT)
          ..add('description_AVERAGE_GT', description_AVERAGE_GT)
          ..add('description_LONGEST_GT', description_LONGEST_GT)
          ..add('description_SHORTEST_GT', description_SHORTEST_GT)
          ..add('description_GTE', description_GTE)
          ..add('description_AVERAGE_GTE', description_AVERAGE_GTE)
          ..add('description_LONGEST_GTE', description_LONGEST_GTE)
          ..add('description_SHORTEST_GTE', description_SHORTEST_GTE)
          ..add('description_LT', description_LT)
          ..add('description_AVERAGE_LT', description_AVERAGE_LT)
          ..add('description_LONGEST_LT', description_LONGEST_LT)
          ..add('description_SHORTEST_LT', description_SHORTEST_LT)
          ..add('description_LTE', description_LTE)
          ..add('description_AVERAGE_LTE', description_AVERAGE_LTE)
          ..add('description_LONGEST_LTE', description_LONGEST_LTE)
          ..add('description_SHORTEST_LTE', description_SHORTEST_LTE)
          ..add('layout_EQUAL', layout_EQUAL)
          ..add('layout_AVERAGE_EQUAL', layout_AVERAGE_EQUAL)
          ..add('layout_LONGEST_EQUAL', layout_LONGEST_EQUAL)
          ..add('layout_SHORTEST_EQUAL', layout_SHORTEST_EQUAL)
          ..add('layout_GT', layout_GT)
          ..add('layout_AVERAGE_GT', layout_AVERAGE_GT)
          ..add('layout_LONGEST_GT', layout_LONGEST_GT)
          ..add('layout_SHORTEST_GT', layout_SHORTEST_GT)
          ..add('layout_GTE', layout_GTE)
          ..add('layout_AVERAGE_GTE', layout_AVERAGE_GTE)
          ..add('layout_LONGEST_GTE', layout_LONGEST_GTE)
          ..add('layout_SHORTEST_GTE', layout_SHORTEST_GTE)
          ..add('layout_LT', layout_LT)
          ..add('layout_AVERAGE_LT', layout_AVERAGE_LT)
          ..add('layout_LONGEST_LT', layout_LONGEST_LT)
          ..add('layout_SHORTEST_LT', layout_SHORTEST_LT)
          ..add('layout_LTE', layout_LTE)
          ..add('layout_AVERAGE_LTE', layout_AVERAGE_LTE)
          ..add('layout_LONGEST_LTE', layout_LONGEST_LTE)
          ..add('layout_SHORTEST_LTE', layout_SHORTEST_LTE)
          ..add('orderNumber_EQUAL', orderNumber_EQUAL)
          ..add('orderNumber_AVERAGE_EQUAL', orderNumber_AVERAGE_EQUAL)
          ..add('orderNumber_MIN_EQUAL', orderNumber_MIN_EQUAL)
          ..add('orderNumber_MAX_EQUAL', orderNumber_MAX_EQUAL)
          ..add('orderNumber_SUM_EQUAL', orderNumber_SUM_EQUAL)
          ..add('orderNumber_GT', orderNumber_GT)
          ..add('orderNumber_AVERAGE_GT', orderNumber_AVERAGE_GT)
          ..add('orderNumber_MIN_GT', orderNumber_MIN_GT)
          ..add('orderNumber_MAX_GT', orderNumber_MAX_GT)
          ..add('orderNumber_SUM_GT', orderNumber_SUM_GT)
          ..add('orderNumber_GTE', orderNumber_GTE)
          ..add('orderNumber_AVERAGE_GTE', orderNumber_AVERAGE_GTE)
          ..add('orderNumber_MIN_GTE', orderNumber_MIN_GTE)
          ..add('orderNumber_MAX_GTE', orderNumber_MAX_GTE)
          ..add('orderNumber_SUM_GTE', orderNumber_SUM_GTE)
          ..add('orderNumber_LT', orderNumber_LT)
          ..add('orderNumber_AVERAGE_LT', orderNumber_AVERAGE_LT)
          ..add('orderNumber_MIN_LT', orderNumber_MIN_LT)
          ..add('orderNumber_MAX_LT', orderNumber_MAX_LT)
          ..add('orderNumber_SUM_LT', orderNumber_SUM_LT)
          ..add('orderNumber_LTE', orderNumber_LTE)
          ..add('orderNumber_AVERAGE_LTE', orderNumber_AVERAGE_LTE)
          ..add('orderNumber_MIN_LTE', orderNumber_MIN_LTE)
          ..add('orderNumber_MAX_LTE', orderNumber_MAX_LTE)
          ..add('orderNumber_SUM_LTE', orderNumber_SUM_LTE))
        .toString();
  }
}

class GPageSubPagesNodeAggregationWhereInputBuilder
    implements
        Builder<GPageSubPagesNodeAggregationWhereInput,
            GPageSubPagesNodeAggregationWhereInputBuilder> {
  _$GPageSubPagesNodeAggregationWhereInput? _$v;

  ListBuilder<GPageSubPagesNodeAggregationWhereInput>? _AND;
  ListBuilder<GPageSubPagesNodeAggregationWhereInput> get AND =>
      _$this._AND ??= new ListBuilder<GPageSubPagesNodeAggregationWhereInput>();
  set AND(ListBuilder<GPageSubPagesNodeAggregationWhereInput>? AND) =>
      _$this._AND = AND;

  ListBuilder<GPageSubPagesNodeAggregationWhereInput>? _OR;
  ListBuilder<GPageSubPagesNodeAggregationWhereInput> get OR =>
      _$this._OR ??= new ListBuilder<GPageSubPagesNodeAggregationWhereInput>();
  set OR(ListBuilder<GPageSubPagesNodeAggregationWhereInput>? OR) =>
      _$this._OR = OR;

  String? _id_EQUAL;
  String? get id_EQUAL => _$this._id_EQUAL;
  set id_EQUAL(String? id_EQUAL) => _$this._id_EQUAL = id_EQUAL;

  String? _title_EQUAL;
  String? get title_EQUAL => _$this._title_EQUAL;
  set title_EQUAL(String? title_EQUAL) => _$this._title_EQUAL = title_EQUAL;

  double? _title_AVERAGE_EQUAL;
  double? get title_AVERAGE_EQUAL => _$this._title_AVERAGE_EQUAL;
  set title_AVERAGE_EQUAL(double? title_AVERAGE_EQUAL) =>
      _$this._title_AVERAGE_EQUAL = title_AVERAGE_EQUAL;

  int? _title_LONGEST_EQUAL;
  int? get title_LONGEST_EQUAL => _$this._title_LONGEST_EQUAL;
  set title_LONGEST_EQUAL(int? title_LONGEST_EQUAL) =>
      _$this._title_LONGEST_EQUAL = title_LONGEST_EQUAL;

  int? _title_SHORTEST_EQUAL;
  int? get title_SHORTEST_EQUAL => _$this._title_SHORTEST_EQUAL;
  set title_SHORTEST_EQUAL(int? title_SHORTEST_EQUAL) =>
      _$this._title_SHORTEST_EQUAL = title_SHORTEST_EQUAL;

  int? _title_GT;
  int? get title_GT => _$this._title_GT;
  set title_GT(int? title_GT) => _$this._title_GT = title_GT;

  double? _title_AVERAGE_GT;
  double? get title_AVERAGE_GT => _$this._title_AVERAGE_GT;
  set title_AVERAGE_GT(double? title_AVERAGE_GT) =>
      _$this._title_AVERAGE_GT = title_AVERAGE_GT;

  int? _title_LONGEST_GT;
  int? get title_LONGEST_GT => _$this._title_LONGEST_GT;
  set title_LONGEST_GT(int? title_LONGEST_GT) =>
      _$this._title_LONGEST_GT = title_LONGEST_GT;

  int? _title_SHORTEST_GT;
  int? get title_SHORTEST_GT => _$this._title_SHORTEST_GT;
  set title_SHORTEST_GT(int? title_SHORTEST_GT) =>
      _$this._title_SHORTEST_GT = title_SHORTEST_GT;

  int? _title_GTE;
  int? get title_GTE => _$this._title_GTE;
  set title_GTE(int? title_GTE) => _$this._title_GTE = title_GTE;

  double? _title_AVERAGE_GTE;
  double? get title_AVERAGE_GTE => _$this._title_AVERAGE_GTE;
  set title_AVERAGE_GTE(double? title_AVERAGE_GTE) =>
      _$this._title_AVERAGE_GTE = title_AVERAGE_GTE;

  int? _title_LONGEST_GTE;
  int? get title_LONGEST_GTE => _$this._title_LONGEST_GTE;
  set title_LONGEST_GTE(int? title_LONGEST_GTE) =>
      _$this._title_LONGEST_GTE = title_LONGEST_GTE;

  int? _title_SHORTEST_GTE;
  int? get title_SHORTEST_GTE => _$this._title_SHORTEST_GTE;
  set title_SHORTEST_GTE(int? title_SHORTEST_GTE) =>
      _$this._title_SHORTEST_GTE = title_SHORTEST_GTE;

  int? _title_LT;
  int? get title_LT => _$this._title_LT;
  set title_LT(int? title_LT) => _$this._title_LT = title_LT;

  double? _title_AVERAGE_LT;
  double? get title_AVERAGE_LT => _$this._title_AVERAGE_LT;
  set title_AVERAGE_LT(double? title_AVERAGE_LT) =>
      _$this._title_AVERAGE_LT = title_AVERAGE_LT;

  int? _title_LONGEST_LT;
  int? get title_LONGEST_LT => _$this._title_LONGEST_LT;
  set title_LONGEST_LT(int? title_LONGEST_LT) =>
      _$this._title_LONGEST_LT = title_LONGEST_LT;

  int? _title_SHORTEST_LT;
  int? get title_SHORTEST_LT => _$this._title_SHORTEST_LT;
  set title_SHORTEST_LT(int? title_SHORTEST_LT) =>
      _$this._title_SHORTEST_LT = title_SHORTEST_LT;

  int? _title_LTE;
  int? get title_LTE => _$this._title_LTE;
  set title_LTE(int? title_LTE) => _$this._title_LTE = title_LTE;

  double? _title_AVERAGE_LTE;
  double? get title_AVERAGE_LTE => _$this._title_AVERAGE_LTE;
  set title_AVERAGE_LTE(double? title_AVERAGE_LTE) =>
      _$this._title_AVERAGE_LTE = title_AVERAGE_LTE;

  int? _title_LONGEST_LTE;
  int? get title_LONGEST_LTE => _$this._title_LONGEST_LTE;
  set title_LONGEST_LTE(int? title_LONGEST_LTE) =>
      _$this._title_LONGEST_LTE = title_LONGEST_LTE;

  int? _title_SHORTEST_LTE;
  int? get title_SHORTEST_LTE => _$this._title_SHORTEST_LTE;
  set title_SHORTEST_LTE(int? title_SHORTEST_LTE) =>
      _$this._title_SHORTEST_LTE = title_SHORTEST_LTE;

  String? _description_EQUAL;
  String? get description_EQUAL => _$this._description_EQUAL;
  set description_EQUAL(String? description_EQUAL) =>
      _$this._description_EQUAL = description_EQUAL;

  double? _description_AVERAGE_EQUAL;
  double? get description_AVERAGE_EQUAL => _$this._description_AVERAGE_EQUAL;
  set description_AVERAGE_EQUAL(double? description_AVERAGE_EQUAL) =>
      _$this._description_AVERAGE_EQUAL = description_AVERAGE_EQUAL;

  int? _description_LONGEST_EQUAL;
  int? get description_LONGEST_EQUAL => _$this._description_LONGEST_EQUAL;
  set description_LONGEST_EQUAL(int? description_LONGEST_EQUAL) =>
      _$this._description_LONGEST_EQUAL = description_LONGEST_EQUAL;

  int? _description_SHORTEST_EQUAL;
  int? get description_SHORTEST_EQUAL => _$this._description_SHORTEST_EQUAL;
  set description_SHORTEST_EQUAL(int? description_SHORTEST_EQUAL) =>
      _$this._description_SHORTEST_EQUAL = description_SHORTEST_EQUAL;

  int? _description_GT;
  int? get description_GT => _$this._description_GT;
  set description_GT(int? description_GT) =>
      _$this._description_GT = description_GT;

  double? _description_AVERAGE_GT;
  double? get description_AVERAGE_GT => _$this._description_AVERAGE_GT;
  set description_AVERAGE_GT(double? description_AVERAGE_GT) =>
      _$this._description_AVERAGE_GT = description_AVERAGE_GT;

  int? _description_LONGEST_GT;
  int? get description_LONGEST_GT => _$this._description_LONGEST_GT;
  set description_LONGEST_GT(int? description_LONGEST_GT) =>
      _$this._description_LONGEST_GT = description_LONGEST_GT;

  int? _description_SHORTEST_GT;
  int? get description_SHORTEST_GT => _$this._description_SHORTEST_GT;
  set description_SHORTEST_GT(int? description_SHORTEST_GT) =>
      _$this._description_SHORTEST_GT = description_SHORTEST_GT;

  int? _description_GTE;
  int? get description_GTE => _$this._description_GTE;
  set description_GTE(int? description_GTE) =>
      _$this._description_GTE = description_GTE;

  double? _description_AVERAGE_GTE;
  double? get description_AVERAGE_GTE => _$this._description_AVERAGE_GTE;
  set description_AVERAGE_GTE(double? description_AVERAGE_GTE) =>
      _$this._description_AVERAGE_GTE = description_AVERAGE_GTE;

  int? _description_LONGEST_GTE;
  int? get description_LONGEST_GTE => _$this._description_LONGEST_GTE;
  set description_LONGEST_GTE(int? description_LONGEST_GTE) =>
      _$this._description_LONGEST_GTE = description_LONGEST_GTE;

  int? _description_SHORTEST_GTE;
  int? get description_SHORTEST_GTE => _$this._description_SHORTEST_GTE;
  set description_SHORTEST_GTE(int? description_SHORTEST_GTE) =>
      _$this._description_SHORTEST_GTE = description_SHORTEST_GTE;

  int? _description_LT;
  int? get description_LT => _$this._description_LT;
  set description_LT(int? description_LT) =>
      _$this._description_LT = description_LT;

  double? _description_AVERAGE_LT;
  double? get description_AVERAGE_LT => _$this._description_AVERAGE_LT;
  set description_AVERAGE_LT(double? description_AVERAGE_LT) =>
      _$this._description_AVERAGE_LT = description_AVERAGE_LT;

  int? _description_LONGEST_LT;
  int? get description_LONGEST_LT => _$this._description_LONGEST_LT;
  set description_LONGEST_LT(int? description_LONGEST_LT) =>
      _$this._description_LONGEST_LT = description_LONGEST_LT;

  int? _description_SHORTEST_LT;
  int? get description_SHORTEST_LT => _$this._description_SHORTEST_LT;
  set description_SHORTEST_LT(int? description_SHORTEST_LT) =>
      _$this._description_SHORTEST_LT = description_SHORTEST_LT;

  int? _description_LTE;
  int? get description_LTE => _$this._description_LTE;
  set description_LTE(int? description_LTE) =>
      _$this._description_LTE = description_LTE;

  double? _description_AVERAGE_LTE;
  double? get description_AVERAGE_LTE => _$this._description_AVERAGE_LTE;
  set description_AVERAGE_LTE(double? description_AVERAGE_LTE) =>
      _$this._description_AVERAGE_LTE = description_AVERAGE_LTE;

  int? _description_LONGEST_LTE;
  int? get description_LONGEST_LTE => _$this._description_LONGEST_LTE;
  set description_LONGEST_LTE(int? description_LONGEST_LTE) =>
      _$this._description_LONGEST_LTE = description_LONGEST_LTE;

  int? _description_SHORTEST_LTE;
  int? get description_SHORTEST_LTE => _$this._description_SHORTEST_LTE;
  set description_SHORTEST_LTE(int? description_SHORTEST_LTE) =>
      _$this._description_SHORTEST_LTE = description_SHORTEST_LTE;

  String? _layout_EQUAL;
  String? get layout_EQUAL => _$this._layout_EQUAL;
  set layout_EQUAL(String? layout_EQUAL) => _$this._layout_EQUAL = layout_EQUAL;

  double? _layout_AVERAGE_EQUAL;
  double? get layout_AVERAGE_EQUAL => _$this._layout_AVERAGE_EQUAL;
  set layout_AVERAGE_EQUAL(double? layout_AVERAGE_EQUAL) =>
      _$this._layout_AVERAGE_EQUAL = layout_AVERAGE_EQUAL;

  int? _layout_LONGEST_EQUAL;
  int? get layout_LONGEST_EQUAL => _$this._layout_LONGEST_EQUAL;
  set layout_LONGEST_EQUAL(int? layout_LONGEST_EQUAL) =>
      _$this._layout_LONGEST_EQUAL = layout_LONGEST_EQUAL;

  int? _layout_SHORTEST_EQUAL;
  int? get layout_SHORTEST_EQUAL => _$this._layout_SHORTEST_EQUAL;
  set layout_SHORTEST_EQUAL(int? layout_SHORTEST_EQUAL) =>
      _$this._layout_SHORTEST_EQUAL = layout_SHORTEST_EQUAL;

  int? _layout_GT;
  int? get layout_GT => _$this._layout_GT;
  set layout_GT(int? layout_GT) => _$this._layout_GT = layout_GT;

  double? _layout_AVERAGE_GT;
  double? get layout_AVERAGE_GT => _$this._layout_AVERAGE_GT;
  set layout_AVERAGE_GT(double? layout_AVERAGE_GT) =>
      _$this._layout_AVERAGE_GT = layout_AVERAGE_GT;

  int? _layout_LONGEST_GT;
  int? get layout_LONGEST_GT => _$this._layout_LONGEST_GT;
  set layout_LONGEST_GT(int? layout_LONGEST_GT) =>
      _$this._layout_LONGEST_GT = layout_LONGEST_GT;

  int? _layout_SHORTEST_GT;
  int? get layout_SHORTEST_GT => _$this._layout_SHORTEST_GT;
  set layout_SHORTEST_GT(int? layout_SHORTEST_GT) =>
      _$this._layout_SHORTEST_GT = layout_SHORTEST_GT;

  int? _layout_GTE;
  int? get layout_GTE => _$this._layout_GTE;
  set layout_GTE(int? layout_GTE) => _$this._layout_GTE = layout_GTE;

  double? _layout_AVERAGE_GTE;
  double? get layout_AVERAGE_GTE => _$this._layout_AVERAGE_GTE;
  set layout_AVERAGE_GTE(double? layout_AVERAGE_GTE) =>
      _$this._layout_AVERAGE_GTE = layout_AVERAGE_GTE;

  int? _layout_LONGEST_GTE;
  int? get layout_LONGEST_GTE => _$this._layout_LONGEST_GTE;
  set layout_LONGEST_GTE(int? layout_LONGEST_GTE) =>
      _$this._layout_LONGEST_GTE = layout_LONGEST_GTE;

  int? _layout_SHORTEST_GTE;
  int? get layout_SHORTEST_GTE => _$this._layout_SHORTEST_GTE;
  set layout_SHORTEST_GTE(int? layout_SHORTEST_GTE) =>
      _$this._layout_SHORTEST_GTE = layout_SHORTEST_GTE;

  int? _layout_LT;
  int? get layout_LT => _$this._layout_LT;
  set layout_LT(int? layout_LT) => _$this._layout_LT = layout_LT;

  double? _layout_AVERAGE_LT;
  double? get layout_AVERAGE_LT => _$this._layout_AVERAGE_LT;
  set layout_AVERAGE_LT(double? layout_AVERAGE_LT) =>
      _$this._layout_AVERAGE_LT = layout_AVERAGE_LT;

  int? _layout_LONGEST_LT;
  int? get layout_LONGEST_LT => _$this._layout_LONGEST_LT;
  set layout_LONGEST_LT(int? layout_LONGEST_LT) =>
      _$this._layout_LONGEST_LT = layout_LONGEST_LT;

  int? _layout_SHORTEST_LT;
  int? get layout_SHORTEST_LT => _$this._layout_SHORTEST_LT;
  set layout_SHORTEST_LT(int? layout_SHORTEST_LT) =>
      _$this._layout_SHORTEST_LT = layout_SHORTEST_LT;

  int? _layout_LTE;
  int? get layout_LTE => _$this._layout_LTE;
  set layout_LTE(int? layout_LTE) => _$this._layout_LTE = layout_LTE;

  double? _layout_AVERAGE_LTE;
  double? get layout_AVERAGE_LTE => _$this._layout_AVERAGE_LTE;
  set layout_AVERAGE_LTE(double? layout_AVERAGE_LTE) =>
      _$this._layout_AVERAGE_LTE = layout_AVERAGE_LTE;

  int? _layout_LONGEST_LTE;
  int? get layout_LONGEST_LTE => _$this._layout_LONGEST_LTE;
  set layout_LONGEST_LTE(int? layout_LONGEST_LTE) =>
      _$this._layout_LONGEST_LTE = layout_LONGEST_LTE;

  int? _layout_SHORTEST_LTE;
  int? get layout_SHORTEST_LTE => _$this._layout_SHORTEST_LTE;
  set layout_SHORTEST_LTE(int? layout_SHORTEST_LTE) =>
      _$this._layout_SHORTEST_LTE = layout_SHORTEST_LTE;

  int? _orderNumber_EQUAL;
  int? get orderNumber_EQUAL => _$this._orderNumber_EQUAL;
  set orderNumber_EQUAL(int? orderNumber_EQUAL) =>
      _$this._orderNumber_EQUAL = orderNumber_EQUAL;

  double? _orderNumber_AVERAGE_EQUAL;
  double? get orderNumber_AVERAGE_EQUAL => _$this._orderNumber_AVERAGE_EQUAL;
  set orderNumber_AVERAGE_EQUAL(double? orderNumber_AVERAGE_EQUAL) =>
      _$this._orderNumber_AVERAGE_EQUAL = orderNumber_AVERAGE_EQUAL;

  int? _orderNumber_MIN_EQUAL;
  int? get orderNumber_MIN_EQUAL => _$this._orderNumber_MIN_EQUAL;
  set orderNumber_MIN_EQUAL(int? orderNumber_MIN_EQUAL) =>
      _$this._orderNumber_MIN_EQUAL = orderNumber_MIN_EQUAL;

  int? _orderNumber_MAX_EQUAL;
  int? get orderNumber_MAX_EQUAL => _$this._orderNumber_MAX_EQUAL;
  set orderNumber_MAX_EQUAL(int? orderNumber_MAX_EQUAL) =>
      _$this._orderNumber_MAX_EQUAL = orderNumber_MAX_EQUAL;

  int? _orderNumber_SUM_EQUAL;
  int? get orderNumber_SUM_EQUAL => _$this._orderNumber_SUM_EQUAL;
  set orderNumber_SUM_EQUAL(int? orderNumber_SUM_EQUAL) =>
      _$this._orderNumber_SUM_EQUAL = orderNumber_SUM_EQUAL;

  int? _orderNumber_GT;
  int? get orderNumber_GT => _$this._orderNumber_GT;
  set orderNumber_GT(int? orderNumber_GT) =>
      _$this._orderNumber_GT = orderNumber_GT;

  double? _orderNumber_AVERAGE_GT;
  double? get orderNumber_AVERAGE_GT => _$this._orderNumber_AVERAGE_GT;
  set orderNumber_AVERAGE_GT(double? orderNumber_AVERAGE_GT) =>
      _$this._orderNumber_AVERAGE_GT = orderNumber_AVERAGE_GT;

  int? _orderNumber_MIN_GT;
  int? get orderNumber_MIN_GT => _$this._orderNumber_MIN_GT;
  set orderNumber_MIN_GT(int? orderNumber_MIN_GT) =>
      _$this._orderNumber_MIN_GT = orderNumber_MIN_GT;

  int? _orderNumber_MAX_GT;
  int? get orderNumber_MAX_GT => _$this._orderNumber_MAX_GT;
  set orderNumber_MAX_GT(int? orderNumber_MAX_GT) =>
      _$this._orderNumber_MAX_GT = orderNumber_MAX_GT;

  int? _orderNumber_SUM_GT;
  int? get orderNumber_SUM_GT => _$this._orderNumber_SUM_GT;
  set orderNumber_SUM_GT(int? orderNumber_SUM_GT) =>
      _$this._orderNumber_SUM_GT = orderNumber_SUM_GT;

  int? _orderNumber_GTE;
  int? get orderNumber_GTE => _$this._orderNumber_GTE;
  set orderNumber_GTE(int? orderNumber_GTE) =>
      _$this._orderNumber_GTE = orderNumber_GTE;

  double? _orderNumber_AVERAGE_GTE;
  double? get orderNumber_AVERAGE_GTE => _$this._orderNumber_AVERAGE_GTE;
  set orderNumber_AVERAGE_GTE(double? orderNumber_AVERAGE_GTE) =>
      _$this._orderNumber_AVERAGE_GTE = orderNumber_AVERAGE_GTE;

  int? _orderNumber_MIN_GTE;
  int? get orderNumber_MIN_GTE => _$this._orderNumber_MIN_GTE;
  set orderNumber_MIN_GTE(int? orderNumber_MIN_GTE) =>
      _$this._orderNumber_MIN_GTE = orderNumber_MIN_GTE;

  int? _orderNumber_MAX_GTE;
  int? get orderNumber_MAX_GTE => _$this._orderNumber_MAX_GTE;
  set orderNumber_MAX_GTE(int? orderNumber_MAX_GTE) =>
      _$this._orderNumber_MAX_GTE = orderNumber_MAX_GTE;

  int? _orderNumber_SUM_GTE;
  int? get orderNumber_SUM_GTE => _$this._orderNumber_SUM_GTE;
  set orderNumber_SUM_GTE(int? orderNumber_SUM_GTE) =>
      _$this._orderNumber_SUM_GTE = orderNumber_SUM_GTE;

  int? _orderNumber_LT;
  int? get orderNumber_LT => _$this._orderNumber_LT;
  set orderNumber_LT(int? orderNumber_LT) =>
      _$this._orderNumber_LT = orderNumber_LT;

  double? _orderNumber_AVERAGE_LT;
  double? get orderNumber_AVERAGE_LT => _$this._orderNumber_AVERAGE_LT;
  set orderNumber_AVERAGE_LT(double? orderNumber_AVERAGE_LT) =>
      _$this._orderNumber_AVERAGE_LT = orderNumber_AVERAGE_LT;

  int? _orderNumber_MIN_LT;
  int? get orderNumber_MIN_LT => _$this._orderNumber_MIN_LT;
  set orderNumber_MIN_LT(int? orderNumber_MIN_LT) =>
      _$this._orderNumber_MIN_LT = orderNumber_MIN_LT;

  int? _orderNumber_MAX_LT;
  int? get orderNumber_MAX_LT => _$this._orderNumber_MAX_LT;
  set orderNumber_MAX_LT(int? orderNumber_MAX_LT) =>
      _$this._orderNumber_MAX_LT = orderNumber_MAX_LT;

  int? _orderNumber_SUM_LT;
  int? get orderNumber_SUM_LT => _$this._orderNumber_SUM_LT;
  set orderNumber_SUM_LT(int? orderNumber_SUM_LT) =>
      _$this._orderNumber_SUM_LT = orderNumber_SUM_LT;

  int? _orderNumber_LTE;
  int? get orderNumber_LTE => _$this._orderNumber_LTE;
  set orderNumber_LTE(int? orderNumber_LTE) =>
      _$this._orderNumber_LTE = orderNumber_LTE;

  double? _orderNumber_AVERAGE_LTE;
  double? get orderNumber_AVERAGE_LTE => _$this._orderNumber_AVERAGE_LTE;
  set orderNumber_AVERAGE_LTE(double? orderNumber_AVERAGE_LTE) =>
      _$this._orderNumber_AVERAGE_LTE = orderNumber_AVERAGE_LTE;

  int? _orderNumber_MIN_LTE;
  int? get orderNumber_MIN_LTE => _$this._orderNumber_MIN_LTE;
  set orderNumber_MIN_LTE(int? orderNumber_MIN_LTE) =>
      _$this._orderNumber_MIN_LTE = orderNumber_MIN_LTE;

  int? _orderNumber_MAX_LTE;
  int? get orderNumber_MAX_LTE => _$this._orderNumber_MAX_LTE;
  set orderNumber_MAX_LTE(int? orderNumber_MAX_LTE) =>
      _$this._orderNumber_MAX_LTE = orderNumber_MAX_LTE;

  int? _orderNumber_SUM_LTE;
  int? get orderNumber_SUM_LTE => _$this._orderNumber_SUM_LTE;
  set orderNumber_SUM_LTE(int? orderNumber_SUM_LTE) =>
      _$this._orderNumber_SUM_LTE = orderNumber_SUM_LTE;

  GPageSubPagesNodeAggregationWhereInputBuilder();

  GPageSubPagesNodeAggregationWhereInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _id_EQUAL = $v.id_EQUAL;
      _title_EQUAL = $v.title_EQUAL;
      _title_AVERAGE_EQUAL = $v.title_AVERAGE_EQUAL;
      _title_LONGEST_EQUAL = $v.title_LONGEST_EQUAL;
      _title_SHORTEST_EQUAL = $v.title_SHORTEST_EQUAL;
      _title_GT = $v.title_GT;
      _title_AVERAGE_GT = $v.title_AVERAGE_GT;
      _title_LONGEST_GT = $v.title_LONGEST_GT;
      _title_SHORTEST_GT = $v.title_SHORTEST_GT;
      _title_GTE = $v.title_GTE;
      _title_AVERAGE_GTE = $v.title_AVERAGE_GTE;
      _title_LONGEST_GTE = $v.title_LONGEST_GTE;
      _title_SHORTEST_GTE = $v.title_SHORTEST_GTE;
      _title_LT = $v.title_LT;
      _title_AVERAGE_LT = $v.title_AVERAGE_LT;
      _title_LONGEST_LT = $v.title_LONGEST_LT;
      _title_SHORTEST_LT = $v.title_SHORTEST_LT;
      _title_LTE = $v.title_LTE;
      _title_AVERAGE_LTE = $v.title_AVERAGE_LTE;
      _title_LONGEST_LTE = $v.title_LONGEST_LTE;
      _title_SHORTEST_LTE = $v.title_SHORTEST_LTE;
      _description_EQUAL = $v.description_EQUAL;
      _description_AVERAGE_EQUAL = $v.description_AVERAGE_EQUAL;
      _description_LONGEST_EQUAL = $v.description_LONGEST_EQUAL;
      _description_SHORTEST_EQUAL = $v.description_SHORTEST_EQUAL;
      _description_GT = $v.description_GT;
      _description_AVERAGE_GT = $v.description_AVERAGE_GT;
      _description_LONGEST_GT = $v.description_LONGEST_GT;
      _description_SHORTEST_GT = $v.description_SHORTEST_GT;
      _description_GTE = $v.description_GTE;
      _description_AVERAGE_GTE = $v.description_AVERAGE_GTE;
      _description_LONGEST_GTE = $v.description_LONGEST_GTE;
      _description_SHORTEST_GTE = $v.description_SHORTEST_GTE;
      _description_LT = $v.description_LT;
      _description_AVERAGE_LT = $v.description_AVERAGE_LT;
      _description_LONGEST_LT = $v.description_LONGEST_LT;
      _description_SHORTEST_LT = $v.description_SHORTEST_LT;
      _description_LTE = $v.description_LTE;
      _description_AVERAGE_LTE = $v.description_AVERAGE_LTE;
      _description_LONGEST_LTE = $v.description_LONGEST_LTE;
      _description_SHORTEST_LTE = $v.description_SHORTEST_LTE;
      _layout_EQUAL = $v.layout_EQUAL;
      _layout_AVERAGE_EQUAL = $v.layout_AVERAGE_EQUAL;
      _layout_LONGEST_EQUAL = $v.layout_LONGEST_EQUAL;
      _layout_SHORTEST_EQUAL = $v.layout_SHORTEST_EQUAL;
      _layout_GT = $v.layout_GT;
      _layout_AVERAGE_GT = $v.layout_AVERAGE_GT;
      _layout_LONGEST_GT = $v.layout_LONGEST_GT;
      _layout_SHORTEST_GT = $v.layout_SHORTEST_GT;
      _layout_GTE = $v.layout_GTE;
      _layout_AVERAGE_GTE = $v.layout_AVERAGE_GTE;
      _layout_LONGEST_GTE = $v.layout_LONGEST_GTE;
      _layout_SHORTEST_GTE = $v.layout_SHORTEST_GTE;
      _layout_LT = $v.layout_LT;
      _layout_AVERAGE_LT = $v.layout_AVERAGE_LT;
      _layout_LONGEST_LT = $v.layout_LONGEST_LT;
      _layout_SHORTEST_LT = $v.layout_SHORTEST_LT;
      _layout_LTE = $v.layout_LTE;
      _layout_AVERAGE_LTE = $v.layout_AVERAGE_LTE;
      _layout_LONGEST_LTE = $v.layout_LONGEST_LTE;
      _layout_SHORTEST_LTE = $v.layout_SHORTEST_LTE;
      _orderNumber_EQUAL = $v.orderNumber_EQUAL;
      _orderNumber_AVERAGE_EQUAL = $v.orderNumber_AVERAGE_EQUAL;
      _orderNumber_MIN_EQUAL = $v.orderNumber_MIN_EQUAL;
      _orderNumber_MAX_EQUAL = $v.orderNumber_MAX_EQUAL;
      _orderNumber_SUM_EQUAL = $v.orderNumber_SUM_EQUAL;
      _orderNumber_GT = $v.orderNumber_GT;
      _orderNumber_AVERAGE_GT = $v.orderNumber_AVERAGE_GT;
      _orderNumber_MIN_GT = $v.orderNumber_MIN_GT;
      _orderNumber_MAX_GT = $v.orderNumber_MAX_GT;
      _orderNumber_SUM_GT = $v.orderNumber_SUM_GT;
      _orderNumber_GTE = $v.orderNumber_GTE;
      _orderNumber_AVERAGE_GTE = $v.orderNumber_AVERAGE_GTE;
      _orderNumber_MIN_GTE = $v.orderNumber_MIN_GTE;
      _orderNumber_MAX_GTE = $v.orderNumber_MAX_GTE;
      _orderNumber_SUM_GTE = $v.orderNumber_SUM_GTE;
      _orderNumber_LT = $v.orderNumber_LT;
      _orderNumber_AVERAGE_LT = $v.orderNumber_AVERAGE_LT;
      _orderNumber_MIN_LT = $v.orderNumber_MIN_LT;
      _orderNumber_MAX_LT = $v.orderNumber_MAX_LT;
      _orderNumber_SUM_LT = $v.orderNumber_SUM_LT;
      _orderNumber_LTE = $v.orderNumber_LTE;
      _orderNumber_AVERAGE_LTE = $v.orderNumber_AVERAGE_LTE;
      _orderNumber_MIN_LTE = $v.orderNumber_MIN_LTE;
      _orderNumber_MAX_LTE = $v.orderNumber_MAX_LTE;
      _orderNumber_SUM_LTE = $v.orderNumber_SUM_LTE;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesNodeAggregationWhereInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesNodeAggregationWhereInput;
  }

  @override
  void update(
      void Function(GPageSubPagesNodeAggregationWhereInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesNodeAggregationWhereInput build() => _build();

  _$GPageSubPagesNodeAggregationWhereInput _build() {
    _$GPageSubPagesNodeAggregationWhereInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesNodeAggregationWhereInput._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              id_EQUAL: id_EQUAL,
              title_EQUAL: title_EQUAL,
              title_AVERAGE_EQUAL: title_AVERAGE_EQUAL,
              title_LONGEST_EQUAL: title_LONGEST_EQUAL,
              title_SHORTEST_EQUAL: title_SHORTEST_EQUAL,
              title_GT: title_GT,
              title_AVERAGE_GT: title_AVERAGE_GT,
              title_LONGEST_GT: title_LONGEST_GT,
              title_SHORTEST_GT: title_SHORTEST_GT,
              title_GTE: title_GTE,
              title_AVERAGE_GTE: title_AVERAGE_GTE,
              title_LONGEST_GTE: title_LONGEST_GTE,
              title_SHORTEST_GTE: title_SHORTEST_GTE,
              title_LT: title_LT,
              title_AVERAGE_LT: title_AVERAGE_LT,
              title_LONGEST_LT: title_LONGEST_LT,
              title_SHORTEST_LT: title_SHORTEST_LT,
              title_LTE: title_LTE,
              title_AVERAGE_LTE: title_AVERAGE_LTE,
              title_LONGEST_LTE: title_LONGEST_LTE,
              title_SHORTEST_LTE: title_SHORTEST_LTE,
              description_EQUAL: description_EQUAL,
              description_AVERAGE_EQUAL: description_AVERAGE_EQUAL,
              description_LONGEST_EQUAL: description_LONGEST_EQUAL,
              description_SHORTEST_EQUAL: description_SHORTEST_EQUAL,
              description_GT: description_GT,
              description_AVERAGE_GT: description_AVERAGE_GT,
              description_LONGEST_GT: description_LONGEST_GT,
              description_SHORTEST_GT: description_SHORTEST_GT,
              description_GTE: description_GTE,
              description_AVERAGE_GTE: description_AVERAGE_GTE,
              description_LONGEST_GTE: description_LONGEST_GTE,
              description_SHORTEST_GTE: description_SHORTEST_GTE,
              description_LT: description_LT,
              description_AVERAGE_LT: description_AVERAGE_LT,
              description_LONGEST_LT: description_LONGEST_LT,
              description_SHORTEST_LT: description_SHORTEST_LT,
              description_LTE: description_LTE,
              description_AVERAGE_LTE: description_AVERAGE_LTE,
              description_LONGEST_LTE: description_LONGEST_LTE,
              description_SHORTEST_LTE: description_SHORTEST_LTE,
              layout_EQUAL: layout_EQUAL,
              layout_AVERAGE_EQUAL: layout_AVERAGE_EQUAL,
              layout_LONGEST_EQUAL: layout_LONGEST_EQUAL,
              layout_SHORTEST_EQUAL: layout_SHORTEST_EQUAL,
              layout_GT: layout_GT,
              layout_AVERAGE_GT: layout_AVERAGE_GT,
              layout_LONGEST_GT: layout_LONGEST_GT,
              layout_SHORTEST_GT: layout_SHORTEST_GT,
              layout_GTE: layout_GTE,
              layout_AVERAGE_GTE: layout_AVERAGE_GTE,
              layout_LONGEST_GTE: layout_LONGEST_GTE,
              layout_SHORTEST_GTE: layout_SHORTEST_GTE,
              layout_LT: layout_LT,
              layout_AVERAGE_LT: layout_AVERAGE_LT,
              layout_LONGEST_LT: layout_LONGEST_LT,
              layout_SHORTEST_LT: layout_SHORTEST_LT,
              layout_LTE: layout_LTE,
              layout_AVERAGE_LTE: layout_AVERAGE_LTE,
              layout_LONGEST_LTE: layout_LONGEST_LTE,
              layout_SHORTEST_LTE: layout_SHORTEST_LTE,
              orderNumber_EQUAL: orderNumber_EQUAL,
              orderNumber_AVERAGE_EQUAL: orderNumber_AVERAGE_EQUAL,
              orderNumber_MIN_EQUAL: orderNumber_MIN_EQUAL,
              orderNumber_MAX_EQUAL: orderNumber_MAX_EQUAL,
              orderNumber_SUM_EQUAL: orderNumber_SUM_EQUAL,
              orderNumber_GT: orderNumber_GT,
              orderNumber_AVERAGE_GT: orderNumber_AVERAGE_GT,
              orderNumber_MIN_GT: orderNumber_MIN_GT,
              orderNumber_MAX_GT: orderNumber_MAX_GT,
              orderNumber_SUM_GT: orderNumber_SUM_GT,
              orderNumber_GTE: orderNumber_GTE,
              orderNumber_AVERAGE_GTE: orderNumber_AVERAGE_GTE,
              orderNumber_MIN_GTE: orderNumber_MIN_GTE,
              orderNumber_MAX_GTE: orderNumber_MAX_GTE,
              orderNumber_SUM_GTE: orderNumber_SUM_GTE,
              orderNumber_LT: orderNumber_LT,
              orderNumber_AVERAGE_LT: orderNumber_AVERAGE_LT,
              orderNumber_MIN_LT: orderNumber_MIN_LT,
              orderNumber_MAX_LT: orderNumber_MAX_LT,
              orderNumber_SUM_LT: orderNumber_SUM_LT,
              orderNumber_LTE: orderNumber_LTE,
              orderNumber_AVERAGE_LTE: orderNumber_AVERAGE_LTE,
              orderNumber_MIN_LTE: orderNumber_MIN_LTE,
              orderNumber_MAX_LTE: orderNumber_MAX_LTE,
              orderNumber_SUM_LTE: orderNumber_SUM_LTE);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesNodeAggregationWhereInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesUpdateConnectionInput
    extends GPageSubPagesUpdateConnectionInput {
  @override
  final GPageUpdateInput? node;

  factory _$GPageSubPagesUpdateConnectionInput(
          [void Function(GPageSubPagesUpdateConnectionInputBuilder)?
              updates]) =>
      (new GPageSubPagesUpdateConnectionInputBuilder()..update(updates))
          ._build();

  _$GPageSubPagesUpdateConnectionInput._({this.node}) : super._();

  @override
  GPageSubPagesUpdateConnectionInput rebuild(
          void Function(GPageSubPagesUpdateConnectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesUpdateConnectionInputBuilder toBuilder() =>
      new GPageSubPagesUpdateConnectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesUpdateConnectionInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesUpdateConnectionInput')
          ..add('node', node))
        .toString();
  }
}

class GPageSubPagesUpdateConnectionInputBuilder
    implements
        Builder<GPageSubPagesUpdateConnectionInput,
            GPageSubPagesUpdateConnectionInputBuilder> {
  _$GPageSubPagesUpdateConnectionInput? _$v;

  GPageUpdateInputBuilder? _node;
  GPageUpdateInputBuilder get node =>
      _$this._node ??= new GPageUpdateInputBuilder();
  set node(GPageUpdateInputBuilder? node) => _$this._node = node;

  GPageSubPagesUpdateConnectionInputBuilder();

  GPageSubPagesUpdateConnectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesUpdateConnectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesUpdateConnectionInput;
  }

  @override
  void update(
      void Function(GPageSubPagesUpdateConnectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesUpdateConnectionInput build() => _build();

  _$GPageSubPagesUpdateConnectionInput _build() {
    _$GPageSubPagesUpdateConnectionInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesUpdateConnectionInput._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesUpdateConnectionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSubPagesUpdateFieldInput extends GPageSubPagesUpdateFieldInput {
  @override
  final GPageSubPagesConnectionWhere? where;
  @override
  final GPageSubPagesUpdateConnectionInput? Gupdate;
  @override
  final BuiltList<GPageSubPagesConnectFieldInput>? connect;
  @override
  final BuiltList<GPageSubPagesDisconnectFieldInput>? disconnect;
  @override
  final BuiltList<GPageSubPagesCreateFieldInput>? create;
  @override
  final BuiltList<GPageSubPagesDeleteFieldInput>? delete;
  @override
  final BuiltList<GPageSubPagesConnectOrCreateFieldInput>? connectOrCreate;

  factory _$GPageSubPagesUpdateFieldInput(
          [void Function(GPageSubPagesUpdateFieldInputBuilder)? updates]) =>
      (new GPageSubPagesUpdateFieldInputBuilder()..update(updates))._build();

  _$GPageSubPagesUpdateFieldInput._(
      {this.where,
      this.Gupdate,
      this.connect,
      this.disconnect,
      this.create,
      this.delete,
      this.connectOrCreate})
      : super._();

  @override
  GPageSubPagesUpdateFieldInput rebuild(
          void Function(GPageSubPagesUpdateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSubPagesUpdateFieldInputBuilder toBuilder() =>
      new GPageSubPagesUpdateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSubPagesUpdateFieldInput &&
        where == other.where &&
        Gupdate == other.Gupdate &&
        connect == other.connect &&
        disconnect == other.disconnect &&
        create == other.create &&
        delete == other.delete &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, where.hashCode), Gupdate.hashCode),
                        connect.hashCode),
                    disconnect.hashCode),
                create.hashCode),
            delete.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSubPagesUpdateFieldInput')
          ..add('where', where)
          ..add('Gupdate', Gupdate)
          ..add('connect', connect)
          ..add('disconnect', disconnect)
          ..add('create', create)
          ..add('delete', delete)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GPageSubPagesUpdateFieldInputBuilder
    implements
        Builder<GPageSubPagesUpdateFieldInput,
            GPageSubPagesUpdateFieldInputBuilder> {
  _$GPageSubPagesUpdateFieldInput? _$v;

  GPageSubPagesConnectionWhereBuilder? _where;
  GPageSubPagesConnectionWhereBuilder get where =>
      _$this._where ??= new GPageSubPagesConnectionWhereBuilder();
  set where(GPageSubPagesConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageSubPagesUpdateConnectionInputBuilder? _Gupdate;
  GPageSubPagesUpdateConnectionInputBuilder get Gupdate =>
      _$this._Gupdate ??= new GPageSubPagesUpdateConnectionInputBuilder();
  set Gupdate(GPageSubPagesUpdateConnectionInputBuilder? Gupdate) =>
      _$this._Gupdate = Gupdate;

  ListBuilder<GPageSubPagesConnectFieldInput>? _connect;
  ListBuilder<GPageSubPagesConnectFieldInput> get connect =>
      _$this._connect ??= new ListBuilder<GPageSubPagesConnectFieldInput>();
  set connect(ListBuilder<GPageSubPagesConnectFieldInput>? connect) =>
      _$this._connect = connect;

  ListBuilder<GPageSubPagesDisconnectFieldInput>? _disconnect;
  ListBuilder<GPageSubPagesDisconnectFieldInput> get disconnect =>
      _$this._disconnect ??=
          new ListBuilder<GPageSubPagesDisconnectFieldInput>();
  set disconnect(ListBuilder<GPageSubPagesDisconnectFieldInput>? disconnect) =>
      _$this._disconnect = disconnect;

  ListBuilder<GPageSubPagesCreateFieldInput>? _create;
  ListBuilder<GPageSubPagesCreateFieldInput> get create =>
      _$this._create ??= new ListBuilder<GPageSubPagesCreateFieldInput>();
  set create(ListBuilder<GPageSubPagesCreateFieldInput>? create) =>
      _$this._create = create;

  ListBuilder<GPageSubPagesDeleteFieldInput>? _delete;
  ListBuilder<GPageSubPagesDeleteFieldInput> get delete =>
      _$this._delete ??= new ListBuilder<GPageSubPagesDeleteFieldInput>();
  set delete(ListBuilder<GPageSubPagesDeleteFieldInput>? delete) =>
      _$this._delete = delete;

  ListBuilder<GPageSubPagesConnectOrCreateFieldInput>? _connectOrCreate;
  ListBuilder<GPageSubPagesConnectOrCreateFieldInput> get connectOrCreate =>
      _$this._connectOrCreate ??=
          new ListBuilder<GPageSubPagesConnectOrCreateFieldInput>();
  set connectOrCreate(
          ListBuilder<GPageSubPagesConnectOrCreateFieldInput>?
              connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GPageSubPagesUpdateFieldInputBuilder();

  GPageSubPagesUpdateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _Gupdate = $v.Gupdate?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _create = $v.create?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSubPagesUpdateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSubPagesUpdateFieldInput;
  }

  @override
  void update(void Function(GPageSubPagesUpdateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSubPagesUpdateFieldInput build() => _build();

  _$GPageSubPagesUpdateFieldInput _build() {
    _$GPageSubPagesUpdateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GPageSubPagesUpdateFieldInput._(
              where: _where?.build(),
              Gupdate: _Gupdate?.build(),
              connect: _connect?.build(),
              disconnect: _disconnect?.build(),
              create: _create?.build(),
              delete: _delete?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'Gupdate';
        _Gupdate?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'delete';
        _delete?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageSubPagesUpdateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageUniqueWhere extends GPageUniqueWhere {
  @override
  final String? id;

  factory _$GPageUniqueWhere(
          [void Function(GPageUniqueWhereBuilder)? updates]) =>
      (new GPageUniqueWhereBuilder()..update(updates))._build();

  _$GPageUniqueWhere._({this.id}) : super._();

  @override
  GPageUniqueWhere rebuild(void Function(GPageUniqueWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageUniqueWhereBuilder toBuilder() =>
      new GPageUniqueWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageUniqueWhere && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageUniqueWhere')..add('id', id))
        .toString();
  }
}

class GPageUniqueWhereBuilder
    implements Builder<GPageUniqueWhere, GPageUniqueWhereBuilder> {
  _$GPageUniqueWhere? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GPageUniqueWhereBuilder();

  GPageUniqueWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageUniqueWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageUniqueWhere;
  }

  @override
  void update(void Function(GPageUniqueWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageUniqueWhere build() => _build();

  _$GPageUniqueWhere _build() {
    final _$result = _$v ?? new _$GPageUniqueWhere._(id: id);
    replace(_$result);
    return _$result;
  }
}

class _$GPageUpdateInput extends GPageUpdateInput {
  @override
  final String? title;
  @override
  final String? description;
  @override
  final String? layout;
  @override
  final int? orderNumber;
  @override
  final int? orderNumber_INCREMENT;
  @override
  final int? orderNumber_DECREMENT;
  @override
  final BuiltList<GPageSubPagesUpdateFieldInput>? subPages;
  @override
  final GPageParentPageUpdateFieldInput? parentPage;
  @override
  final GPageBelongsToUpdateFieldInput? belongsTo;

  factory _$GPageUpdateInput(
          [void Function(GPageUpdateInputBuilder)? updates]) =>
      (new GPageUpdateInputBuilder()..update(updates))._build();

  _$GPageUpdateInput._(
      {this.title,
      this.description,
      this.layout,
      this.orderNumber,
      this.orderNumber_INCREMENT,
      this.orderNumber_DECREMENT,
      this.subPages,
      this.parentPage,
      this.belongsTo})
      : super._();

  @override
  GPageUpdateInput rebuild(void Function(GPageUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageUpdateInputBuilder toBuilder() =>
      new GPageUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageUpdateInput &&
        title == other.title &&
        description == other.description &&
        layout == other.layout &&
        orderNumber == other.orderNumber &&
        orderNumber_INCREMENT == other.orderNumber_INCREMENT &&
        orderNumber_DECREMENT == other.orderNumber_DECREMENT &&
        subPages == other.subPages &&
        parentPage == other.parentPage &&
        belongsTo == other.belongsTo;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, title.hashCode),
                                    description.hashCode),
                                layout.hashCode),
                            orderNumber.hashCode),
                        orderNumber_INCREMENT.hashCode),
                    orderNumber_DECREMENT.hashCode),
                subPages.hashCode),
            parentPage.hashCode),
        belongsTo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageUpdateInput')
          ..add('title', title)
          ..add('description', description)
          ..add('layout', layout)
          ..add('orderNumber', orderNumber)
          ..add('orderNumber_INCREMENT', orderNumber_INCREMENT)
          ..add('orderNumber_DECREMENT', orderNumber_DECREMENT)
          ..add('subPages', subPages)
          ..add('parentPage', parentPage)
          ..add('belongsTo', belongsTo))
        .toString();
  }
}

class GPageUpdateInputBuilder
    implements Builder<GPageUpdateInput, GPageUpdateInputBuilder> {
  _$GPageUpdateInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _layout;
  String? get layout => _$this._layout;
  set layout(String? layout) => _$this._layout = layout;

  int? _orderNumber;
  int? get orderNumber => _$this._orderNumber;
  set orderNumber(int? orderNumber) => _$this._orderNumber = orderNumber;

  int? _orderNumber_INCREMENT;
  int? get orderNumber_INCREMENT => _$this._orderNumber_INCREMENT;
  set orderNumber_INCREMENT(int? orderNumber_INCREMENT) =>
      _$this._orderNumber_INCREMENT = orderNumber_INCREMENT;

  int? _orderNumber_DECREMENT;
  int? get orderNumber_DECREMENT => _$this._orderNumber_DECREMENT;
  set orderNumber_DECREMENT(int? orderNumber_DECREMENT) =>
      _$this._orderNumber_DECREMENT = orderNumber_DECREMENT;

  ListBuilder<GPageSubPagesUpdateFieldInput>? _subPages;
  ListBuilder<GPageSubPagesUpdateFieldInput> get subPages =>
      _$this._subPages ??= new ListBuilder<GPageSubPagesUpdateFieldInput>();
  set subPages(ListBuilder<GPageSubPagesUpdateFieldInput>? subPages) =>
      _$this._subPages = subPages;

  GPageParentPageUpdateFieldInputBuilder? _parentPage;
  GPageParentPageUpdateFieldInputBuilder get parentPage =>
      _$this._parentPage ??= new GPageParentPageUpdateFieldInputBuilder();
  set parentPage(GPageParentPageUpdateFieldInputBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageBelongsToUpdateFieldInputBuilder? _belongsTo;
  GPageBelongsToUpdateFieldInputBuilder get belongsTo =>
      _$this._belongsTo ??= new GPageBelongsToUpdateFieldInputBuilder();
  set belongsTo(GPageBelongsToUpdateFieldInputBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GPageUpdateInputBuilder();

  GPageUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _layout = $v.layout;
      _orderNumber = $v.orderNumber;
      _orderNumber_INCREMENT = $v.orderNumber_INCREMENT;
      _orderNumber_DECREMENT = $v.orderNumber_DECREMENT;
      _subPages = $v.subPages?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageUpdateInput;
  }

  @override
  void update(void Function(GPageUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageUpdateInput build() => _build();

  _$GPageUpdateInput _build() {
    _$GPageUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageUpdateInput._(
              title: title,
              description: description,
              layout: layout,
              orderNumber: orderNumber,
              orderNumber_INCREMENT: orderNumber_INCREMENT,
              orderNumber_DECREMENT: orderNumber_DECREMENT,
              subPages: _subPages?.build(),
              parentPage: _parentPage?.build(),
              belongsTo: _belongsTo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'subPages';
        _subPages?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageWhere extends GPageWhere {
  @override
  final BuiltList<GPageWhere>? OR;
  @override
  final BuiltList<GPageWhere>? AND;
  @override
  final String? id;
  @override
  final String? id_NOT;
  @override
  final BuiltList<String>? id_IN;
  @override
  final BuiltList<String>? id_NOT_IN;
  @override
  final String? id_CONTAINS;
  @override
  final String? id_NOT_CONTAINS;
  @override
  final String? id_STARTS_WITH;
  @override
  final String? id_NOT_STARTS_WITH;
  @override
  final String? id_ENDS_WITH;
  @override
  final String? id_NOT_ENDS_WITH;
  @override
  final String? title;
  @override
  final String? title_NOT;
  @override
  final BuiltList<String>? title_IN;
  @override
  final BuiltList<String>? title_NOT_IN;
  @override
  final String? title_CONTAINS;
  @override
  final String? title_NOT_CONTAINS;
  @override
  final String? title_STARTS_WITH;
  @override
  final String? title_NOT_STARTS_WITH;
  @override
  final String? title_ENDS_WITH;
  @override
  final String? title_NOT_ENDS_WITH;
  @override
  final String? description;
  @override
  final String? description_NOT;
  @override
  final BuiltList<String>? description_IN;
  @override
  final BuiltList<String>? description_NOT_IN;
  @override
  final String? description_CONTAINS;
  @override
  final String? description_NOT_CONTAINS;
  @override
  final String? description_STARTS_WITH;
  @override
  final String? description_NOT_STARTS_WITH;
  @override
  final String? description_ENDS_WITH;
  @override
  final String? description_NOT_ENDS_WITH;
  @override
  final String? layout;
  @override
  final String? layout_NOT;
  @override
  final BuiltList<String>? layout_IN;
  @override
  final BuiltList<String>? layout_NOT_IN;
  @override
  final String? layout_CONTAINS;
  @override
  final String? layout_NOT_CONTAINS;
  @override
  final String? layout_STARTS_WITH;
  @override
  final String? layout_NOT_STARTS_WITH;
  @override
  final String? layout_ENDS_WITH;
  @override
  final String? layout_NOT_ENDS_WITH;
  @override
  final int? orderNumber;
  @override
  final int? orderNumber_NOT;
  @override
  final BuiltList<int>? orderNumber_IN;
  @override
  final BuiltList<int>? orderNumber_NOT_IN;
  @override
  final int? orderNumber_LT;
  @override
  final int? orderNumber_LTE;
  @override
  final int? orderNumber_GT;
  @override
  final int? orderNumber_GTE;
  @override
  final GPageSubPagesAggregateInput? subPagesAggregate;
  @override
  final GPageWhere? subPages_ALL;
  @override
  final GPageWhere? subPages_NONE;
  @override
  final GPageWhere? subPages_SINGLE;
  @override
  final GPageWhere? subPages_SOME;
  @override
  final GPageWhere? parentPage;
  @override
  final GPageWhere? parentPage_NOT;
  @override
  final GPageParentPageAggregateInput? parentPageAggregate;
  @override
  final GProjectWhere? belongsTo;
  @override
  final GProjectWhere? belongsTo_NOT;
  @override
  final GPageBelongsToAggregateInput? belongsToAggregate;
  @override
  final GPageSubPagesConnectionWhere? subPagesConnection_ALL;
  @override
  final GPageSubPagesConnectionWhere? subPagesConnection_NONE;
  @override
  final GPageSubPagesConnectionWhere? subPagesConnection_SINGLE;
  @override
  final GPageSubPagesConnectionWhere? subPagesConnection_SOME;
  @override
  final GPageParentPageConnectionWhere? parentPageConnection;
  @override
  final GPageParentPageConnectionWhere? parentPageConnection_NOT;
  @override
  final GPageBelongsToConnectionWhere? belongsToConnection;
  @override
  final GPageBelongsToConnectionWhere? belongsToConnection_NOT;

  factory _$GPageWhere([void Function(GPageWhereBuilder)? updates]) =>
      (new GPageWhereBuilder()..update(updates))._build();

  _$GPageWhere._(
      {this.OR,
      this.AND,
      this.id,
      this.id_NOT,
      this.id_IN,
      this.id_NOT_IN,
      this.id_CONTAINS,
      this.id_NOT_CONTAINS,
      this.id_STARTS_WITH,
      this.id_NOT_STARTS_WITH,
      this.id_ENDS_WITH,
      this.id_NOT_ENDS_WITH,
      this.title,
      this.title_NOT,
      this.title_IN,
      this.title_NOT_IN,
      this.title_CONTAINS,
      this.title_NOT_CONTAINS,
      this.title_STARTS_WITH,
      this.title_NOT_STARTS_WITH,
      this.title_ENDS_WITH,
      this.title_NOT_ENDS_WITH,
      this.description,
      this.description_NOT,
      this.description_IN,
      this.description_NOT_IN,
      this.description_CONTAINS,
      this.description_NOT_CONTAINS,
      this.description_STARTS_WITH,
      this.description_NOT_STARTS_WITH,
      this.description_ENDS_WITH,
      this.description_NOT_ENDS_WITH,
      this.layout,
      this.layout_NOT,
      this.layout_IN,
      this.layout_NOT_IN,
      this.layout_CONTAINS,
      this.layout_NOT_CONTAINS,
      this.layout_STARTS_WITH,
      this.layout_NOT_STARTS_WITH,
      this.layout_ENDS_WITH,
      this.layout_NOT_ENDS_WITH,
      this.orderNumber,
      this.orderNumber_NOT,
      this.orderNumber_IN,
      this.orderNumber_NOT_IN,
      this.orderNumber_LT,
      this.orderNumber_LTE,
      this.orderNumber_GT,
      this.orderNumber_GTE,
      this.subPagesAggregate,
      this.subPages_ALL,
      this.subPages_NONE,
      this.subPages_SINGLE,
      this.subPages_SOME,
      this.parentPage,
      this.parentPage_NOT,
      this.parentPageAggregate,
      this.belongsTo,
      this.belongsTo_NOT,
      this.belongsToAggregate,
      this.subPagesConnection_ALL,
      this.subPagesConnection_NONE,
      this.subPagesConnection_SINGLE,
      this.subPagesConnection_SOME,
      this.parentPageConnection,
      this.parentPageConnection_NOT,
      this.belongsToConnection,
      this.belongsToConnection_NOT})
      : super._();

  @override
  GPageWhere rebuild(void Function(GPageWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageWhereBuilder toBuilder() => new GPageWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageWhere &&
        OR == other.OR &&
        AND == other.AND &&
        id == other.id &&
        id_NOT == other.id_NOT &&
        id_IN == other.id_IN &&
        id_NOT_IN == other.id_NOT_IN &&
        id_CONTAINS == other.id_CONTAINS &&
        id_NOT_CONTAINS == other.id_NOT_CONTAINS &&
        id_STARTS_WITH == other.id_STARTS_WITH &&
        id_NOT_STARTS_WITH == other.id_NOT_STARTS_WITH &&
        id_ENDS_WITH == other.id_ENDS_WITH &&
        id_NOT_ENDS_WITH == other.id_NOT_ENDS_WITH &&
        title == other.title &&
        title_NOT == other.title_NOT &&
        title_IN == other.title_IN &&
        title_NOT_IN == other.title_NOT_IN &&
        title_CONTAINS == other.title_CONTAINS &&
        title_NOT_CONTAINS == other.title_NOT_CONTAINS &&
        title_STARTS_WITH == other.title_STARTS_WITH &&
        title_NOT_STARTS_WITH == other.title_NOT_STARTS_WITH &&
        title_ENDS_WITH == other.title_ENDS_WITH &&
        title_NOT_ENDS_WITH == other.title_NOT_ENDS_WITH &&
        description == other.description &&
        description_NOT == other.description_NOT &&
        description_IN == other.description_IN &&
        description_NOT_IN == other.description_NOT_IN &&
        description_CONTAINS == other.description_CONTAINS &&
        description_NOT_CONTAINS == other.description_NOT_CONTAINS &&
        description_STARTS_WITH == other.description_STARTS_WITH &&
        description_NOT_STARTS_WITH == other.description_NOT_STARTS_WITH &&
        description_ENDS_WITH == other.description_ENDS_WITH &&
        description_NOT_ENDS_WITH == other.description_NOT_ENDS_WITH &&
        layout == other.layout &&
        layout_NOT == other.layout_NOT &&
        layout_IN == other.layout_IN &&
        layout_NOT_IN == other.layout_NOT_IN &&
        layout_CONTAINS == other.layout_CONTAINS &&
        layout_NOT_CONTAINS == other.layout_NOT_CONTAINS &&
        layout_STARTS_WITH == other.layout_STARTS_WITH &&
        layout_NOT_STARTS_WITH == other.layout_NOT_STARTS_WITH &&
        layout_ENDS_WITH == other.layout_ENDS_WITH &&
        layout_NOT_ENDS_WITH == other.layout_NOT_ENDS_WITH &&
        orderNumber == other.orderNumber &&
        orderNumber_NOT == other.orderNumber_NOT &&
        orderNumber_IN == other.orderNumber_IN &&
        orderNumber_NOT_IN == other.orderNumber_NOT_IN &&
        orderNumber_LT == other.orderNumber_LT &&
        orderNumber_LTE == other.orderNumber_LTE &&
        orderNumber_GT == other.orderNumber_GT &&
        orderNumber_GTE == other.orderNumber_GTE &&
        subPagesAggregate == other.subPagesAggregate &&
        subPages_ALL == other.subPages_ALL &&
        subPages_NONE == other.subPages_NONE &&
        subPages_SINGLE == other.subPages_SINGLE &&
        subPages_SOME == other.subPages_SOME &&
        parentPage == other.parentPage &&
        parentPage_NOT == other.parentPage_NOT &&
        parentPageAggregate == other.parentPageAggregate &&
        belongsTo == other.belongsTo &&
        belongsTo_NOT == other.belongsTo_NOT &&
        belongsToAggregate == other.belongsToAggregate &&
        subPagesConnection_ALL == other.subPagesConnection_ALL &&
        subPagesConnection_NONE == other.subPagesConnection_NONE &&
        subPagesConnection_SINGLE == other.subPagesConnection_SINGLE &&
        subPagesConnection_SOME == other.subPagesConnection_SOME &&
        parentPageConnection == other.parentPageConnection &&
        parentPageConnection_NOT == other.parentPageConnection_NOT &&
        belongsToConnection == other.belongsToConnection &&
        belongsToConnection_NOT == other.belongsToConnection_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, OR.hashCode), AND.hashCode), id.hashCode), id_NOT.hashCode), id_IN.hashCode), id_NOT_IN.hashCode), id_CONTAINS.hashCode), id_NOT_CONTAINS.hashCode), id_STARTS_WITH.hashCode), id_NOT_STARTS_WITH.hashCode), id_ENDS_WITH.hashCode), id_NOT_ENDS_WITH.hashCode), title.hashCode), title_NOT.hashCode), title_IN.hashCode), title_NOT_IN.hashCode), title_CONTAINS.hashCode), title_NOT_CONTAINS.hashCode), title_STARTS_WITH.hashCode), title_NOT_STARTS_WITH.hashCode), title_ENDS_WITH.hashCode), title_NOT_ENDS_WITH.hashCode), description.hashCode), description_NOT.hashCode), description_IN.hashCode), description_NOT_IN.hashCode), description_CONTAINS.hashCode), description_NOT_CONTAINS.hashCode), description_STARTS_WITH.hashCode), description_NOT_STARTS_WITH.hashCode), description_ENDS_WITH.hashCode), description_NOT_ENDS_WITH.hashCode), layout.hashCode), layout_NOT.hashCode), layout_IN.hashCode), layout_NOT_IN.hashCode), layout_CONTAINS.hashCode), layout_NOT_CONTAINS.hashCode), layout_STARTS_WITH.hashCode), layout_NOT_STARTS_WITH.hashCode), layout_ENDS_WITH.hashCode), layout_NOT_ENDS_WITH.hashCode), orderNumber.hashCode), orderNumber_NOT.hashCode), orderNumber_IN.hashCode), orderNumber_NOT_IN.hashCode), orderNumber_LT.hashCode), orderNumber_LTE.hashCode), orderNumber_GT.hashCode), orderNumber_GTE.hashCode),
                                                                                subPagesAggregate.hashCode),
                                                                            subPages_ALL.hashCode),
                                                                        subPages_NONE.hashCode),
                                                                    subPages_SINGLE.hashCode),
                                                                subPages_SOME.hashCode),
                                                            parentPage.hashCode),
                                                        parentPage_NOT.hashCode),
                                                    parentPageAggregate.hashCode),
                                                belongsTo.hashCode),
                                            belongsTo_NOT.hashCode),
                                        belongsToAggregate.hashCode),
                                    subPagesConnection_ALL.hashCode),
                                subPagesConnection_NONE.hashCode),
                            subPagesConnection_SINGLE.hashCode),
                        subPagesConnection_SOME.hashCode),
                    parentPageConnection.hashCode),
                parentPageConnection_NOT.hashCode),
            belongsToConnection.hashCode),
        belongsToConnection_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageWhere')
          ..add('OR', OR)
          ..add('AND', AND)
          ..add('id', id)
          ..add('id_NOT', id_NOT)
          ..add('id_IN', id_IN)
          ..add('id_NOT_IN', id_NOT_IN)
          ..add('id_CONTAINS', id_CONTAINS)
          ..add('id_NOT_CONTAINS', id_NOT_CONTAINS)
          ..add('id_STARTS_WITH', id_STARTS_WITH)
          ..add('id_NOT_STARTS_WITH', id_NOT_STARTS_WITH)
          ..add('id_ENDS_WITH', id_ENDS_WITH)
          ..add('id_NOT_ENDS_WITH', id_NOT_ENDS_WITH)
          ..add('title', title)
          ..add('title_NOT', title_NOT)
          ..add('title_IN', title_IN)
          ..add('title_NOT_IN', title_NOT_IN)
          ..add('title_CONTAINS', title_CONTAINS)
          ..add('title_NOT_CONTAINS', title_NOT_CONTAINS)
          ..add('title_STARTS_WITH', title_STARTS_WITH)
          ..add('title_NOT_STARTS_WITH', title_NOT_STARTS_WITH)
          ..add('title_ENDS_WITH', title_ENDS_WITH)
          ..add('title_NOT_ENDS_WITH', title_NOT_ENDS_WITH)
          ..add('description', description)
          ..add('description_NOT', description_NOT)
          ..add('description_IN', description_IN)
          ..add('description_NOT_IN', description_NOT_IN)
          ..add('description_CONTAINS', description_CONTAINS)
          ..add('description_NOT_CONTAINS', description_NOT_CONTAINS)
          ..add('description_STARTS_WITH', description_STARTS_WITH)
          ..add('description_NOT_STARTS_WITH', description_NOT_STARTS_WITH)
          ..add('description_ENDS_WITH', description_ENDS_WITH)
          ..add('description_NOT_ENDS_WITH', description_NOT_ENDS_WITH)
          ..add('layout', layout)
          ..add('layout_NOT', layout_NOT)
          ..add('layout_IN', layout_IN)
          ..add('layout_NOT_IN', layout_NOT_IN)
          ..add('layout_CONTAINS', layout_CONTAINS)
          ..add('layout_NOT_CONTAINS', layout_NOT_CONTAINS)
          ..add('layout_STARTS_WITH', layout_STARTS_WITH)
          ..add('layout_NOT_STARTS_WITH', layout_NOT_STARTS_WITH)
          ..add('layout_ENDS_WITH', layout_ENDS_WITH)
          ..add('layout_NOT_ENDS_WITH', layout_NOT_ENDS_WITH)
          ..add('orderNumber', orderNumber)
          ..add('orderNumber_NOT', orderNumber_NOT)
          ..add('orderNumber_IN', orderNumber_IN)
          ..add('orderNumber_NOT_IN', orderNumber_NOT_IN)
          ..add('orderNumber_LT', orderNumber_LT)
          ..add('orderNumber_LTE', orderNumber_LTE)
          ..add('orderNumber_GT', orderNumber_GT)
          ..add('orderNumber_GTE', orderNumber_GTE)
          ..add('subPagesAggregate', subPagesAggregate)
          ..add('subPages_ALL', subPages_ALL)
          ..add('subPages_NONE', subPages_NONE)
          ..add('subPages_SINGLE', subPages_SINGLE)
          ..add('subPages_SOME', subPages_SOME)
          ..add('parentPage', parentPage)
          ..add('parentPage_NOT', parentPage_NOT)
          ..add('parentPageAggregate', parentPageAggregate)
          ..add('belongsTo', belongsTo)
          ..add('belongsTo_NOT', belongsTo_NOT)
          ..add('belongsToAggregate', belongsToAggregate)
          ..add('subPagesConnection_ALL', subPagesConnection_ALL)
          ..add('subPagesConnection_NONE', subPagesConnection_NONE)
          ..add('subPagesConnection_SINGLE', subPagesConnection_SINGLE)
          ..add('subPagesConnection_SOME', subPagesConnection_SOME)
          ..add('parentPageConnection', parentPageConnection)
          ..add('parentPageConnection_NOT', parentPageConnection_NOT)
          ..add('belongsToConnection', belongsToConnection)
          ..add('belongsToConnection_NOT', belongsToConnection_NOT))
        .toString();
  }
}

class GPageWhereBuilder implements Builder<GPageWhere, GPageWhereBuilder> {
  _$GPageWhere? _$v;

  ListBuilder<GPageWhere>? _OR;
  ListBuilder<GPageWhere> get OR =>
      _$this._OR ??= new ListBuilder<GPageWhere>();
  set OR(ListBuilder<GPageWhere>? OR) => _$this._OR = OR;

  ListBuilder<GPageWhere>? _AND;
  ListBuilder<GPageWhere> get AND =>
      _$this._AND ??= new ListBuilder<GPageWhere>();
  set AND(ListBuilder<GPageWhere>? AND) => _$this._AND = AND;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _id_NOT;
  String? get id_NOT => _$this._id_NOT;
  set id_NOT(String? id_NOT) => _$this._id_NOT = id_NOT;

  ListBuilder<String>? _id_IN;
  ListBuilder<String> get id_IN => _$this._id_IN ??= new ListBuilder<String>();
  set id_IN(ListBuilder<String>? id_IN) => _$this._id_IN = id_IN;

  ListBuilder<String>? _id_NOT_IN;
  ListBuilder<String> get id_NOT_IN =>
      _$this._id_NOT_IN ??= new ListBuilder<String>();
  set id_NOT_IN(ListBuilder<String>? id_NOT_IN) =>
      _$this._id_NOT_IN = id_NOT_IN;

  String? _id_CONTAINS;
  String? get id_CONTAINS => _$this._id_CONTAINS;
  set id_CONTAINS(String? id_CONTAINS) => _$this._id_CONTAINS = id_CONTAINS;

  String? _id_NOT_CONTAINS;
  String? get id_NOT_CONTAINS => _$this._id_NOT_CONTAINS;
  set id_NOT_CONTAINS(String? id_NOT_CONTAINS) =>
      _$this._id_NOT_CONTAINS = id_NOT_CONTAINS;

  String? _id_STARTS_WITH;
  String? get id_STARTS_WITH => _$this._id_STARTS_WITH;
  set id_STARTS_WITH(String? id_STARTS_WITH) =>
      _$this._id_STARTS_WITH = id_STARTS_WITH;

  String? _id_NOT_STARTS_WITH;
  String? get id_NOT_STARTS_WITH => _$this._id_NOT_STARTS_WITH;
  set id_NOT_STARTS_WITH(String? id_NOT_STARTS_WITH) =>
      _$this._id_NOT_STARTS_WITH = id_NOT_STARTS_WITH;

  String? _id_ENDS_WITH;
  String? get id_ENDS_WITH => _$this._id_ENDS_WITH;
  set id_ENDS_WITH(String? id_ENDS_WITH) => _$this._id_ENDS_WITH = id_ENDS_WITH;

  String? _id_NOT_ENDS_WITH;
  String? get id_NOT_ENDS_WITH => _$this._id_NOT_ENDS_WITH;
  set id_NOT_ENDS_WITH(String? id_NOT_ENDS_WITH) =>
      _$this._id_NOT_ENDS_WITH = id_NOT_ENDS_WITH;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _title_NOT;
  String? get title_NOT => _$this._title_NOT;
  set title_NOT(String? title_NOT) => _$this._title_NOT = title_NOT;

  ListBuilder<String>? _title_IN;
  ListBuilder<String> get title_IN =>
      _$this._title_IN ??= new ListBuilder<String>();
  set title_IN(ListBuilder<String>? title_IN) => _$this._title_IN = title_IN;

  ListBuilder<String>? _title_NOT_IN;
  ListBuilder<String> get title_NOT_IN =>
      _$this._title_NOT_IN ??= new ListBuilder<String>();
  set title_NOT_IN(ListBuilder<String>? title_NOT_IN) =>
      _$this._title_NOT_IN = title_NOT_IN;

  String? _title_CONTAINS;
  String? get title_CONTAINS => _$this._title_CONTAINS;
  set title_CONTAINS(String? title_CONTAINS) =>
      _$this._title_CONTAINS = title_CONTAINS;

  String? _title_NOT_CONTAINS;
  String? get title_NOT_CONTAINS => _$this._title_NOT_CONTAINS;
  set title_NOT_CONTAINS(String? title_NOT_CONTAINS) =>
      _$this._title_NOT_CONTAINS = title_NOT_CONTAINS;

  String? _title_STARTS_WITH;
  String? get title_STARTS_WITH => _$this._title_STARTS_WITH;
  set title_STARTS_WITH(String? title_STARTS_WITH) =>
      _$this._title_STARTS_WITH = title_STARTS_WITH;

  String? _title_NOT_STARTS_WITH;
  String? get title_NOT_STARTS_WITH => _$this._title_NOT_STARTS_WITH;
  set title_NOT_STARTS_WITH(String? title_NOT_STARTS_WITH) =>
      _$this._title_NOT_STARTS_WITH = title_NOT_STARTS_WITH;

  String? _title_ENDS_WITH;
  String? get title_ENDS_WITH => _$this._title_ENDS_WITH;
  set title_ENDS_WITH(String? title_ENDS_WITH) =>
      _$this._title_ENDS_WITH = title_ENDS_WITH;

  String? _title_NOT_ENDS_WITH;
  String? get title_NOT_ENDS_WITH => _$this._title_NOT_ENDS_WITH;
  set title_NOT_ENDS_WITH(String? title_NOT_ENDS_WITH) =>
      _$this._title_NOT_ENDS_WITH = title_NOT_ENDS_WITH;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _description_NOT;
  String? get description_NOT => _$this._description_NOT;
  set description_NOT(String? description_NOT) =>
      _$this._description_NOT = description_NOT;

  ListBuilder<String>? _description_IN;
  ListBuilder<String> get description_IN =>
      _$this._description_IN ??= new ListBuilder<String>();
  set description_IN(ListBuilder<String>? description_IN) =>
      _$this._description_IN = description_IN;

  ListBuilder<String>? _description_NOT_IN;
  ListBuilder<String> get description_NOT_IN =>
      _$this._description_NOT_IN ??= new ListBuilder<String>();
  set description_NOT_IN(ListBuilder<String>? description_NOT_IN) =>
      _$this._description_NOT_IN = description_NOT_IN;

  String? _description_CONTAINS;
  String? get description_CONTAINS => _$this._description_CONTAINS;
  set description_CONTAINS(String? description_CONTAINS) =>
      _$this._description_CONTAINS = description_CONTAINS;

  String? _description_NOT_CONTAINS;
  String? get description_NOT_CONTAINS => _$this._description_NOT_CONTAINS;
  set description_NOT_CONTAINS(String? description_NOT_CONTAINS) =>
      _$this._description_NOT_CONTAINS = description_NOT_CONTAINS;

  String? _description_STARTS_WITH;
  String? get description_STARTS_WITH => _$this._description_STARTS_WITH;
  set description_STARTS_WITH(String? description_STARTS_WITH) =>
      _$this._description_STARTS_WITH = description_STARTS_WITH;

  String? _description_NOT_STARTS_WITH;
  String? get description_NOT_STARTS_WITH =>
      _$this._description_NOT_STARTS_WITH;
  set description_NOT_STARTS_WITH(String? description_NOT_STARTS_WITH) =>
      _$this._description_NOT_STARTS_WITH = description_NOT_STARTS_WITH;

  String? _description_ENDS_WITH;
  String? get description_ENDS_WITH => _$this._description_ENDS_WITH;
  set description_ENDS_WITH(String? description_ENDS_WITH) =>
      _$this._description_ENDS_WITH = description_ENDS_WITH;

  String? _description_NOT_ENDS_WITH;
  String? get description_NOT_ENDS_WITH => _$this._description_NOT_ENDS_WITH;
  set description_NOT_ENDS_WITH(String? description_NOT_ENDS_WITH) =>
      _$this._description_NOT_ENDS_WITH = description_NOT_ENDS_WITH;

  String? _layout;
  String? get layout => _$this._layout;
  set layout(String? layout) => _$this._layout = layout;

  String? _layout_NOT;
  String? get layout_NOT => _$this._layout_NOT;
  set layout_NOT(String? layout_NOT) => _$this._layout_NOT = layout_NOT;

  ListBuilder<String>? _layout_IN;
  ListBuilder<String> get layout_IN =>
      _$this._layout_IN ??= new ListBuilder<String>();
  set layout_IN(ListBuilder<String>? layout_IN) =>
      _$this._layout_IN = layout_IN;

  ListBuilder<String>? _layout_NOT_IN;
  ListBuilder<String> get layout_NOT_IN =>
      _$this._layout_NOT_IN ??= new ListBuilder<String>();
  set layout_NOT_IN(ListBuilder<String>? layout_NOT_IN) =>
      _$this._layout_NOT_IN = layout_NOT_IN;

  String? _layout_CONTAINS;
  String? get layout_CONTAINS => _$this._layout_CONTAINS;
  set layout_CONTAINS(String? layout_CONTAINS) =>
      _$this._layout_CONTAINS = layout_CONTAINS;

  String? _layout_NOT_CONTAINS;
  String? get layout_NOT_CONTAINS => _$this._layout_NOT_CONTAINS;
  set layout_NOT_CONTAINS(String? layout_NOT_CONTAINS) =>
      _$this._layout_NOT_CONTAINS = layout_NOT_CONTAINS;

  String? _layout_STARTS_WITH;
  String? get layout_STARTS_WITH => _$this._layout_STARTS_WITH;
  set layout_STARTS_WITH(String? layout_STARTS_WITH) =>
      _$this._layout_STARTS_WITH = layout_STARTS_WITH;

  String? _layout_NOT_STARTS_WITH;
  String? get layout_NOT_STARTS_WITH => _$this._layout_NOT_STARTS_WITH;
  set layout_NOT_STARTS_WITH(String? layout_NOT_STARTS_WITH) =>
      _$this._layout_NOT_STARTS_WITH = layout_NOT_STARTS_WITH;

  String? _layout_ENDS_WITH;
  String? get layout_ENDS_WITH => _$this._layout_ENDS_WITH;
  set layout_ENDS_WITH(String? layout_ENDS_WITH) =>
      _$this._layout_ENDS_WITH = layout_ENDS_WITH;

  String? _layout_NOT_ENDS_WITH;
  String? get layout_NOT_ENDS_WITH => _$this._layout_NOT_ENDS_WITH;
  set layout_NOT_ENDS_WITH(String? layout_NOT_ENDS_WITH) =>
      _$this._layout_NOT_ENDS_WITH = layout_NOT_ENDS_WITH;

  int? _orderNumber;
  int? get orderNumber => _$this._orderNumber;
  set orderNumber(int? orderNumber) => _$this._orderNumber = orderNumber;

  int? _orderNumber_NOT;
  int? get orderNumber_NOT => _$this._orderNumber_NOT;
  set orderNumber_NOT(int? orderNumber_NOT) =>
      _$this._orderNumber_NOT = orderNumber_NOT;

  ListBuilder<int>? _orderNumber_IN;
  ListBuilder<int> get orderNumber_IN =>
      _$this._orderNumber_IN ??= new ListBuilder<int>();
  set orderNumber_IN(ListBuilder<int>? orderNumber_IN) =>
      _$this._orderNumber_IN = orderNumber_IN;

  ListBuilder<int>? _orderNumber_NOT_IN;
  ListBuilder<int> get orderNumber_NOT_IN =>
      _$this._orderNumber_NOT_IN ??= new ListBuilder<int>();
  set orderNumber_NOT_IN(ListBuilder<int>? orderNumber_NOT_IN) =>
      _$this._orderNumber_NOT_IN = orderNumber_NOT_IN;

  int? _orderNumber_LT;
  int? get orderNumber_LT => _$this._orderNumber_LT;
  set orderNumber_LT(int? orderNumber_LT) =>
      _$this._orderNumber_LT = orderNumber_LT;

  int? _orderNumber_LTE;
  int? get orderNumber_LTE => _$this._orderNumber_LTE;
  set orderNumber_LTE(int? orderNumber_LTE) =>
      _$this._orderNumber_LTE = orderNumber_LTE;

  int? _orderNumber_GT;
  int? get orderNumber_GT => _$this._orderNumber_GT;
  set orderNumber_GT(int? orderNumber_GT) =>
      _$this._orderNumber_GT = orderNumber_GT;

  int? _orderNumber_GTE;
  int? get orderNumber_GTE => _$this._orderNumber_GTE;
  set orderNumber_GTE(int? orderNumber_GTE) =>
      _$this._orderNumber_GTE = orderNumber_GTE;

  GPageSubPagesAggregateInputBuilder? _subPagesAggregate;
  GPageSubPagesAggregateInputBuilder get subPagesAggregate =>
      _$this._subPagesAggregate ??= new GPageSubPagesAggregateInputBuilder();
  set subPagesAggregate(
          GPageSubPagesAggregateInputBuilder? subPagesAggregate) =>
      _$this._subPagesAggregate = subPagesAggregate;

  GPageWhereBuilder? _subPages_ALL;
  GPageWhereBuilder get subPages_ALL =>
      _$this._subPages_ALL ??= new GPageWhereBuilder();
  set subPages_ALL(GPageWhereBuilder? subPages_ALL) =>
      _$this._subPages_ALL = subPages_ALL;

  GPageWhereBuilder? _subPages_NONE;
  GPageWhereBuilder get subPages_NONE =>
      _$this._subPages_NONE ??= new GPageWhereBuilder();
  set subPages_NONE(GPageWhereBuilder? subPages_NONE) =>
      _$this._subPages_NONE = subPages_NONE;

  GPageWhereBuilder? _subPages_SINGLE;
  GPageWhereBuilder get subPages_SINGLE =>
      _$this._subPages_SINGLE ??= new GPageWhereBuilder();
  set subPages_SINGLE(GPageWhereBuilder? subPages_SINGLE) =>
      _$this._subPages_SINGLE = subPages_SINGLE;

  GPageWhereBuilder? _subPages_SOME;
  GPageWhereBuilder get subPages_SOME =>
      _$this._subPages_SOME ??= new GPageWhereBuilder();
  set subPages_SOME(GPageWhereBuilder? subPages_SOME) =>
      _$this._subPages_SOME = subPages_SOME;

  GPageWhereBuilder? _parentPage;
  GPageWhereBuilder get parentPage =>
      _$this._parentPage ??= new GPageWhereBuilder();
  set parentPage(GPageWhereBuilder? parentPage) =>
      _$this._parentPage = parentPage;

  GPageWhereBuilder? _parentPage_NOT;
  GPageWhereBuilder get parentPage_NOT =>
      _$this._parentPage_NOT ??= new GPageWhereBuilder();
  set parentPage_NOT(GPageWhereBuilder? parentPage_NOT) =>
      _$this._parentPage_NOT = parentPage_NOT;

  GPageParentPageAggregateInputBuilder? _parentPageAggregate;
  GPageParentPageAggregateInputBuilder get parentPageAggregate =>
      _$this._parentPageAggregate ??=
          new GPageParentPageAggregateInputBuilder();
  set parentPageAggregate(
          GPageParentPageAggregateInputBuilder? parentPageAggregate) =>
      _$this._parentPageAggregate = parentPageAggregate;

  GProjectWhereBuilder? _belongsTo;
  GProjectWhereBuilder get belongsTo =>
      _$this._belongsTo ??= new GProjectWhereBuilder();
  set belongsTo(GProjectWhereBuilder? belongsTo) =>
      _$this._belongsTo = belongsTo;

  GProjectWhereBuilder? _belongsTo_NOT;
  GProjectWhereBuilder get belongsTo_NOT =>
      _$this._belongsTo_NOT ??= new GProjectWhereBuilder();
  set belongsTo_NOT(GProjectWhereBuilder? belongsTo_NOT) =>
      _$this._belongsTo_NOT = belongsTo_NOT;

  GPageBelongsToAggregateInputBuilder? _belongsToAggregate;
  GPageBelongsToAggregateInputBuilder get belongsToAggregate =>
      _$this._belongsToAggregate ??= new GPageBelongsToAggregateInputBuilder();
  set belongsToAggregate(
          GPageBelongsToAggregateInputBuilder? belongsToAggregate) =>
      _$this._belongsToAggregate = belongsToAggregate;

  GPageSubPagesConnectionWhereBuilder? _subPagesConnection_ALL;
  GPageSubPagesConnectionWhereBuilder get subPagesConnection_ALL =>
      _$this._subPagesConnection_ALL ??=
          new GPageSubPagesConnectionWhereBuilder();
  set subPagesConnection_ALL(
          GPageSubPagesConnectionWhereBuilder? subPagesConnection_ALL) =>
      _$this._subPagesConnection_ALL = subPagesConnection_ALL;

  GPageSubPagesConnectionWhereBuilder? _subPagesConnection_NONE;
  GPageSubPagesConnectionWhereBuilder get subPagesConnection_NONE =>
      _$this._subPagesConnection_NONE ??=
          new GPageSubPagesConnectionWhereBuilder();
  set subPagesConnection_NONE(
          GPageSubPagesConnectionWhereBuilder? subPagesConnection_NONE) =>
      _$this._subPagesConnection_NONE = subPagesConnection_NONE;

  GPageSubPagesConnectionWhereBuilder? _subPagesConnection_SINGLE;
  GPageSubPagesConnectionWhereBuilder get subPagesConnection_SINGLE =>
      _$this._subPagesConnection_SINGLE ??=
          new GPageSubPagesConnectionWhereBuilder();
  set subPagesConnection_SINGLE(
          GPageSubPagesConnectionWhereBuilder? subPagesConnection_SINGLE) =>
      _$this._subPagesConnection_SINGLE = subPagesConnection_SINGLE;

  GPageSubPagesConnectionWhereBuilder? _subPagesConnection_SOME;
  GPageSubPagesConnectionWhereBuilder get subPagesConnection_SOME =>
      _$this._subPagesConnection_SOME ??=
          new GPageSubPagesConnectionWhereBuilder();
  set subPagesConnection_SOME(
          GPageSubPagesConnectionWhereBuilder? subPagesConnection_SOME) =>
      _$this._subPagesConnection_SOME = subPagesConnection_SOME;

  GPageParentPageConnectionWhereBuilder? _parentPageConnection;
  GPageParentPageConnectionWhereBuilder get parentPageConnection =>
      _$this._parentPageConnection ??=
          new GPageParentPageConnectionWhereBuilder();
  set parentPageConnection(
          GPageParentPageConnectionWhereBuilder? parentPageConnection) =>
      _$this._parentPageConnection = parentPageConnection;

  GPageParentPageConnectionWhereBuilder? _parentPageConnection_NOT;
  GPageParentPageConnectionWhereBuilder get parentPageConnection_NOT =>
      _$this._parentPageConnection_NOT ??=
          new GPageParentPageConnectionWhereBuilder();
  set parentPageConnection_NOT(
          GPageParentPageConnectionWhereBuilder? parentPageConnection_NOT) =>
      _$this._parentPageConnection_NOT = parentPageConnection_NOT;

  GPageBelongsToConnectionWhereBuilder? _belongsToConnection;
  GPageBelongsToConnectionWhereBuilder get belongsToConnection =>
      _$this._belongsToConnection ??=
          new GPageBelongsToConnectionWhereBuilder();
  set belongsToConnection(
          GPageBelongsToConnectionWhereBuilder? belongsToConnection) =>
      _$this._belongsToConnection = belongsToConnection;

  GPageBelongsToConnectionWhereBuilder? _belongsToConnection_NOT;
  GPageBelongsToConnectionWhereBuilder get belongsToConnection_NOT =>
      _$this._belongsToConnection_NOT ??=
          new GPageBelongsToConnectionWhereBuilder();
  set belongsToConnection_NOT(
          GPageBelongsToConnectionWhereBuilder? belongsToConnection_NOT) =>
      _$this._belongsToConnection_NOT = belongsToConnection_NOT;

  GPageWhereBuilder();

  GPageWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _OR = $v.OR?.toBuilder();
      _AND = $v.AND?.toBuilder();
      _id = $v.id;
      _id_NOT = $v.id_NOT;
      _id_IN = $v.id_IN?.toBuilder();
      _id_NOT_IN = $v.id_NOT_IN?.toBuilder();
      _id_CONTAINS = $v.id_CONTAINS;
      _id_NOT_CONTAINS = $v.id_NOT_CONTAINS;
      _id_STARTS_WITH = $v.id_STARTS_WITH;
      _id_NOT_STARTS_WITH = $v.id_NOT_STARTS_WITH;
      _id_ENDS_WITH = $v.id_ENDS_WITH;
      _id_NOT_ENDS_WITH = $v.id_NOT_ENDS_WITH;
      _title = $v.title;
      _title_NOT = $v.title_NOT;
      _title_IN = $v.title_IN?.toBuilder();
      _title_NOT_IN = $v.title_NOT_IN?.toBuilder();
      _title_CONTAINS = $v.title_CONTAINS;
      _title_NOT_CONTAINS = $v.title_NOT_CONTAINS;
      _title_STARTS_WITH = $v.title_STARTS_WITH;
      _title_NOT_STARTS_WITH = $v.title_NOT_STARTS_WITH;
      _title_ENDS_WITH = $v.title_ENDS_WITH;
      _title_NOT_ENDS_WITH = $v.title_NOT_ENDS_WITH;
      _description = $v.description;
      _description_NOT = $v.description_NOT;
      _description_IN = $v.description_IN?.toBuilder();
      _description_NOT_IN = $v.description_NOT_IN?.toBuilder();
      _description_CONTAINS = $v.description_CONTAINS;
      _description_NOT_CONTAINS = $v.description_NOT_CONTAINS;
      _description_STARTS_WITH = $v.description_STARTS_WITH;
      _description_NOT_STARTS_WITH = $v.description_NOT_STARTS_WITH;
      _description_ENDS_WITH = $v.description_ENDS_WITH;
      _description_NOT_ENDS_WITH = $v.description_NOT_ENDS_WITH;
      _layout = $v.layout;
      _layout_NOT = $v.layout_NOT;
      _layout_IN = $v.layout_IN?.toBuilder();
      _layout_NOT_IN = $v.layout_NOT_IN?.toBuilder();
      _layout_CONTAINS = $v.layout_CONTAINS;
      _layout_NOT_CONTAINS = $v.layout_NOT_CONTAINS;
      _layout_STARTS_WITH = $v.layout_STARTS_WITH;
      _layout_NOT_STARTS_WITH = $v.layout_NOT_STARTS_WITH;
      _layout_ENDS_WITH = $v.layout_ENDS_WITH;
      _layout_NOT_ENDS_WITH = $v.layout_NOT_ENDS_WITH;
      _orderNumber = $v.orderNumber;
      _orderNumber_NOT = $v.orderNumber_NOT;
      _orderNumber_IN = $v.orderNumber_IN?.toBuilder();
      _orderNumber_NOT_IN = $v.orderNumber_NOT_IN?.toBuilder();
      _orderNumber_LT = $v.orderNumber_LT;
      _orderNumber_LTE = $v.orderNumber_LTE;
      _orderNumber_GT = $v.orderNumber_GT;
      _orderNumber_GTE = $v.orderNumber_GTE;
      _subPagesAggregate = $v.subPagesAggregate?.toBuilder();
      _subPages_ALL = $v.subPages_ALL?.toBuilder();
      _subPages_NONE = $v.subPages_NONE?.toBuilder();
      _subPages_SINGLE = $v.subPages_SINGLE?.toBuilder();
      _subPages_SOME = $v.subPages_SOME?.toBuilder();
      _parentPage = $v.parentPage?.toBuilder();
      _parentPage_NOT = $v.parentPage_NOT?.toBuilder();
      _parentPageAggregate = $v.parentPageAggregate?.toBuilder();
      _belongsTo = $v.belongsTo?.toBuilder();
      _belongsTo_NOT = $v.belongsTo_NOT?.toBuilder();
      _belongsToAggregate = $v.belongsToAggregate?.toBuilder();
      _subPagesConnection_ALL = $v.subPagesConnection_ALL?.toBuilder();
      _subPagesConnection_NONE = $v.subPagesConnection_NONE?.toBuilder();
      _subPagesConnection_SINGLE = $v.subPagesConnection_SINGLE?.toBuilder();
      _subPagesConnection_SOME = $v.subPagesConnection_SOME?.toBuilder();
      _parentPageConnection = $v.parentPageConnection?.toBuilder();
      _parentPageConnection_NOT = $v.parentPageConnection_NOT?.toBuilder();
      _belongsToConnection = $v.belongsToConnection?.toBuilder();
      _belongsToConnection_NOT = $v.belongsToConnection_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageWhere;
  }

  @override
  void update(void Function(GPageWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageWhere build() => _build();

  _$GPageWhere _build() {
    _$GPageWhere _$result;
    try {
      _$result = _$v ??
          new _$GPageWhere._(
              OR: _OR?.build(),
              AND: _AND?.build(),
              id: id,
              id_NOT: id_NOT,
              id_IN: _id_IN?.build(),
              id_NOT_IN: _id_NOT_IN?.build(),
              id_CONTAINS: id_CONTAINS,
              id_NOT_CONTAINS: id_NOT_CONTAINS,
              id_STARTS_WITH: id_STARTS_WITH,
              id_NOT_STARTS_WITH: id_NOT_STARTS_WITH,
              id_ENDS_WITH: id_ENDS_WITH,
              id_NOT_ENDS_WITH: id_NOT_ENDS_WITH,
              title: title,
              title_NOT: title_NOT,
              title_IN: _title_IN?.build(),
              title_NOT_IN: _title_NOT_IN?.build(),
              title_CONTAINS: title_CONTAINS,
              title_NOT_CONTAINS: title_NOT_CONTAINS,
              title_STARTS_WITH: title_STARTS_WITH,
              title_NOT_STARTS_WITH: title_NOT_STARTS_WITH,
              title_ENDS_WITH: title_ENDS_WITH,
              title_NOT_ENDS_WITH: title_NOT_ENDS_WITH,
              description: description,
              description_NOT: description_NOT,
              description_IN: _description_IN?.build(),
              description_NOT_IN: _description_NOT_IN?.build(),
              description_CONTAINS: description_CONTAINS,
              description_NOT_CONTAINS: description_NOT_CONTAINS,
              description_STARTS_WITH: description_STARTS_WITH,
              description_NOT_STARTS_WITH: description_NOT_STARTS_WITH,
              description_ENDS_WITH: description_ENDS_WITH,
              description_NOT_ENDS_WITH: description_NOT_ENDS_WITH,
              layout: layout,
              layout_NOT: layout_NOT,
              layout_IN: _layout_IN?.build(),
              layout_NOT_IN: _layout_NOT_IN?.build(),
              layout_CONTAINS: layout_CONTAINS,
              layout_NOT_CONTAINS: layout_NOT_CONTAINS,
              layout_STARTS_WITH: layout_STARTS_WITH,
              layout_NOT_STARTS_WITH: layout_NOT_STARTS_WITH,
              layout_ENDS_WITH: layout_ENDS_WITH,
              layout_NOT_ENDS_WITH: layout_NOT_ENDS_WITH,
              orderNumber: orderNumber,
              orderNumber_NOT: orderNumber_NOT,
              orderNumber_IN: _orderNumber_IN?.build(),
              orderNumber_NOT_IN: _orderNumber_NOT_IN?.build(),
              orderNumber_LT: orderNumber_LT,
              orderNumber_LTE: orderNumber_LTE,
              orderNumber_GT: orderNumber_GT,
              orderNumber_GTE: orderNumber_GTE,
              subPagesAggregate: _subPagesAggregate?.build(),
              subPages_ALL: _subPages_ALL?.build(),
              subPages_NONE: _subPages_NONE?.build(),
              subPages_SINGLE: _subPages_SINGLE?.build(),
              subPages_SOME: _subPages_SOME?.build(),
              parentPage: _parentPage?.build(),
              parentPage_NOT: _parentPage_NOT?.build(),
              parentPageAggregate: _parentPageAggregate?.build(),
              belongsTo: _belongsTo?.build(),
              belongsTo_NOT: _belongsTo_NOT?.build(),
              belongsToAggregate: _belongsToAggregate?.build(),
              subPagesConnection_ALL: _subPagesConnection_ALL?.build(),
              subPagesConnection_NONE: _subPagesConnection_NONE?.build(),
              subPagesConnection_SINGLE: _subPagesConnection_SINGLE?.build(),
              subPagesConnection_SOME: _subPagesConnection_SOME?.build(),
              parentPageConnection: _parentPageConnection?.build(),
              parentPageConnection_NOT: _parentPageConnection_NOT?.build(),
              belongsToConnection: _belongsToConnection?.build(),
              belongsToConnection_NOT: _belongsToConnection_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'AND';
        _AND?.build();

        _$failedField = 'id_IN';
        _id_IN?.build();
        _$failedField = 'id_NOT_IN';
        _id_NOT_IN?.build();

        _$failedField = 'title_IN';
        _title_IN?.build();
        _$failedField = 'title_NOT_IN';
        _title_NOT_IN?.build();

        _$failedField = 'description_IN';
        _description_IN?.build();
        _$failedField = 'description_NOT_IN';
        _description_NOT_IN?.build();

        _$failedField = 'layout_IN';
        _layout_IN?.build();
        _$failedField = 'layout_NOT_IN';
        _layout_NOT_IN?.build();

        _$failedField = 'orderNumber_IN';
        _orderNumber_IN?.build();
        _$failedField = 'orderNumber_NOT_IN';
        _orderNumber_NOT_IN?.build();

        _$failedField = 'subPagesAggregate';
        _subPagesAggregate?.build();
        _$failedField = 'subPages_ALL';
        _subPages_ALL?.build();
        _$failedField = 'subPages_NONE';
        _subPages_NONE?.build();
        _$failedField = 'subPages_SINGLE';
        _subPages_SINGLE?.build();
        _$failedField = 'subPages_SOME';
        _subPages_SOME?.build();
        _$failedField = 'parentPage';
        _parentPage?.build();
        _$failedField = 'parentPage_NOT';
        _parentPage_NOT?.build();
        _$failedField = 'parentPageAggregate';
        _parentPageAggregate?.build();
        _$failedField = 'belongsTo';
        _belongsTo?.build();
        _$failedField = 'belongsTo_NOT';
        _belongsTo_NOT?.build();
        _$failedField = 'belongsToAggregate';
        _belongsToAggregate?.build();
        _$failedField = 'subPagesConnection_ALL';
        _subPagesConnection_ALL?.build();
        _$failedField = 'subPagesConnection_NONE';
        _subPagesConnection_NONE?.build();
        _$failedField = 'subPagesConnection_SINGLE';
        _subPagesConnection_SINGLE?.build();
        _$failedField = 'subPagesConnection_SOME';
        _subPagesConnection_SOME?.build();
        _$failedField = 'parentPageConnection';
        _parentPageConnection?.build();
        _$failedField = 'parentPageConnection_NOT';
        _parentPageConnection_NOT?.build();
        _$failedField = 'belongsToConnection';
        _belongsToConnection?.build();
        _$failedField = 'belongsToConnection_NOT';
        _belongsToConnection_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectConnectInput extends GProjectConnectInput {
  @override
  final BuiltList<GProjectPagesConnectFieldInput>? pages;
  @override
  final GProjectOwnerConnectFieldInput? owner;

  factory _$GProjectConnectInput(
          [void Function(GProjectConnectInputBuilder)? updates]) =>
      (new GProjectConnectInputBuilder()..update(updates))._build();

  _$GProjectConnectInput._({this.pages, this.owner}) : super._();

  @override
  GProjectConnectInput rebuild(
          void Function(GProjectConnectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectConnectInputBuilder toBuilder() =>
      new GProjectConnectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectConnectInput &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, pages.hashCode), owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectConnectInput')
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectConnectInputBuilder
    implements Builder<GProjectConnectInput, GProjectConnectInputBuilder> {
  _$GProjectConnectInput? _$v;

  ListBuilder<GProjectPagesConnectFieldInput>? _pages;
  ListBuilder<GProjectPagesConnectFieldInput> get pages =>
      _$this._pages ??= new ListBuilder<GProjectPagesConnectFieldInput>();
  set pages(ListBuilder<GProjectPagesConnectFieldInput>? pages) =>
      _$this._pages = pages;

  GProjectOwnerConnectFieldInputBuilder? _owner;
  GProjectOwnerConnectFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerConnectFieldInputBuilder();
  set owner(GProjectOwnerConnectFieldInputBuilder? owner) =>
      _$this._owner = owner;

  GProjectConnectInputBuilder();

  GProjectConnectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectConnectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectConnectInput;
  }

  @override
  void update(void Function(GProjectConnectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectConnectInput build() => _build();

  _$GProjectConnectInput _build() {
    _$GProjectConnectInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectConnectInput._(
              pages: _pages?.build(), owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectConnectInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectConnectOrCreateInput extends GProjectConnectOrCreateInput {
  @override
  final BuiltList<GProjectPagesConnectOrCreateFieldInput>? pages;
  @override
  final GProjectOwnerConnectOrCreateFieldInput? owner;

  factory _$GProjectConnectOrCreateInput(
          [void Function(GProjectConnectOrCreateInputBuilder)? updates]) =>
      (new GProjectConnectOrCreateInputBuilder()..update(updates))._build();

  _$GProjectConnectOrCreateInput._({this.pages, this.owner}) : super._();

  @override
  GProjectConnectOrCreateInput rebuild(
          void Function(GProjectConnectOrCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectConnectOrCreateInputBuilder toBuilder() =>
      new GProjectConnectOrCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectConnectOrCreateInput &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, pages.hashCode), owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectConnectOrCreateInput')
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectConnectOrCreateInputBuilder
    implements
        Builder<GProjectConnectOrCreateInput,
            GProjectConnectOrCreateInputBuilder> {
  _$GProjectConnectOrCreateInput? _$v;

  ListBuilder<GProjectPagesConnectOrCreateFieldInput>? _pages;
  ListBuilder<GProjectPagesConnectOrCreateFieldInput> get pages =>
      _$this._pages ??=
          new ListBuilder<GProjectPagesConnectOrCreateFieldInput>();
  set pages(ListBuilder<GProjectPagesConnectOrCreateFieldInput>? pages) =>
      _$this._pages = pages;

  GProjectOwnerConnectOrCreateFieldInputBuilder? _owner;
  GProjectOwnerConnectOrCreateFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerConnectOrCreateFieldInputBuilder();
  set owner(GProjectOwnerConnectOrCreateFieldInputBuilder? owner) =>
      _$this._owner = owner;

  GProjectConnectOrCreateInputBuilder();

  GProjectConnectOrCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectConnectOrCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectConnectOrCreateInput;
  }

  @override
  void update(void Function(GProjectConnectOrCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectConnectOrCreateInput build() => _build();

  _$GProjectConnectOrCreateInput _build() {
    _$GProjectConnectOrCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectConnectOrCreateInput._(
              pages: _pages?.build(), owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectConnectOrCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectConnectOrCreateWhere extends GProjectConnectOrCreateWhere {
  @override
  final GProjectUniqueWhere node;

  factory _$GProjectConnectOrCreateWhere(
          [void Function(GProjectConnectOrCreateWhereBuilder)? updates]) =>
      (new GProjectConnectOrCreateWhereBuilder()..update(updates))._build();

  _$GProjectConnectOrCreateWhere._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GProjectConnectOrCreateWhere', 'node');
  }

  @override
  GProjectConnectOrCreateWhere rebuild(
          void Function(GProjectConnectOrCreateWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectConnectOrCreateWhereBuilder toBuilder() =>
      new GProjectConnectOrCreateWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectConnectOrCreateWhere && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectConnectOrCreateWhere')
          ..add('node', node))
        .toString();
  }
}

class GProjectConnectOrCreateWhereBuilder
    implements
        Builder<GProjectConnectOrCreateWhere,
            GProjectConnectOrCreateWhereBuilder> {
  _$GProjectConnectOrCreateWhere? _$v;

  GProjectUniqueWhereBuilder? _node;
  GProjectUniqueWhereBuilder get node =>
      _$this._node ??= new GProjectUniqueWhereBuilder();
  set node(GProjectUniqueWhereBuilder? node) => _$this._node = node;

  GProjectConnectOrCreateWhereBuilder();

  GProjectConnectOrCreateWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectConnectOrCreateWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectConnectOrCreateWhere;
  }

  @override
  void update(void Function(GProjectConnectOrCreateWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectConnectOrCreateWhere build() => _build();

  _$GProjectConnectOrCreateWhere _build() {
    _$GProjectConnectOrCreateWhere _$result;
    try {
      _$result =
          _$v ?? new _$GProjectConnectOrCreateWhere._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectConnectOrCreateWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectConnectWhere extends GProjectConnectWhere {
  @override
  final GProjectWhere node;

  factory _$GProjectConnectWhere(
          [void Function(GProjectConnectWhereBuilder)? updates]) =>
      (new GProjectConnectWhereBuilder()..update(updates))._build();

  _$GProjectConnectWhere._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GProjectConnectWhere', 'node');
  }

  @override
  GProjectConnectWhere rebuild(
          void Function(GProjectConnectWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectConnectWhereBuilder toBuilder() =>
      new GProjectConnectWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectConnectWhere && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectConnectWhere')
          ..add('node', node))
        .toString();
  }
}

class GProjectConnectWhereBuilder
    implements Builder<GProjectConnectWhere, GProjectConnectWhereBuilder> {
  _$GProjectConnectWhere? _$v;

  GProjectWhereBuilder? _node;
  GProjectWhereBuilder get node => _$this._node ??= new GProjectWhereBuilder();
  set node(GProjectWhereBuilder? node) => _$this._node = node;

  GProjectConnectWhereBuilder();

  GProjectConnectWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectConnectWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectConnectWhere;
  }

  @override
  void update(void Function(GProjectConnectWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectConnectWhere build() => _build();

  _$GProjectConnectWhere _build() {
    _$GProjectConnectWhere _$result;
    try {
      _$result = _$v ?? new _$GProjectConnectWhere._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectConnectWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectCreateInput extends GProjectCreateInput {
  @override
  final String title;
  @override
  final String? description;
  @override
  final GProjectPagesFieldInput? pages;
  @override
  final GProjectOwnerFieldInput? owner;

  factory _$GProjectCreateInput(
          [void Function(GProjectCreateInputBuilder)? updates]) =>
      (new GProjectCreateInputBuilder()..update(updates))._build();

  _$GProjectCreateInput._(
      {required this.title, this.description, this.pages, this.owner})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        title, r'GProjectCreateInput', 'title');
  }

  @override
  GProjectCreateInput rebuild(
          void Function(GProjectCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectCreateInputBuilder toBuilder() =>
      new GProjectCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectCreateInput &&
        title == other.title &&
        description == other.description &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, title.hashCode), description.hashCode), pages.hashCode),
        owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectCreateInput')
          ..add('title', title)
          ..add('description', description)
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectCreateInputBuilder
    implements Builder<GProjectCreateInput, GProjectCreateInputBuilder> {
  _$GProjectCreateInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GProjectPagesFieldInputBuilder? _pages;
  GProjectPagesFieldInputBuilder get pages =>
      _$this._pages ??= new GProjectPagesFieldInputBuilder();
  set pages(GProjectPagesFieldInputBuilder? pages) => _$this._pages = pages;

  GProjectOwnerFieldInputBuilder? _owner;
  GProjectOwnerFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerFieldInputBuilder();
  set owner(GProjectOwnerFieldInputBuilder? owner) => _$this._owner = owner;

  GProjectCreateInputBuilder();

  GProjectCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectCreateInput;
  }

  @override
  void update(void Function(GProjectCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectCreateInput build() => _build();

  _$GProjectCreateInput _build() {
    _$GProjectCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectCreateInput._(
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GProjectCreateInput', 'title'),
              description: description,
              pages: _pages?.build(),
              owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectDeleteInput extends GProjectDeleteInput {
  @override
  final BuiltList<GProjectPagesDeleteFieldInput>? pages;
  @override
  final GProjectOwnerDeleteFieldInput? owner;

  factory _$GProjectDeleteInput(
          [void Function(GProjectDeleteInputBuilder)? updates]) =>
      (new GProjectDeleteInputBuilder()..update(updates))._build();

  _$GProjectDeleteInput._({this.pages, this.owner}) : super._();

  @override
  GProjectDeleteInput rebuild(
          void Function(GProjectDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectDeleteInputBuilder toBuilder() =>
      new GProjectDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectDeleteInput &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, pages.hashCode), owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectDeleteInput')
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectDeleteInputBuilder
    implements Builder<GProjectDeleteInput, GProjectDeleteInputBuilder> {
  _$GProjectDeleteInput? _$v;

  ListBuilder<GProjectPagesDeleteFieldInput>? _pages;
  ListBuilder<GProjectPagesDeleteFieldInput> get pages =>
      _$this._pages ??= new ListBuilder<GProjectPagesDeleteFieldInput>();
  set pages(ListBuilder<GProjectPagesDeleteFieldInput>? pages) =>
      _$this._pages = pages;

  GProjectOwnerDeleteFieldInputBuilder? _owner;
  GProjectOwnerDeleteFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerDeleteFieldInputBuilder();
  set owner(GProjectOwnerDeleteFieldInputBuilder? owner) =>
      _$this._owner = owner;

  GProjectDeleteInputBuilder();

  GProjectDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectDeleteInput;
  }

  @override
  void update(void Function(GProjectDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectDeleteInput build() => _build();

  _$GProjectDeleteInput _build() {
    _$GProjectDeleteInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectDeleteInput._(
              pages: _pages?.build(), owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectDisconnectInput extends GProjectDisconnectInput {
  @override
  final BuiltList<GProjectPagesDisconnectFieldInput>? pages;
  @override
  final GProjectOwnerDisconnectFieldInput? owner;

  factory _$GProjectDisconnectInput(
          [void Function(GProjectDisconnectInputBuilder)? updates]) =>
      (new GProjectDisconnectInputBuilder()..update(updates))._build();

  _$GProjectDisconnectInput._({this.pages, this.owner}) : super._();

  @override
  GProjectDisconnectInput rebuild(
          void Function(GProjectDisconnectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectDisconnectInputBuilder toBuilder() =>
      new GProjectDisconnectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectDisconnectInput &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, pages.hashCode), owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectDisconnectInput')
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectDisconnectInputBuilder
    implements
        Builder<GProjectDisconnectInput, GProjectDisconnectInputBuilder> {
  _$GProjectDisconnectInput? _$v;

  ListBuilder<GProjectPagesDisconnectFieldInput>? _pages;
  ListBuilder<GProjectPagesDisconnectFieldInput> get pages =>
      _$this._pages ??= new ListBuilder<GProjectPagesDisconnectFieldInput>();
  set pages(ListBuilder<GProjectPagesDisconnectFieldInput>? pages) =>
      _$this._pages = pages;

  GProjectOwnerDisconnectFieldInputBuilder? _owner;
  GProjectOwnerDisconnectFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerDisconnectFieldInputBuilder();
  set owner(GProjectOwnerDisconnectFieldInputBuilder? owner) =>
      _$this._owner = owner;

  GProjectDisconnectInputBuilder();

  GProjectDisconnectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectDisconnectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectDisconnectInput;
  }

  @override
  void update(void Function(GProjectDisconnectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectDisconnectInput build() => _build();

  _$GProjectDisconnectInput _build() {
    _$GProjectDisconnectInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectDisconnectInput._(
              pages: _pages?.build(), owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectDisconnectInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOnCreateInput extends GProjectOnCreateInput {
  @override
  final String title;
  @override
  final String? description;

  factory _$GProjectOnCreateInput(
          [void Function(GProjectOnCreateInputBuilder)? updates]) =>
      (new GProjectOnCreateInputBuilder()..update(updates))._build();

  _$GProjectOnCreateInput._({required this.title, this.description})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        title, r'GProjectOnCreateInput', 'title');
  }

  @override
  GProjectOnCreateInput rebuild(
          void Function(GProjectOnCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOnCreateInputBuilder toBuilder() =>
      new GProjectOnCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOnCreateInput &&
        title == other.title &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, title.hashCode), description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOnCreateInput')
          ..add('title', title)
          ..add('description', description))
        .toString();
  }
}

class GProjectOnCreateInputBuilder
    implements Builder<GProjectOnCreateInput, GProjectOnCreateInputBuilder> {
  _$GProjectOnCreateInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GProjectOnCreateInputBuilder();

  GProjectOnCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOnCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOnCreateInput;
  }

  @override
  void update(void Function(GProjectOnCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOnCreateInput build() => _build();

  _$GProjectOnCreateInput _build() {
    final _$result = _$v ??
        new _$GProjectOnCreateInput._(
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GProjectOnCreateInput', 'title'),
            description: description);
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOptions extends GProjectOptions {
  @override
  final BuiltList<GProjectSort>? sort;
  @override
  final int? limit;
  @override
  final int? offset;

  factory _$GProjectOptions([void Function(GProjectOptionsBuilder)? updates]) =>
      (new GProjectOptionsBuilder()..update(updates))._build();

  _$GProjectOptions._({this.sort, this.limit, this.offset}) : super._();

  @override
  GProjectOptions rebuild(void Function(GProjectOptionsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOptionsBuilder toBuilder() =>
      new GProjectOptionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOptions &&
        sort == other.sort &&
        limit == other.limit &&
        offset == other.offset;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, sort.hashCode), limit.hashCode), offset.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOptions')
          ..add('sort', sort)
          ..add('limit', limit)
          ..add('offset', offset))
        .toString();
  }
}

class GProjectOptionsBuilder
    implements Builder<GProjectOptions, GProjectOptionsBuilder> {
  _$GProjectOptions? _$v;

  ListBuilder<GProjectSort>? _sort;
  ListBuilder<GProjectSort> get sort =>
      _$this._sort ??= new ListBuilder<GProjectSort>();
  set sort(ListBuilder<GProjectSort>? sort) => _$this._sort = sort;

  int? _limit;
  int? get limit => _$this._limit;
  set limit(int? limit) => _$this._limit = limit;

  int? _offset;
  int? get offset => _$this._offset;
  set offset(int? offset) => _$this._offset = offset;

  GProjectOptionsBuilder();

  GProjectOptionsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sort = $v.sort?.toBuilder();
      _limit = $v.limit;
      _offset = $v.offset;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOptions other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOptions;
  }

  @override
  void update(void Function(GProjectOptionsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOptions build() => _build();

  _$GProjectOptions _build() {
    _$GProjectOptions _$result;
    try {
      _$result = _$v ??
          new _$GProjectOptions._(
              sort: _sort?.build(), limit: limit, offset: offset);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'sort';
        _sort?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOptions', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerAggregateInput extends GProjectOwnerAggregateInput {
  @override
  final int? count;
  @override
  final int? count_LT;
  @override
  final int? count_LTE;
  @override
  final int? count_GT;
  @override
  final int? count_GTE;
  @override
  final BuiltList<GProjectOwnerAggregateInput>? AND;
  @override
  final BuiltList<GProjectOwnerAggregateInput>? OR;
  @override
  final GProjectOwnerNodeAggregationWhereInput? node;

  factory _$GProjectOwnerAggregateInput(
          [void Function(GProjectOwnerAggregateInputBuilder)? updates]) =>
      (new GProjectOwnerAggregateInputBuilder()..update(updates))._build();

  _$GProjectOwnerAggregateInput._(
      {this.count,
      this.count_LT,
      this.count_LTE,
      this.count_GT,
      this.count_GTE,
      this.AND,
      this.OR,
      this.node})
      : super._();

  @override
  GProjectOwnerAggregateInput rebuild(
          void Function(GProjectOwnerAggregateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerAggregateInputBuilder toBuilder() =>
      new GProjectOwnerAggregateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerAggregateInput &&
        count == other.count &&
        count_LT == other.count_LT &&
        count_LTE == other.count_LTE &&
        count_GT == other.count_GT &&
        count_GTE == other.count_GTE &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, count.hashCode), count_LT.hashCode),
                            count_LTE.hashCode),
                        count_GT.hashCode),
                    count_GTE.hashCode),
                AND.hashCode),
            OR.hashCode),
        node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerAggregateInput')
          ..add('count', count)
          ..add('count_LT', count_LT)
          ..add('count_LTE', count_LTE)
          ..add('count_GT', count_GT)
          ..add('count_GTE', count_GTE)
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node))
        .toString();
  }
}

class GProjectOwnerAggregateInputBuilder
    implements
        Builder<GProjectOwnerAggregateInput,
            GProjectOwnerAggregateInputBuilder> {
  _$GProjectOwnerAggregateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  int? _count_LT;
  int? get count_LT => _$this._count_LT;
  set count_LT(int? count_LT) => _$this._count_LT = count_LT;

  int? _count_LTE;
  int? get count_LTE => _$this._count_LTE;
  set count_LTE(int? count_LTE) => _$this._count_LTE = count_LTE;

  int? _count_GT;
  int? get count_GT => _$this._count_GT;
  set count_GT(int? count_GT) => _$this._count_GT = count_GT;

  int? _count_GTE;
  int? get count_GTE => _$this._count_GTE;
  set count_GTE(int? count_GTE) => _$this._count_GTE = count_GTE;

  ListBuilder<GProjectOwnerAggregateInput>? _AND;
  ListBuilder<GProjectOwnerAggregateInput> get AND =>
      _$this._AND ??= new ListBuilder<GProjectOwnerAggregateInput>();
  set AND(ListBuilder<GProjectOwnerAggregateInput>? AND) => _$this._AND = AND;

  ListBuilder<GProjectOwnerAggregateInput>? _OR;
  ListBuilder<GProjectOwnerAggregateInput> get OR =>
      _$this._OR ??= new ListBuilder<GProjectOwnerAggregateInput>();
  set OR(ListBuilder<GProjectOwnerAggregateInput>? OR) => _$this._OR = OR;

  GProjectOwnerNodeAggregationWhereInputBuilder? _node;
  GProjectOwnerNodeAggregationWhereInputBuilder get node =>
      _$this._node ??= new GProjectOwnerNodeAggregationWhereInputBuilder();
  set node(GProjectOwnerNodeAggregationWhereInputBuilder? node) =>
      _$this._node = node;

  GProjectOwnerAggregateInputBuilder();

  GProjectOwnerAggregateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _count_LT = $v.count_LT;
      _count_LTE = $v.count_LTE;
      _count_GT = $v.count_GT;
      _count_GTE = $v.count_GTE;
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerAggregateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerAggregateInput;
  }

  @override
  void update(void Function(GProjectOwnerAggregateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerAggregateInput build() => _build();

  _$GProjectOwnerAggregateInput _build() {
    _$GProjectOwnerAggregateInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerAggregateInput._(
              count: count,
              count_LT: count_LT,
              count_LTE: count_LTE,
              count_GT: count_GT,
              count_GTE: count_GTE,
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerAggregateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerConnectFieldInput extends GProjectOwnerConnectFieldInput {
  @override
  final GUserConnectWhere? where;
  @override
  final GUserConnectInput? connect;

  factory _$GProjectOwnerConnectFieldInput(
          [void Function(GProjectOwnerConnectFieldInputBuilder)? updates]) =>
      (new GProjectOwnerConnectFieldInputBuilder()..update(updates))._build();

  _$GProjectOwnerConnectFieldInput._({this.where, this.connect}) : super._();

  @override
  GProjectOwnerConnectFieldInput rebuild(
          void Function(GProjectOwnerConnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerConnectFieldInputBuilder toBuilder() =>
      new GProjectOwnerConnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerConnectFieldInput &&
        where == other.where &&
        connect == other.connect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), connect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerConnectFieldInput')
          ..add('where', where)
          ..add('connect', connect))
        .toString();
  }
}

class GProjectOwnerConnectFieldInputBuilder
    implements
        Builder<GProjectOwnerConnectFieldInput,
            GProjectOwnerConnectFieldInputBuilder> {
  _$GProjectOwnerConnectFieldInput? _$v;

  GUserConnectWhereBuilder? _where;
  GUserConnectWhereBuilder get where =>
      _$this._where ??= new GUserConnectWhereBuilder();
  set where(GUserConnectWhereBuilder? where) => _$this._where = where;

  GUserConnectInputBuilder? _connect;
  GUserConnectInputBuilder get connect =>
      _$this._connect ??= new GUserConnectInputBuilder();
  set connect(GUserConnectInputBuilder? connect) => _$this._connect = connect;

  GProjectOwnerConnectFieldInputBuilder();

  GProjectOwnerConnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerConnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerConnectFieldInput;
  }

  @override
  void update(void Function(GProjectOwnerConnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerConnectFieldInput build() => _build();

  _$GProjectOwnerConnectFieldInput _build() {
    _$GProjectOwnerConnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerConnectFieldInput._(
              where: _where?.build(), connect: _connect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'connect';
        _connect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerConnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerConnectionSort extends GProjectOwnerConnectionSort {
  @override
  final GUserSort? node;

  factory _$GProjectOwnerConnectionSort(
          [void Function(GProjectOwnerConnectionSortBuilder)? updates]) =>
      (new GProjectOwnerConnectionSortBuilder()..update(updates))._build();

  _$GProjectOwnerConnectionSort._({this.node}) : super._();

  @override
  GProjectOwnerConnectionSort rebuild(
          void Function(GProjectOwnerConnectionSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerConnectionSortBuilder toBuilder() =>
      new GProjectOwnerConnectionSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerConnectionSort && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerConnectionSort')
          ..add('node', node))
        .toString();
  }
}

class GProjectOwnerConnectionSortBuilder
    implements
        Builder<GProjectOwnerConnectionSort,
            GProjectOwnerConnectionSortBuilder> {
  _$GProjectOwnerConnectionSort? _$v;

  GUserSortBuilder? _node;
  GUserSortBuilder get node => _$this._node ??= new GUserSortBuilder();
  set node(GUserSortBuilder? node) => _$this._node = node;

  GProjectOwnerConnectionSortBuilder();

  GProjectOwnerConnectionSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerConnectionSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerConnectionSort;
  }

  @override
  void update(void Function(GProjectOwnerConnectionSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerConnectionSort build() => _build();

  _$GProjectOwnerConnectionSort _build() {
    _$GProjectOwnerConnectionSort _$result;
    try {
      _$result =
          _$v ?? new _$GProjectOwnerConnectionSort._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerConnectionSort', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerConnectionWhere extends GProjectOwnerConnectionWhere {
  @override
  final BuiltList<GProjectOwnerConnectionWhere>? AND;
  @override
  final BuiltList<GProjectOwnerConnectionWhere>? OR;
  @override
  final GUserWhere? node;
  @override
  final GUserWhere? node_NOT;

  factory _$GProjectOwnerConnectionWhere(
          [void Function(GProjectOwnerConnectionWhereBuilder)? updates]) =>
      (new GProjectOwnerConnectionWhereBuilder()..update(updates))._build();

  _$GProjectOwnerConnectionWhere._(
      {this.AND, this.OR, this.node, this.node_NOT})
      : super._();

  @override
  GProjectOwnerConnectionWhere rebuild(
          void Function(GProjectOwnerConnectionWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerConnectionWhereBuilder toBuilder() =>
      new GProjectOwnerConnectionWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerConnectionWhere &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node &&
        node_NOT == other.node_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), node.hashCode),
        node_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerConnectionWhere')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node)
          ..add('node_NOT', node_NOT))
        .toString();
  }
}

class GProjectOwnerConnectionWhereBuilder
    implements
        Builder<GProjectOwnerConnectionWhere,
            GProjectOwnerConnectionWhereBuilder> {
  _$GProjectOwnerConnectionWhere? _$v;

  ListBuilder<GProjectOwnerConnectionWhere>? _AND;
  ListBuilder<GProjectOwnerConnectionWhere> get AND =>
      _$this._AND ??= new ListBuilder<GProjectOwnerConnectionWhere>();
  set AND(ListBuilder<GProjectOwnerConnectionWhere>? AND) => _$this._AND = AND;

  ListBuilder<GProjectOwnerConnectionWhere>? _OR;
  ListBuilder<GProjectOwnerConnectionWhere> get OR =>
      _$this._OR ??= new ListBuilder<GProjectOwnerConnectionWhere>();
  set OR(ListBuilder<GProjectOwnerConnectionWhere>? OR) => _$this._OR = OR;

  GUserWhereBuilder? _node;
  GUserWhereBuilder get node => _$this._node ??= new GUserWhereBuilder();
  set node(GUserWhereBuilder? node) => _$this._node = node;

  GUserWhereBuilder? _node_NOT;
  GUserWhereBuilder get node_NOT =>
      _$this._node_NOT ??= new GUserWhereBuilder();
  set node_NOT(GUserWhereBuilder? node_NOT) => _$this._node_NOT = node_NOT;

  GProjectOwnerConnectionWhereBuilder();

  GProjectOwnerConnectionWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _node_NOT = $v.node_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerConnectionWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerConnectionWhere;
  }

  @override
  void update(void Function(GProjectOwnerConnectionWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerConnectionWhere build() => _build();

  _$GProjectOwnerConnectionWhere _build() {
    _$GProjectOwnerConnectionWhere _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerConnectionWhere._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build(),
              node_NOT: _node_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
        _$failedField = 'node_NOT';
        _node_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerConnectionWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerConnectOrCreateFieldInput
    extends GProjectOwnerConnectOrCreateFieldInput {
  @override
  final GUserConnectOrCreateWhere where;
  @override
  final GProjectOwnerConnectOrCreateFieldInputOnCreate onCreate;

  factory _$GProjectOwnerConnectOrCreateFieldInput(
          [void Function(GProjectOwnerConnectOrCreateFieldInputBuilder)?
              updates]) =>
      (new GProjectOwnerConnectOrCreateFieldInputBuilder()..update(updates))
          ._build();

  _$GProjectOwnerConnectOrCreateFieldInput._(
      {required this.where, required this.onCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GProjectOwnerConnectOrCreateFieldInput', 'where');
    BuiltValueNullFieldError.checkNotNull(
        onCreate, r'GProjectOwnerConnectOrCreateFieldInput', 'onCreate');
  }

  @override
  GProjectOwnerConnectOrCreateFieldInput rebuild(
          void Function(GProjectOwnerConnectOrCreateFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerConnectOrCreateFieldInputBuilder toBuilder() =>
      new GProjectOwnerConnectOrCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerConnectOrCreateFieldInput &&
        where == other.where &&
        onCreate == other.onCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), onCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProjectOwnerConnectOrCreateFieldInput')
          ..add('where', where)
          ..add('onCreate', onCreate))
        .toString();
  }
}

class GProjectOwnerConnectOrCreateFieldInputBuilder
    implements
        Builder<GProjectOwnerConnectOrCreateFieldInput,
            GProjectOwnerConnectOrCreateFieldInputBuilder> {
  _$GProjectOwnerConnectOrCreateFieldInput? _$v;

  GUserConnectOrCreateWhereBuilder? _where;
  GUserConnectOrCreateWhereBuilder get where =>
      _$this._where ??= new GUserConnectOrCreateWhereBuilder();
  set where(GUserConnectOrCreateWhereBuilder? where) => _$this._where = where;

  GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder? _onCreate;
  GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder get onCreate =>
      _$this._onCreate ??=
          new GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder();
  set onCreate(
          GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder? onCreate) =>
      _$this._onCreate = onCreate;

  GProjectOwnerConnectOrCreateFieldInputBuilder();

  GProjectOwnerConnectOrCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where.toBuilder();
      _onCreate = $v.onCreate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerConnectOrCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerConnectOrCreateFieldInput;
  }

  @override
  void update(
      void Function(GProjectOwnerConnectOrCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerConnectOrCreateFieldInput build() => _build();

  _$GProjectOwnerConnectOrCreateFieldInput _build() {
    _$GProjectOwnerConnectOrCreateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerConnectOrCreateFieldInput._(
              where: where.build(), onCreate: onCreate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        where.build();
        _$failedField = 'onCreate';
        onCreate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerConnectOrCreateFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerConnectOrCreateFieldInputOnCreate
    extends GProjectOwnerConnectOrCreateFieldInputOnCreate {
  @override
  final GUserOnCreateInput node;

  factory _$GProjectOwnerConnectOrCreateFieldInputOnCreate(
          [void Function(GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder)?
              updates]) =>
      (new GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder()
            ..update(updates))
          ._build();

  _$GProjectOwnerConnectOrCreateFieldInputOnCreate._({required this.node})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GProjectOwnerConnectOrCreateFieldInputOnCreate', 'node');
  }

  @override
  GProjectOwnerConnectOrCreateFieldInputOnCreate rebuild(
          void Function(GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder toBuilder() =>
      new GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerConnectOrCreateFieldInputOnCreate &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProjectOwnerConnectOrCreateFieldInputOnCreate')
          ..add('node', node))
        .toString();
  }
}

class GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder
    implements
        Builder<GProjectOwnerConnectOrCreateFieldInputOnCreate,
            GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder> {
  _$GProjectOwnerConnectOrCreateFieldInputOnCreate? _$v;

  GUserOnCreateInputBuilder? _node;
  GUserOnCreateInputBuilder get node =>
      _$this._node ??= new GUserOnCreateInputBuilder();
  set node(GUserOnCreateInputBuilder? node) => _$this._node = node;

  GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder();

  GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerConnectOrCreateFieldInputOnCreate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerConnectOrCreateFieldInputOnCreate;
  }

  @override
  void update(
      void Function(GProjectOwnerConnectOrCreateFieldInputOnCreateBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerConnectOrCreateFieldInputOnCreate build() => _build();

  _$GProjectOwnerConnectOrCreateFieldInputOnCreate _build() {
    _$GProjectOwnerConnectOrCreateFieldInputOnCreate _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerConnectOrCreateFieldInputOnCreate._(
              node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerConnectOrCreateFieldInputOnCreate',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerCreateFieldInput extends GProjectOwnerCreateFieldInput {
  @override
  final GUserCreateInput node;

  factory _$GProjectOwnerCreateFieldInput(
          [void Function(GProjectOwnerCreateFieldInputBuilder)? updates]) =>
      (new GProjectOwnerCreateFieldInputBuilder()..update(updates))._build();

  _$GProjectOwnerCreateFieldInput._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GProjectOwnerCreateFieldInput', 'node');
  }

  @override
  GProjectOwnerCreateFieldInput rebuild(
          void Function(GProjectOwnerCreateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerCreateFieldInputBuilder toBuilder() =>
      new GProjectOwnerCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerCreateFieldInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerCreateFieldInput')
          ..add('node', node))
        .toString();
  }
}

class GProjectOwnerCreateFieldInputBuilder
    implements
        Builder<GProjectOwnerCreateFieldInput,
            GProjectOwnerCreateFieldInputBuilder> {
  _$GProjectOwnerCreateFieldInput? _$v;

  GUserCreateInputBuilder? _node;
  GUserCreateInputBuilder get node =>
      _$this._node ??= new GUserCreateInputBuilder();
  set node(GUserCreateInputBuilder? node) => _$this._node = node;

  GProjectOwnerCreateFieldInputBuilder();

  GProjectOwnerCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerCreateFieldInput;
  }

  @override
  void update(void Function(GProjectOwnerCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerCreateFieldInput build() => _build();

  _$GProjectOwnerCreateFieldInput _build() {
    _$GProjectOwnerCreateFieldInput _$result;
    try {
      _$result =
          _$v ?? new _$GProjectOwnerCreateFieldInput._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerCreateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerDeleteFieldInput extends GProjectOwnerDeleteFieldInput {
  @override
  final GProjectOwnerConnectionWhere? where;
  @override
  final GUserDeleteInput? delete;

  factory _$GProjectOwnerDeleteFieldInput(
          [void Function(GProjectOwnerDeleteFieldInputBuilder)? updates]) =>
      (new GProjectOwnerDeleteFieldInputBuilder()..update(updates))._build();

  _$GProjectOwnerDeleteFieldInput._({this.where, this.delete}) : super._();

  @override
  GProjectOwnerDeleteFieldInput rebuild(
          void Function(GProjectOwnerDeleteFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerDeleteFieldInputBuilder toBuilder() =>
      new GProjectOwnerDeleteFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerDeleteFieldInput &&
        where == other.where &&
        delete == other.delete;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), delete.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerDeleteFieldInput')
          ..add('where', where)
          ..add('delete', delete))
        .toString();
  }
}

class GProjectOwnerDeleteFieldInputBuilder
    implements
        Builder<GProjectOwnerDeleteFieldInput,
            GProjectOwnerDeleteFieldInputBuilder> {
  _$GProjectOwnerDeleteFieldInput? _$v;

  GProjectOwnerConnectionWhereBuilder? _where;
  GProjectOwnerConnectionWhereBuilder get where =>
      _$this._where ??= new GProjectOwnerConnectionWhereBuilder();
  set where(GProjectOwnerConnectionWhereBuilder? where) =>
      _$this._where = where;

  GUserDeleteInputBuilder? _delete;
  GUserDeleteInputBuilder get delete =>
      _$this._delete ??= new GUserDeleteInputBuilder();
  set delete(GUserDeleteInputBuilder? delete) => _$this._delete = delete;

  GProjectOwnerDeleteFieldInputBuilder();

  GProjectOwnerDeleteFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerDeleteFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerDeleteFieldInput;
  }

  @override
  void update(void Function(GProjectOwnerDeleteFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerDeleteFieldInput build() => _build();

  _$GProjectOwnerDeleteFieldInput _build() {
    _$GProjectOwnerDeleteFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerDeleteFieldInput._(
              where: _where?.build(), delete: _delete?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'delete';
        _delete?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerDeleteFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerDisconnectFieldInput
    extends GProjectOwnerDisconnectFieldInput {
  @override
  final GProjectOwnerConnectionWhere? where;
  @override
  final GUserDisconnectInput? disconnect;

  factory _$GProjectOwnerDisconnectFieldInput(
          [void Function(GProjectOwnerDisconnectFieldInputBuilder)? updates]) =>
      (new GProjectOwnerDisconnectFieldInputBuilder()..update(updates))
          ._build();

  _$GProjectOwnerDisconnectFieldInput._({this.where, this.disconnect})
      : super._();

  @override
  GProjectOwnerDisconnectFieldInput rebuild(
          void Function(GProjectOwnerDisconnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerDisconnectFieldInputBuilder toBuilder() =>
      new GProjectOwnerDisconnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerDisconnectFieldInput &&
        where == other.where &&
        disconnect == other.disconnect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), disconnect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerDisconnectFieldInput')
          ..add('where', where)
          ..add('disconnect', disconnect))
        .toString();
  }
}

class GProjectOwnerDisconnectFieldInputBuilder
    implements
        Builder<GProjectOwnerDisconnectFieldInput,
            GProjectOwnerDisconnectFieldInputBuilder> {
  _$GProjectOwnerDisconnectFieldInput? _$v;

  GProjectOwnerConnectionWhereBuilder? _where;
  GProjectOwnerConnectionWhereBuilder get where =>
      _$this._where ??= new GProjectOwnerConnectionWhereBuilder();
  set where(GProjectOwnerConnectionWhereBuilder? where) =>
      _$this._where = where;

  GUserDisconnectInputBuilder? _disconnect;
  GUserDisconnectInputBuilder get disconnect =>
      _$this._disconnect ??= new GUserDisconnectInputBuilder();
  set disconnect(GUserDisconnectInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GProjectOwnerDisconnectFieldInputBuilder();

  GProjectOwnerDisconnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerDisconnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerDisconnectFieldInput;
  }

  @override
  void update(
      void Function(GProjectOwnerDisconnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerDisconnectFieldInput build() => _build();

  _$GProjectOwnerDisconnectFieldInput _build() {
    _$GProjectOwnerDisconnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerDisconnectFieldInput._(
              where: _where?.build(), disconnect: _disconnect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerDisconnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerFieldInput extends GProjectOwnerFieldInput {
  @override
  final GProjectOwnerCreateFieldInput? create;
  @override
  final GProjectOwnerConnectFieldInput? connect;
  @override
  final GProjectOwnerConnectOrCreateFieldInput? connectOrCreate;

  factory _$GProjectOwnerFieldInput(
          [void Function(GProjectOwnerFieldInputBuilder)? updates]) =>
      (new GProjectOwnerFieldInputBuilder()..update(updates))._build();

  _$GProjectOwnerFieldInput._({this.create, this.connect, this.connectOrCreate})
      : super._();

  @override
  GProjectOwnerFieldInput rebuild(
          void Function(GProjectOwnerFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerFieldInputBuilder toBuilder() =>
      new GProjectOwnerFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerFieldInput &&
        create == other.create &&
        connect == other.connect &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, create.hashCode), connect.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerFieldInput')
          ..add('create', create)
          ..add('connect', connect)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GProjectOwnerFieldInputBuilder
    implements
        Builder<GProjectOwnerFieldInput, GProjectOwnerFieldInputBuilder> {
  _$GProjectOwnerFieldInput? _$v;

  GProjectOwnerCreateFieldInputBuilder? _create;
  GProjectOwnerCreateFieldInputBuilder get create =>
      _$this._create ??= new GProjectOwnerCreateFieldInputBuilder();
  set create(GProjectOwnerCreateFieldInputBuilder? create) =>
      _$this._create = create;

  GProjectOwnerConnectFieldInputBuilder? _connect;
  GProjectOwnerConnectFieldInputBuilder get connect =>
      _$this._connect ??= new GProjectOwnerConnectFieldInputBuilder();
  set connect(GProjectOwnerConnectFieldInputBuilder? connect) =>
      _$this._connect = connect;

  GProjectOwnerConnectOrCreateFieldInputBuilder? _connectOrCreate;
  GProjectOwnerConnectOrCreateFieldInputBuilder get connectOrCreate =>
      _$this._connectOrCreate ??=
          new GProjectOwnerConnectOrCreateFieldInputBuilder();
  set connectOrCreate(
          GProjectOwnerConnectOrCreateFieldInputBuilder? connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GProjectOwnerFieldInputBuilder();

  GProjectOwnerFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _create = $v.create?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerFieldInput;
  }

  @override
  void update(void Function(GProjectOwnerFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerFieldInput build() => _build();

  _$GProjectOwnerFieldInput _build() {
    _$GProjectOwnerFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerFieldInput._(
              create: _create?.build(),
              connect: _connect?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerNodeAggregationWhereInput
    extends GProjectOwnerNodeAggregationWhereInput {
  @override
  final BuiltList<GProjectOwnerNodeAggregationWhereInput>? AND;
  @override
  final BuiltList<GProjectOwnerNodeAggregationWhereInput>? OR;
  @override
  final String? id_EQUAL;
  @override
  final String? username_EQUAL;
  @override
  final double? username_AVERAGE_EQUAL;
  @override
  final int? username_LONGEST_EQUAL;
  @override
  final int? username_SHORTEST_EQUAL;
  @override
  final int? username_GT;
  @override
  final double? username_AVERAGE_GT;
  @override
  final int? username_LONGEST_GT;
  @override
  final int? username_SHORTEST_GT;
  @override
  final int? username_GTE;
  @override
  final double? username_AVERAGE_GTE;
  @override
  final int? username_LONGEST_GTE;
  @override
  final int? username_SHORTEST_GTE;
  @override
  final int? username_LT;
  @override
  final double? username_AVERAGE_LT;
  @override
  final int? username_LONGEST_LT;
  @override
  final int? username_SHORTEST_LT;
  @override
  final int? username_LTE;
  @override
  final double? username_AVERAGE_LTE;
  @override
  final int? username_LONGEST_LTE;
  @override
  final int? username_SHORTEST_LTE;
  @override
  final String? displayName_EQUAL;
  @override
  final double? displayName_AVERAGE_EQUAL;
  @override
  final int? displayName_LONGEST_EQUAL;
  @override
  final int? displayName_SHORTEST_EQUAL;
  @override
  final int? displayName_GT;
  @override
  final double? displayName_AVERAGE_GT;
  @override
  final int? displayName_LONGEST_GT;
  @override
  final int? displayName_SHORTEST_GT;
  @override
  final int? displayName_GTE;
  @override
  final double? displayName_AVERAGE_GTE;
  @override
  final int? displayName_LONGEST_GTE;
  @override
  final int? displayName_SHORTEST_GTE;
  @override
  final int? displayName_LT;
  @override
  final double? displayName_AVERAGE_LT;
  @override
  final int? displayName_LONGEST_LT;
  @override
  final int? displayName_SHORTEST_LT;
  @override
  final int? displayName_LTE;
  @override
  final double? displayName_AVERAGE_LTE;
  @override
  final int? displayName_LONGEST_LTE;
  @override
  final int? displayName_SHORTEST_LTE;

  factory _$GProjectOwnerNodeAggregationWhereInput(
          [void Function(GProjectOwnerNodeAggregationWhereInputBuilder)?
              updates]) =>
      (new GProjectOwnerNodeAggregationWhereInputBuilder()..update(updates))
          ._build();

  _$GProjectOwnerNodeAggregationWhereInput._(
      {this.AND,
      this.OR,
      this.id_EQUAL,
      this.username_EQUAL,
      this.username_AVERAGE_EQUAL,
      this.username_LONGEST_EQUAL,
      this.username_SHORTEST_EQUAL,
      this.username_GT,
      this.username_AVERAGE_GT,
      this.username_LONGEST_GT,
      this.username_SHORTEST_GT,
      this.username_GTE,
      this.username_AVERAGE_GTE,
      this.username_LONGEST_GTE,
      this.username_SHORTEST_GTE,
      this.username_LT,
      this.username_AVERAGE_LT,
      this.username_LONGEST_LT,
      this.username_SHORTEST_LT,
      this.username_LTE,
      this.username_AVERAGE_LTE,
      this.username_LONGEST_LTE,
      this.username_SHORTEST_LTE,
      this.displayName_EQUAL,
      this.displayName_AVERAGE_EQUAL,
      this.displayName_LONGEST_EQUAL,
      this.displayName_SHORTEST_EQUAL,
      this.displayName_GT,
      this.displayName_AVERAGE_GT,
      this.displayName_LONGEST_GT,
      this.displayName_SHORTEST_GT,
      this.displayName_GTE,
      this.displayName_AVERAGE_GTE,
      this.displayName_LONGEST_GTE,
      this.displayName_SHORTEST_GTE,
      this.displayName_LT,
      this.displayName_AVERAGE_LT,
      this.displayName_LONGEST_LT,
      this.displayName_SHORTEST_LT,
      this.displayName_LTE,
      this.displayName_AVERAGE_LTE,
      this.displayName_LONGEST_LTE,
      this.displayName_SHORTEST_LTE})
      : super._();

  @override
  GProjectOwnerNodeAggregationWhereInput rebuild(
          void Function(GProjectOwnerNodeAggregationWhereInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerNodeAggregationWhereInputBuilder toBuilder() =>
      new GProjectOwnerNodeAggregationWhereInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerNodeAggregationWhereInput &&
        AND == other.AND &&
        OR == other.OR &&
        id_EQUAL == other.id_EQUAL &&
        username_EQUAL == other.username_EQUAL &&
        username_AVERAGE_EQUAL == other.username_AVERAGE_EQUAL &&
        username_LONGEST_EQUAL == other.username_LONGEST_EQUAL &&
        username_SHORTEST_EQUAL == other.username_SHORTEST_EQUAL &&
        username_GT == other.username_GT &&
        username_AVERAGE_GT == other.username_AVERAGE_GT &&
        username_LONGEST_GT == other.username_LONGEST_GT &&
        username_SHORTEST_GT == other.username_SHORTEST_GT &&
        username_GTE == other.username_GTE &&
        username_AVERAGE_GTE == other.username_AVERAGE_GTE &&
        username_LONGEST_GTE == other.username_LONGEST_GTE &&
        username_SHORTEST_GTE == other.username_SHORTEST_GTE &&
        username_LT == other.username_LT &&
        username_AVERAGE_LT == other.username_AVERAGE_LT &&
        username_LONGEST_LT == other.username_LONGEST_LT &&
        username_SHORTEST_LT == other.username_SHORTEST_LT &&
        username_LTE == other.username_LTE &&
        username_AVERAGE_LTE == other.username_AVERAGE_LTE &&
        username_LONGEST_LTE == other.username_LONGEST_LTE &&
        username_SHORTEST_LTE == other.username_SHORTEST_LTE &&
        displayName_EQUAL == other.displayName_EQUAL &&
        displayName_AVERAGE_EQUAL == other.displayName_AVERAGE_EQUAL &&
        displayName_LONGEST_EQUAL == other.displayName_LONGEST_EQUAL &&
        displayName_SHORTEST_EQUAL == other.displayName_SHORTEST_EQUAL &&
        displayName_GT == other.displayName_GT &&
        displayName_AVERAGE_GT == other.displayName_AVERAGE_GT &&
        displayName_LONGEST_GT == other.displayName_LONGEST_GT &&
        displayName_SHORTEST_GT == other.displayName_SHORTEST_GT &&
        displayName_GTE == other.displayName_GTE &&
        displayName_AVERAGE_GTE == other.displayName_AVERAGE_GTE &&
        displayName_LONGEST_GTE == other.displayName_LONGEST_GTE &&
        displayName_SHORTEST_GTE == other.displayName_SHORTEST_GTE &&
        displayName_LT == other.displayName_LT &&
        displayName_AVERAGE_LT == other.displayName_AVERAGE_LT &&
        displayName_LONGEST_LT == other.displayName_LONGEST_LT &&
        displayName_SHORTEST_LT == other.displayName_SHORTEST_LT &&
        displayName_LTE == other.displayName_LTE &&
        displayName_AVERAGE_LTE == other.displayName_AVERAGE_LTE &&
        displayName_LONGEST_LTE == other.displayName_LONGEST_LTE &&
        displayName_SHORTEST_LTE == other.displayName_SHORTEST_LTE;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), id_EQUAL.hashCode), username_EQUAL.hashCode), username_AVERAGE_EQUAL.hashCode), username_LONGEST_EQUAL.hashCode), username_SHORTEST_EQUAL.hashCode), username_GT.hashCode), username_AVERAGE_GT.hashCode), username_LONGEST_GT.hashCode), username_SHORTEST_GT.hashCode), username_GTE.hashCode), username_AVERAGE_GTE.hashCode), username_LONGEST_GTE.hashCode), username_SHORTEST_GTE.hashCode), username_LT.hashCode), username_AVERAGE_LT.hashCode), username_LONGEST_LT.hashCode), username_SHORTEST_LT.hashCode), username_LTE.hashCode), username_AVERAGE_LTE.hashCode), username_LONGEST_LTE.hashCode), username_SHORTEST_LTE.hashCode), displayName_EQUAL.hashCode),
                                                                                displayName_AVERAGE_EQUAL.hashCode),
                                                                            displayName_LONGEST_EQUAL.hashCode),
                                                                        displayName_SHORTEST_EQUAL.hashCode),
                                                                    displayName_GT.hashCode),
                                                                displayName_AVERAGE_GT.hashCode),
                                                            displayName_LONGEST_GT.hashCode),
                                                        displayName_SHORTEST_GT.hashCode),
                                                    displayName_GTE.hashCode),
                                                displayName_AVERAGE_GTE.hashCode),
                                            displayName_LONGEST_GTE.hashCode),
                                        displayName_SHORTEST_GTE.hashCode),
                                    displayName_LT.hashCode),
                                displayName_AVERAGE_LT.hashCode),
                            displayName_LONGEST_LT.hashCode),
                        displayName_SHORTEST_LT.hashCode),
                    displayName_LTE.hashCode),
                displayName_AVERAGE_LTE.hashCode),
            displayName_LONGEST_LTE.hashCode),
        displayName_SHORTEST_LTE.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProjectOwnerNodeAggregationWhereInput')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('id_EQUAL', id_EQUAL)
          ..add('username_EQUAL', username_EQUAL)
          ..add('username_AVERAGE_EQUAL', username_AVERAGE_EQUAL)
          ..add('username_LONGEST_EQUAL', username_LONGEST_EQUAL)
          ..add('username_SHORTEST_EQUAL', username_SHORTEST_EQUAL)
          ..add('username_GT', username_GT)
          ..add('username_AVERAGE_GT', username_AVERAGE_GT)
          ..add('username_LONGEST_GT', username_LONGEST_GT)
          ..add('username_SHORTEST_GT', username_SHORTEST_GT)
          ..add('username_GTE', username_GTE)
          ..add('username_AVERAGE_GTE', username_AVERAGE_GTE)
          ..add('username_LONGEST_GTE', username_LONGEST_GTE)
          ..add('username_SHORTEST_GTE', username_SHORTEST_GTE)
          ..add('username_LT', username_LT)
          ..add('username_AVERAGE_LT', username_AVERAGE_LT)
          ..add('username_LONGEST_LT', username_LONGEST_LT)
          ..add('username_SHORTEST_LT', username_SHORTEST_LT)
          ..add('username_LTE', username_LTE)
          ..add('username_AVERAGE_LTE', username_AVERAGE_LTE)
          ..add('username_LONGEST_LTE', username_LONGEST_LTE)
          ..add('username_SHORTEST_LTE', username_SHORTEST_LTE)
          ..add('displayName_EQUAL', displayName_EQUAL)
          ..add('displayName_AVERAGE_EQUAL', displayName_AVERAGE_EQUAL)
          ..add('displayName_LONGEST_EQUAL', displayName_LONGEST_EQUAL)
          ..add('displayName_SHORTEST_EQUAL', displayName_SHORTEST_EQUAL)
          ..add('displayName_GT', displayName_GT)
          ..add('displayName_AVERAGE_GT', displayName_AVERAGE_GT)
          ..add('displayName_LONGEST_GT', displayName_LONGEST_GT)
          ..add('displayName_SHORTEST_GT', displayName_SHORTEST_GT)
          ..add('displayName_GTE', displayName_GTE)
          ..add('displayName_AVERAGE_GTE', displayName_AVERAGE_GTE)
          ..add('displayName_LONGEST_GTE', displayName_LONGEST_GTE)
          ..add('displayName_SHORTEST_GTE', displayName_SHORTEST_GTE)
          ..add('displayName_LT', displayName_LT)
          ..add('displayName_AVERAGE_LT', displayName_AVERAGE_LT)
          ..add('displayName_LONGEST_LT', displayName_LONGEST_LT)
          ..add('displayName_SHORTEST_LT', displayName_SHORTEST_LT)
          ..add('displayName_LTE', displayName_LTE)
          ..add('displayName_AVERAGE_LTE', displayName_AVERAGE_LTE)
          ..add('displayName_LONGEST_LTE', displayName_LONGEST_LTE)
          ..add('displayName_SHORTEST_LTE', displayName_SHORTEST_LTE))
        .toString();
  }
}

class GProjectOwnerNodeAggregationWhereInputBuilder
    implements
        Builder<GProjectOwnerNodeAggregationWhereInput,
            GProjectOwnerNodeAggregationWhereInputBuilder> {
  _$GProjectOwnerNodeAggregationWhereInput? _$v;

  ListBuilder<GProjectOwnerNodeAggregationWhereInput>? _AND;
  ListBuilder<GProjectOwnerNodeAggregationWhereInput> get AND =>
      _$this._AND ??= new ListBuilder<GProjectOwnerNodeAggregationWhereInput>();
  set AND(ListBuilder<GProjectOwnerNodeAggregationWhereInput>? AND) =>
      _$this._AND = AND;

  ListBuilder<GProjectOwnerNodeAggregationWhereInput>? _OR;
  ListBuilder<GProjectOwnerNodeAggregationWhereInput> get OR =>
      _$this._OR ??= new ListBuilder<GProjectOwnerNodeAggregationWhereInput>();
  set OR(ListBuilder<GProjectOwnerNodeAggregationWhereInput>? OR) =>
      _$this._OR = OR;

  String? _id_EQUAL;
  String? get id_EQUAL => _$this._id_EQUAL;
  set id_EQUAL(String? id_EQUAL) => _$this._id_EQUAL = id_EQUAL;

  String? _username_EQUAL;
  String? get username_EQUAL => _$this._username_EQUAL;
  set username_EQUAL(String? username_EQUAL) =>
      _$this._username_EQUAL = username_EQUAL;

  double? _username_AVERAGE_EQUAL;
  double? get username_AVERAGE_EQUAL => _$this._username_AVERAGE_EQUAL;
  set username_AVERAGE_EQUAL(double? username_AVERAGE_EQUAL) =>
      _$this._username_AVERAGE_EQUAL = username_AVERAGE_EQUAL;

  int? _username_LONGEST_EQUAL;
  int? get username_LONGEST_EQUAL => _$this._username_LONGEST_EQUAL;
  set username_LONGEST_EQUAL(int? username_LONGEST_EQUAL) =>
      _$this._username_LONGEST_EQUAL = username_LONGEST_EQUAL;

  int? _username_SHORTEST_EQUAL;
  int? get username_SHORTEST_EQUAL => _$this._username_SHORTEST_EQUAL;
  set username_SHORTEST_EQUAL(int? username_SHORTEST_EQUAL) =>
      _$this._username_SHORTEST_EQUAL = username_SHORTEST_EQUAL;

  int? _username_GT;
  int? get username_GT => _$this._username_GT;
  set username_GT(int? username_GT) => _$this._username_GT = username_GT;

  double? _username_AVERAGE_GT;
  double? get username_AVERAGE_GT => _$this._username_AVERAGE_GT;
  set username_AVERAGE_GT(double? username_AVERAGE_GT) =>
      _$this._username_AVERAGE_GT = username_AVERAGE_GT;

  int? _username_LONGEST_GT;
  int? get username_LONGEST_GT => _$this._username_LONGEST_GT;
  set username_LONGEST_GT(int? username_LONGEST_GT) =>
      _$this._username_LONGEST_GT = username_LONGEST_GT;

  int? _username_SHORTEST_GT;
  int? get username_SHORTEST_GT => _$this._username_SHORTEST_GT;
  set username_SHORTEST_GT(int? username_SHORTEST_GT) =>
      _$this._username_SHORTEST_GT = username_SHORTEST_GT;

  int? _username_GTE;
  int? get username_GTE => _$this._username_GTE;
  set username_GTE(int? username_GTE) => _$this._username_GTE = username_GTE;

  double? _username_AVERAGE_GTE;
  double? get username_AVERAGE_GTE => _$this._username_AVERAGE_GTE;
  set username_AVERAGE_GTE(double? username_AVERAGE_GTE) =>
      _$this._username_AVERAGE_GTE = username_AVERAGE_GTE;

  int? _username_LONGEST_GTE;
  int? get username_LONGEST_GTE => _$this._username_LONGEST_GTE;
  set username_LONGEST_GTE(int? username_LONGEST_GTE) =>
      _$this._username_LONGEST_GTE = username_LONGEST_GTE;

  int? _username_SHORTEST_GTE;
  int? get username_SHORTEST_GTE => _$this._username_SHORTEST_GTE;
  set username_SHORTEST_GTE(int? username_SHORTEST_GTE) =>
      _$this._username_SHORTEST_GTE = username_SHORTEST_GTE;

  int? _username_LT;
  int? get username_LT => _$this._username_LT;
  set username_LT(int? username_LT) => _$this._username_LT = username_LT;

  double? _username_AVERAGE_LT;
  double? get username_AVERAGE_LT => _$this._username_AVERAGE_LT;
  set username_AVERAGE_LT(double? username_AVERAGE_LT) =>
      _$this._username_AVERAGE_LT = username_AVERAGE_LT;

  int? _username_LONGEST_LT;
  int? get username_LONGEST_LT => _$this._username_LONGEST_LT;
  set username_LONGEST_LT(int? username_LONGEST_LT) =>
      _$this._username_LONGEST_LT = username_LONGEST_LT;

  int? _username_SHORTEST_LT;
  int? get username_SHORTEST_LT => _$this._username_SHORTEST_LT;
  set username_SHORTEST_LT(int? username_SHORTEST_LT) =>
      _$this._username_SHORTEST_LT = username_SHORTEST_LT;

  int? _username_LTE;
  int? get username_LTE => _$this._username_LTE;
  set username_LTE(int? username_LTE) => _$this._username_LTE = username_LTE;

  double? _username_AVERAGE_LTE;
  double? get username_AVERAGE_LTE => _$this._username_AVERAGE_LTE;
  set username_AVERAGE_LTE(double? username_AVERAGE_LTE) =>
      _$this._username_AVERAGE_LTE = username_AVERAGE_LTE;

  int? _username_LONGEST_LTE;
  int? get username_LONGEST_LTE => _$this._username_LONGEST_LTE;
  set username_LONGEST_LTE(int? username_LONGEST_LTE) =>
      _$this._username_LONGEST_LTE = username_LONGEST_LTE;

  int? _username_SHORTEST_LTE;
  int? get username_SHORTEST_LTE => _$this._username_SHORTEST_LTE;
  set username_SHORTEST_LTE(int? username_SHORTEST_LTE) =>
      _$this._username_SHORTEST_LTE = username_SHORTEST_LTE;

  String? _displayName_EQUAL;
  String? get displayName_EQUAL => _$this._displayName_EQUAL;
  set displayName_EQUAL(String? displayName_EQUAL) =>
      _$this._displayName_EQUAL = displayName_EQUAL;

  double? _displayName_AVERAGE_EQUAL;
  double? get displayName_AVERAGE_EQUAL => _$this._displayName_AVERAGE_EQUAL;
  set displayName_AVERAGE_EQUAL(double? displayName_AVERAGE_EQUAL) =>
      _$this._displayName_AVERAGE_EQUAL = displayName_AVERAGE_EQUAL;

  int? _displayName_LONGEST_EQUAL;
  int? get displayName_LONGEST_EQUAL => _$this._displayName_LONGEST_EQUAL;
  set displayName_LONGEST_EQUAL(int? displayName_LONGEST_EQUAL) =>
      _$this._displayName_LONGEST_EQUAL = displayName_LONGEST_EQUAL;

  int? _displayName_SHORTEST_EQUAL;
  int? get displayName_SHORTEST_EQUAL => _$this._displayName_SHORTEST_EQUAL;
  set displayName_SHORTEST_EQUAL(int? displayName_SHORTEST_EQUAL) =>
      _$this._displayName_SHORTEST_EQUAL = displayName_SHORTEST_EQUAL;

  int? _displayName_GT;
  int? get displayName_GT => _$this._displayName_GT;
  set displayName_GT(int? displayName_GT) =>
      _$this._displayName_GT = displayName_GT;

  double? _displayName_AVERAGE_GT;
  double? get displayName_AVERAGE_GT => _$this._displayName_AVERAGE_GT;
  set displayName_AVERAGE_GT(double? displayName_AVERAGE_GT) =>
      _$this._displayName_AVERAGE_GT = displayName_AVERAGE_GT;

  int? _displayName_LONGEST_GT;
  int? get displayName_LONGEST_GT => _$this._displayName_LONGEST_GT;
  set displayName_LONGEST_GT(int? displayName_LONGEST_GT) =>
      _$this._displayName_LONGEST_GT = displayName_LONGEST_GT;

  int? _displayName_SHORTEST_GT;
  int? get displayName_SHORTEST_GT => _$this._displayName_SHORTEST_GT;
  set displayName_SHORTEST_GT(int? displayName_SHORTEST_GT) =>
      _$this._displayName_SHORTEST_GT = displayName_SHORTEST_GT;

  int? _displayName_GTE;
  int? get displayName_GTE => _$this._displayName_GTE;
  set displayName_GTE(int? displayName_GTE) =>
      _$this._displayName_GTE = displayName_GTE;

  double? _displayName_AVERAGE_GTE;
  double? get displayName_AVERAGE_GTE => _$this._displayName_AVERAGE_GTE;
  set displayName_AVERAGE_GTE(double? displayName_AVERAGE_GTE) =>
      _$this._displayName_AVERAGE_GTE = displayName_AVERAGE_GTE;

  int? _displayName_LONGEST_GTE;
  int? get displayName_LONGEST_GTE => _$this._displayName_LONGEST_GTE;
  set displayName_LONGEST_GTE(int? displayName_LONGEST_GTE) =>
      _$this._displayName_LONGEST_GTE = displayName_LONGEST_GTE;

  int? _displayName_SHORTEST_GTE;
  int? get displayName_SHORTEST_GTE => _$this._displayName_SHORTEST_GTE;
  set displayName_SHORTEST_GTE(int? displayName_SHORTEST_GTE) =>
      _$this._displayName_SHORTEST_GTE = displayName_SHORTEST_GTE;

  int? _displayName_LT;
  int? get displayName_LT => _$this._displayName_LT;
  set displayName_LT(int? displayName_LT) =>
      _$this._displayName_LT = displayName_LT;

  double? _displayName_AVERAGE_LT;
  double? get displayName_AVERAGE_LT => _$this._displayName_AVERAGE_LT;
  set displayName_AVERAGE_LT(double? displayName_AVERAGE_LT) =>
      _$this._displayName_AVERAGE_LT = displayName_AVERAGE_LT;

  int? _displayName_LONGEST_LT;
  int? get displayName_LONGEST_LT => _$this._displayName_LONGEST_LT;
  set displayName_LONGEST_LT(int? displayName_LONGEST_LT) =>
      _$this._displayName_LONGEST_LT = displayName_LONGEST_LT;

  int? _displayName_SHORTEST_LT;
  int? get displayName_SHORTEST_LT => _$this._displayName_SHORTEST_LT;
  set displayName_SHORTEST_LT(int? displayName_SHORTEST_LT) =>
      _$this._displayName_SHORTEST_LT = displayName_SHORTEST_LT;

  int? _displayName_LTE;
  int? get displayName_LTE => _$this._displayName_LTE;
  set displayName_LTE(int? displayName_LTE) =>
      _$this._displayName_LTE = displayName_LTE;

  double? _displayName_AVERAGE_LTE;
  double? get displayName_AVERAGE_LTE => _$this._displayName_AVERAGE_LTE;
  set displayName_AVERAGE_LTE(double? displayName_AVERAGE_LTE) =>
      _$this._displayName_AVERAGE_LTE = displayName_AVERAGE_LTE;

  int? _displayName_LONGEST_LTE;
  int? get displayName_LONGEST_LTE => _$this._displayName_LONGEST_LTE;
  set displayName_LONGEST_LTE(int? displayName_LONGEST_LTE) =>
      _$this._displayName_LONGEST_LTE = displayName_LONGEST_LTE;

  int? _displayName_SHORTEST_LTE;
  int? get displayName_SHORTEST_LTE => _$this._displayName_SHORTEST_LTE;
  set displayName_SHORTEST_LTE(int? displayName_SHORTEST_LTE) =>
      _$this._displayName_SHORTEST_LTE = displayName_SHORTEST_LTE;

  GProjectOwnerNodeAggregationWhereInputBuilder();

  GProjectOwnerNodeAggregationWhereInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _id_EQUAL = $v.id_EQUAL;
      _username_EQUAL = $v.username_EQUAL;
      _username_AVERAGE_EQUAL = $v.username_AVERAGE_EQUAL;
      _username_LONGEST_EQUAL = $v.username_LONGEST_EQUAL;
      _username_SHORTEST_EQUAL = $v.username_SHORTEST_EQUAL;
      _username_GT = $v.username_GT;
      _username_AVERAGE_GT = $v.username_AVERAGE_GT;
      _username_LONGEST_GT = $v.username_LONGEST_GT;
      _username_SHORTEST_GT = $v.username_SHORTEST_GT;
      _username_GTE = $v.username_GTE;
      _username_AVERAGE_GTE = $v.username_AVERAGE_GTE;
      _username_LONGEST_GTE = $v.username_LONGEST_GTE;
      _username_SHORTEST_GTE = $v.username_SHORTEST_GTE;
      _username_LT = $v.username_LT;
      _username_AVERAGE_LT = $v.username_AVERAGE_LT;
      _username_LONGEST_LT = $v.username_LONGEST_LT;
      _username_SHORTEST_LT = $v.username_SHORTEST_LT;
      _username_LTE = $v.username_LTE;
      _username_AVERAGE_LTE = $v.username_AVERAGE_LTE;
      _username_LONGEST_LTE = $v.username_LONGEST_LTE;
      _username_SHORTEST_LTE = $v.username_SHORTEST_LTE;
      _displayName_EQUAL = $v.displayName_EQUAL;
      _displayName_AVERAGE_EQUAL = $v.displayName_AVERAGE_EQUAL;
      _displayName_LONGEST_EQUAL = $v.displayName_LONGEST_EQUAL;
      _displayName_SHORTEST_EQUAL = $v.displayName_SHORTEST_EQUAL;
      _displayName_GT = $v.displayName_GT;
      _displayName_AVERAGE_GT = $v.displayName_AVERAGE_GT;
      _displayName_LONGEST_GT = $v.displayName_LONGEST_GT;
      _displayName_SHORTEST_GT = $v.displayName_SHORTEST_GT;
      _displayName_GTE = $v.displayName_GTE;
      _displayName_AVERAGE_GTE = $v.displayName_AVERAGE_GTE;
      _displayName_LONGEST_GTE = $v.displayName_LONGEST_GTE;
      _displayName_SHORTEST_GTE = $v.displayName_SHORTEST_GTE;
      _displayName_LT = $v.displayName_LT;
      _displayName_AVERAGE_LT = $v.displayName_AVERAGE_LT;
      _displayName_LONGEST_LT = $v.displayName_LONGEST_LT;
      _displayName_SHORTEST_LT = $v.displayName_SHORTEST_LT;
      _displayName_LTE = $v.displayName_LTE;
      _displayName_AVERAGE_LTE = $v.displayName_AVERAGE_LTE;
      _displayName_LONGEST_LTE = $v.displayName_LONGEST_LTE;
      _displayName_SHORTEST_LTE = $v.displayName_SHORTEST_LTE;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerNodeAggregationWhereInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerNodeAggregationWhereInput;
  }

  @override
  void update(
      void Function(GProjectOwnerNodeAggregationWhereInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerNodeAggregationWhereInput build() => _build();

  _$GProjectOwnerNodeAggregationWhereInput _build() {
    _$GProjectOwnerNodeAggregationWhereInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerNodeAggregationWhereInput._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              id_EQUAL: id_EQUAL,
              username_EQUAL: username_EQUAL,
              username_AVERAGE_EQUAL: username_AVERAGE_EQUAL,
              username_LONGEST_EQUAL: username_LONGEST_EQUAL,
              username_SHORTEST_EQUAL: username_SHORTEST_EQUAL,
              username_GT: username_GT,
              username_AVERAGE_GT: username_AVERAGE_GT,
              username_LONGEST_GT: username_LONGEST_GT,
              username_SHORTEST_GT: username_SHORTEST_GT,
              username_GTE: username_GTE,
              username_AVERAGE_GTE: username_AVERAGE_GTE,
              username_LONGEST_GTE: username_LONGEST_GTE,
              username_SHORTEST_GTE: username_SHORTEST_GTE,
              username_LT: username_LT,
              username_AVERAGE_LT: username_AVERAGE_LT,
              username_LONGEST_LT: username_LONGEST_LT,
              username_SHORTEST_LT: username_SHORTEST_LT,
              username_LTE: username_LTE,
              username_AVERAGE_LTE: username_AVERAGE_LTE,
              username_LONGEST_LTE: username_LONGEST_LTE,
              username_SHORTEST_LTE: username_SHORTEST_LTE,
              displayName_EQUAL: displayName_EQUAL,
              displayName_AVERAGE_EQUAL: displayName_AVERAGE_EQUAL,
              displayName_LONGEST_EQUAL: displayName_LONGEST_EQUAL,
              displayName_SHORTEST_EQUAL: displayName_SHORTEST_EQUAL,
              displayName_GT: displayName_GT,
              displayName_AVERAGE_GT: displayName_AVERAGE_GT,
              displayName_LONGEST_GT: displayName_LONGEST_GT,
              displayName_SHORTEST_GT: displayName_SHORTEST_GT,
              displayName_GTE: displayName_GTE,
              displayName_AVERAGE_GTE: displayName_AVERAGE_GTE,
              displayName_LONGEST_GTE: displayName_LONGEST_GTE,
              displayName_SHORTEST_GTE: displayName_SHORTEST_GTE,
              displayName_LT: displayName_LT,
              displayName_AVERAGE_LT: displayName_AVERAGE_LT,
              displayName_LONGEST_LT: displayName_LONGEST_LT,
              displayName_SHORTEST_LT: displayName_SHORTEST_LT,
              displayName_LTE: displayName_LTE,
              displayName_AVERAGE_LTE: displayName_AVERAGE_LTE,
              displayName_LONGEST_LTE: displayName_LONGEST_LTE,
              displayName_SHORTEST_LTE: displayName_SHORTEST_LTE);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerNodeAggregationWhereInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerUpdateConnectionInput
    extends GProjectOwnerUpdateConnectionInput {
  @override
  final GUserUpdateInput? node;

  factory _$GProjectOwnerUpdateConnectionInput(
          [void Function(GProjectOwnerUpdateConnectionInputBuilder)?
              updates]) =>
      (new GProjectOwnerUpdateConnectionInputBuilder()..update(updates))
          ._build();

  _$GProjectOwnerUpdateConnectionInput._({this.node}) : super._();

  @override
  GProjectOwnerUpdateConnectionInput rebuild(
          void Function(GProjectOwnerUpdateConnectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerUpdateConnectionInputBuilder toBuilder() =>
      new GProjectOwnerUpdateConnectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerUpdateConnectionInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerUpdateConnectionInput')
          ..add('node', node))
        .toString();
  }
}

class GProjectOwnerUpdateConnectionInputBuilder
    implements
        Builder<GProjectOwnerUpdateConnectionInput,
            GProjectOwnerUpdateConnectionInputBuilder> {
  _$GProjectOwnerUpdateConnectionInput? _$v;

  GUserUpdateInputBuilder? _node;
  GUserUpdateInputBuilder get node =>
      _$this._node ??= new GUserUpdateInputBuilder();
  set node(GUserUpdateInputBuilder? node) => _$this._node = node;

  GProjectOwnerUpdateConnectionInputBuilder();

  GProjectOwnerUpdateConnectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerUpdateConnectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerUpdateConnectionInput;
  }

  @override
  void update(
      void Function(GProjectOwnerUpdateConnectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerUpdateConnectionInput build() => _build();

  _$GProjectOwnerUpdateConnectionInput _build() {
    _$GProjectOwnerUpdateConnectionInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerUpdateConnectionInput._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerUpdateConnectionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectOwnerUpdateFieldInput extends GProjectOwnerUpdateFieldInput {
  @override
  final GProjectOwnerConnectionWhere? where;
  @override
  final GProjectOwnerUpdateConnectionInput? Gupdate;
  @override
  final GProjectOwnerConnectFieldInput? connect;
  @override
  final GProjectOwnerDisconnectFieldInput? disconnect;
  @override
  final GProjectOwnerCreateFieldInput? create;
  @override
  final GProjectOwnerDeleteFieldInput? delete;
  @override
  final GProjectOwnerConnectOrCreateFieldInput? connectOrCreate;

  factory _$GProjectOwnerUpdateFieldInput(
          [void Function(GProjectOwnerUpdateFieldInputBuilder)? updates]) =>
      (new GProjectOwnerUpdateFieldInputBuilder()..update(updates))._build();

  _$GProjectOwnerUpdateFieldInput._(
      {this.where,
      this.Gupdate,
      this.connect,
      this.disconnect,
      this.create,
      this.delete,
      this.connectOrCreate})
      : super._();

  @override
  GProjectOwnerUpdateFieldInput rebuild(
          void Function(GProjectOwnerUpdateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectOwnerUpdateFieldInputBuilder toBuilder() =>
      new GProjectOwnerUpdateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectOwnerUpdateFieldInput &&
        where == other.where &&
        Gupdate == other.Gupdate &&
        connect == other.connect &&
        disconnect == other.disconnect &&
        create == other.create &&
        delete == other.delete &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, where.hashCode), Gupdate.hashCode),
                        connect.hashCode),
                    disconnect.hashCode),
                create.hashCode),
            delete.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectOwnerUpdateFieldInput')
          ..add('where', where)
          ..add('Gupdate', Gupdate)
          ..add('connect', connect)
          ..add('disconnect', disconnect)
          ..add('create', create)
          ..add('delete', delete)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GProjectOwnerUpdateFieldInputBuilder
    implements
        Builder<GProjectOwnerUpdateFieldInput,
            GProjectOwnerUpdateFieldInputBuilder> {
  _$GProjectOwnerUpdateFieldInput? _$v;

  GProjectOwnerConnectionWhereBuilder? _where;
  GProjectOwnerConnectionWhereBuilder get where =>
      _$this._where ??= new GProjectOwnerConnectionWhereBuilder();
  set where(GProjectOwnerConnectionWhereBuilder? where) =>
      _$this._where = where;

  GProjectOwnerUpdateConnectionInputBuilder? _Gupdate;
  GProjectOwnerUpdateConnectionInputBuilder get Gupdate =>
      _$this._Gupdate ??= new GProjectOwnerUpdateConnectionInputBuilder();
  set Gupdate(GProjectOwnerUpdateConnectionInputBuilder? Gupdate) =>
      _$this._Gupdate = Gupdate;

  GProjectOwnerConnectFieldInputBuilder? _connect;
  GProjectOwnerConnectFieldInputBuilder get connect =>
      _$this._connect ??= new GProjectOwnerConnectFieldInputBuilder();
  set connect(GProjectOwnerConnectFieldInputBuilder? connect) =>
      _$this._connect = connect;

  GProjectOwnerDisconnectFieldInputBuilder? _disconnect;
  GProjectOwnerDisconnectFieldInputBuilder get disconnect =>
      _$this._disconnect ??= new GProjectOwnerDisconnectFieldInputBuilder();
  set disconnect(GProjectOwnerDisconnectFieldInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GProjectOwnerCreateFieldInputBuilder? _create;
  GProjectOwnerCreateFieldInputBuilder get create =>
      _$this._create ??= new GProjectOwnerCreateFieldInputBuilder();
  set create(GProjectOwnerCreateFieldInputBuilder? create) =>
      _$this._create = create;

  GProjectOwnerDeleteFieldInputBuilder? _delete;
  GProjectOwnerDeleteFieldInputBuilder get delete =>
      _$this._delete ??= new GProjectOwnerDeleteFieldInputBuilder();
  set delete(GProjectOwnerDeleteFieldInputBuilder? delete) =>
      _$this._delete = delete;

  GProjectOwnerConnectOrCreateFieldInputBuilder? _connectOrCreate;
  GProjectOwnerConnectOrCreateFieldInputBuilder get connectOrCreate =>
      _$this._connectOrCreate ??=
          new GProjectOwnerConnectOrCreateFieldInputBuilder();
  set connectOrCreate(
          GProjectOwnerConnectOrCreateFieldInputBuilder? connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GProjectOwnerUpdateFieldInputBuilder();

  GProjectOwnerUpdateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _Gupdate = $v.Gupdate?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _create = $v.create?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectOwnerUpdateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectOwnerUpdateFieldInput;
  }

  @override
  void update(void Function(GProjectOwnerUpdateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectOwnerUpdateFieldInput build() => _build();

  _$GProjectOwnerUpdateFieldInput _build() {
    _$GProjectOwnerUpdateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectOwnerUpdateFieldInput._(
              where: _where?.build(),
              Gupdate: _Gupdate?.build(),
              connect: _connect?.build(),
              disconnect: _disconnect?.build(),
              create: _create?.build(),
              delete: _delete?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'Gupdate';
        _Gupdate?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'delete';
        _delete?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectOwnerUpdateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesAggregateInput extends GProjectPagesAggregateInput {
  @override
  final int? count;
  @override
  final int? count_LT;
  @override
  final int? count_LTE;
  @override
  final int? count_GT;
  @override
  final int? count_GTE;
  @override
  final BuiltList<GProjectPagesAggregateInput>? AND;
  @override
  final BuiltList<GProjectPagesAggregateInput>? OR;
  @override
  final GProjectPagesNodeAggregationWhereInput? node;

  factory _$GProjectPagesAggregateInput(
          [void Function(GProjectPagesAggregateInputBuilder)? updates]) =>
      (new GProjectPagesAggregateInputBuilder()..update(updates))._build();

  _$GProjectPagesAggregateInput._(
      {this.count,
      this.count_LT,
      this.count_LTE,
      this.count_GT,
      this.count_GTE,
      this.AND,
      this.OR,
      this.node})
      : super._();

  @override
  GProjectPagesAggregateInput rebuild(
          void Function(GProjectPagesAggregateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesAggregateInputBuilder toBuilder() =>
      new GProjectPagesAggregateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesAggregateInput &&
        count == other.count &&
        count_LT == other.count_LT &&
        count_LTE == other.count_LTE &&
        count_GT == other.count_GT &&
        count_GTE == other.count_GTE &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, count.hashCode), count_LT.hashCode),
                            count_LTE.hashCode),
                        count_GT.hashCode),
                    count_GTE.hashCode),
                AND.hashCode),
            OR.hashCode),
        node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesAggregateInput')
          ..add('count', count)
          ..add('count_LT', count_LT)
          ..add('count_LTE', count_LTE)
          ..add('count_GT', count_GT)
          ..add('count_GTE', count_GTE)
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node))
        .toString();
  }
}

class GProjectPagesAggregateInputBuilder
    implements
        Builder<GProjectPagesAggregateInput,
            GProjectPagesAggregateInputBuilder> {
  _$GProjectPagesAggregateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  int? _count_LT;
  int? get count_LT => _$this._count_LT;
  set count_LT(int? count_LT) => _$this._count_LT = count_LT;

  int? _count_LTE;
  int? get count_LTE => _$this._count_LTE;
  set count_LTE(int? count_LTE) => _$this._count_LTE = count_LTE;

  int? _count_GT;
  int? get count_GT => _$this._count_GT;
  set count_GT(int? count_GT) => _$this._count_GT = count_GT;

  int? _count_GTE;
  int? get count_GTE => _$this._count_GTE;
  set count_GTE(int? count_GTE) => _$this._count_GTE = count_GTE;

  ListBuilder<GProjectPagesAggregateInput>? _AND;
  ListBuilder<GProjectPagesAggregateInput> get AND =>
      _$this._AND ??= new ListBuilder<GProjectPagesAggregateInput>();
  set AND(ListBuilder<GProjectPagesAggregateInput>? AND) => _$this._AND = AND;

  ListBuilder<GProjectPagesAggregateInput>? _OR;
  ListBuilder<GProjectPagesAggregateInput> get OR =>
      _$this._OR ??= new ListBuilder<GProjectPagesAggregateInput>();
  set OR(ListBuilder<GProjectPagesAggregateInput>? OR) => _$this._OR = OR;

  GProjectPagesNodeAggregationWhereInputBuilder? _node;
  GProjectPagesNodeAggregationWhereInputBuilder get node =>
      _$this._node ??= new GProjectPagesNodeAggregationWhereInputBuilder();
  set node(GProjectPagesNodeAggregationWhereInputBuilder? node) =>
      _$this._node = node;

  GProjectPagesAggregateInputBuilder();

  GProjectPagesAggregateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _count_LT = $v.count_LT;
      _count_LTE = $v.count_LTE;
      _count_GT = $v.count_GT;
      _count_GTE = $v.count_GTE;
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesAggregateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesAggregateInput;
  }

  @override
  void update(void Function(GProjectPagesAggregateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesAggregateInput build() => _build();

  _$GProjectPagesAggregateInput _build() {
    _$GProjectPagesAggregateInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesAggregateInput._(
              count: count,
              count_LT: count_LT,
              count_LTE: count_LTE,
              count_GT: count_GT,
              count_GTE: count_GTE,
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesAggregateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesConnectFieldInput extends GProjectPagesConnectFieldInput {
  @override
  final GPageConnectWhere? where;
  @override
  final BuiltList<GPageConnectInput>? connect;

  factory _$GProjectPagesConnectFieldInput(
          [void Function(GProjectPagesConnectFieldInputBuilder)? updates]) =>
      (new GProjectPagesConnectFieldInputBuilder()..update(updates))._build();

  _$GProjectPagesConnectFieldInput._({this.where, this.connect}) : super._();

  @override
  GProjectPagesConnectFieldInput rebuild(
          void Function(GProjectPagesConnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesConnectFieldInputBuilder toBuilder() =>
      new GProjectPagesConnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesConnectFieldInput &&
        where == other.where &&
        connect == other.connect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), connect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesConnectFieldInput')
          ..add('where', where)
          ..add('connect', connect))
        .toString();
  }
}

class GProjectPagesConnectFieldInputBuilder
    implements
        Builder<GProjectPagesConnectFieldInput,
            GProjectPagesConnectFieldInputBuilder> {
  _$GProjectPagesConnectFieldInput? _$v;

  GPageConnectWhereBuilder? _where;
  GPageConnectWhereBuilder get where =>
      _$this._where ??= new GPageConnectWhereBuilder();
  set where(GPageConnectWhereBuilder? where) => _$this._where = where;

  ListBuilder<GPageConnectInput>? _connect;
  ListBuilder<GPageConnectInput> get connect =>
      _$this._connect ??= new ListBuilder<GPageConnectInput>();
  set connect(ListBuilder<GPageConnectInput>? connect) =>
      _$this._connect = connect;

  GProjectPagesConnectFieldInputBuilder();

  GProjectPagesConnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesConnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesConnectFieldInput;
  }

  @override
  void update(void Function(GProjectPagesConnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesConnectFieldInput build() => _build();

  _$GProjectPagesConnectFieldInput _build() {
    _$GProjectPagesConnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesConnectFieldInput._(
              where: _where?.build(), connect: _connect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'connect';
        _connect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesConnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesConnectionSort extends GProjectPagesConnectionSort {
  @override
  final GPageSort? node;

  factory _$GProjectPagesConnectionSort(
          [void Function(GProjectPagesConnectionSortBuilder)? updates]) =>
      (new GProjectPagesConnectionSortBuilder()..update(updates))._build();

  _$GProjectPagesConnectionSort._({this.node}) : super._();

  @override
  GProjectPagesConnectionSort rebuild(
          void Function(GProjectPagesConnectionSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesConnectionSortBuilder toBuilder() =>
      new GProjectPagesConnectionSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesConnectionSort && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesConnectionSort')
          ..add('node', node))
        .toString();
  }
}

class GProjectPagesConnectionSortBuilder
    implements
        Builder<GProjectPagesConnectionSort,
            GProjectPagesConnectionSortBuilder> {
  _$GProjectPagesConnectionSort? _$v;

  GPageSortBuilder? _node;
  GPageSortBuilder get node => _$this._node ??= new GPageSortBuilder();
  set node(GPageSortBuilder? node) => _$this._node = node;

  GProjectPagesConnectionSortBuilder();

  GProjectPagesConnectionSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesConnectionSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesConnectionSort;
  }

  @override
  void update(void Function(GProjectPagesConnectionSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesConnectionSort build() => _build();

  _$GProjectPagesConnectionSort _build() {
    _$GProjectPagesConnectionSort _$result;
    try {
      _$result =
          _$v ?? new _$GProjectPagesConnectionSort._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesConnectionSort', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesConnectionWhere extends GProjectPagesConnectionWhere {
  @override
  final BuiltList<GProjectPagesConnectionWhere>? AND;
  @override
  final BuiltList<GProjectPagesConnectionWhere>? OR;
  @override
  final GPageWhere? node;
  @override
  final GPageWhere? node_NOT;

  factory _$GProjectPagesConnectionWhere(
          [void Function(GProjectPagesConnectionWhereBuilder)? updates]) =>
      (new GProjectPagesConnectionWhereBuilder()..update(updates))._build();

  _$GProjectPagesConnectionWhere._(
      {this.AND, this.OR, this.node, this.node_NOT})
      : super._();

  @override
  GProjectPagesConnectionWhere rebuild(
          void Function(GProjectPagesConnectionWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesConnectionWhereBuilder toBuilder() =>
      new GProjectPagesConnectionWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesConnectionWhere &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node &&
        node_NOT == other.node_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), node.hashCode),
        node_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesConnectionWhere')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node)
          ..add('node_NOT', node_NOT))
        .toString();
  }
}

class GProjectPagesConnectionWhereBuilder
    implements
        Builder<GProjectPagesConnectionWhere,
            GProjectPagesConnectionWhereBuilder> {
  _$GProjectPagesConnectionWhere? _$v;

  ListBuilder<GProjectPagesConnectionWhere>? _AND;
  ListBuilder<GProjectPagesConnectionWhere> get AND =>
      _$this._AND ??= new ListBuilder<GProjectPagesConnectionWhere>();
  set AND(ListBuilder<GProjectPagesConnectionWhere>? AND) => _$this._AND = AND;

  ListBuilder<GProjectPagesConnectionWhere>? _OR;
  ListBuilder<GProjectPagesConnectionWhere> get OR =>
      _$this._OR ??= new ListBuilder<GProjectPagesConnectionWhere>();
  set OR(ListBuilder<GProjectPagesConnectionWhere>? OR) => _$this._OR = OR;

  GPageWhereBuilder? _node;
  GPageWhereBuilder get node => _$this._node ??= new GPageWhereBuilder();
  set node(GPageWhereBuilder? node) => _$this._node = node;

  GPageWhereBuilder? _node_NOT;
  GPageWhereBuilder get node_NOT =>
      _$this._node_NOT ??= new GPageWhereBuilder();
  set node_NOT(GPageWhereBuilder? node_NOT) => _$this._node_NOT = node_NOT;

  GProjectPagesConnectionWhereBuilder();

  GProjectPagesConnectionWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _node_NOT = $v.node_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesConnectionWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesConnectionWhere;
  }

  @override
  void update(void Function(GProjectPagesConnectionWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesConnectionWhere build() => _build();

  _$GProjectPagesConnectionWhere _build() {
    _$GProjectPagesConnectionWhere _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesConnectionWhere._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build(),
              node_NOT: _node_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
        _$failedField = 'node_NOT';
        _node_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesConnectionWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesConnectOrCreateFieldInput
    extends GProjectPagesConnectOrCreateFieldInput {
  @override
  final GPageConnectOrCreateWhere where;
  @override
  final GProjectPagesConnectOrCreateFieldInputOnCreate onCreate;

  factory _$GProjectPagesConnectOrCreateFieldInput(
          [void Function(GProjectPagesConnectOrCreateFieldInputBuilder)?
              updates]) =>
      (new GProjectPagesConnectOrCreateFieldInputBuilder()..update(updates))
          ._build();

  _$GProjectPagesConnectOrCreateFieldInput._(
      {required this.where, required this.onCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GProjectPagesConnectOrCreateFieldInput', 'where');
    BuiltValueNullFieldError.checkNotNull(
        onCreate, r'GProjectPagesConnectOrCreateFieldInput', 'onCreate');
  }

  @override
  GProjectPagesConnectOrCreateFieldInput rebuild(
          void Function(GProjectPagesConnectOrCreateFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesConnectOrCreateFieldInputBuilder toBuilder() =>
      new GProjectPagesConnectOrCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesConnectOrCreateFieldInput &&
        where == other.where &&
        onCreate == other.onCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), onCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProjectPagesConnectOrCreateFieldInput')
          ..add('where', where)
          ..add('onCreate', onCreate))
        .toString();
  }
}

class GProjectPagesConnectOrCreateFieldInputBuilder
    implements
        Builder<GProjectPagesConnectOrCreateFieldInput,
            GProjectPagesConnectOrCreateFieldInputBuilder> {
  _$GProjectPagesConnectOrCreateFieldInput? _$v;

  GPageConnectOrCreateWhereBuilder? _where;
  GPageConnectOrCreateWhereBuilder get where =>
      _$this._where ??= new GPageConnectOrCreateWhereBuilder();
  set where(GPageConnectOrCreateWhereBuilder? where) => _$this._where = where;

  GProjectPagesConnectOrCreateFieldInputOnCreateBuilder? _onCreate;
  GProjectPagesConnectOrCreateFieldInputOnCreateBuilder get onCreate =>
      _$this._onCreate ??=
          new GProjectPagesConnectOrCreateFieldInputOnCreateBuilder();
  set onCreate(
          GProjectPagesConnectOrCreateFieldInputOnCreateBuilder? onCreate) =>
      _$this._onCreate = onCreate;

  GProjectPagesConnectOrCreateFieldInputBuilder();

  GProjectPagesConnectOrCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where.toBuilder();
      _onCreate = $v.onCreate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesConnectOrCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesConnectOrCreateFieldInput;
  }

  @override
  void update(
      void Function(GProjectPagesConnectOrCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesConnectOrCreateFieldInput build() => _build();

  _$GProjectPagesConnectOrCreateFieldInput _build() {
    _$GProjectPagesConnectOrCreateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesConnectOrCreateFieldInput._(
              where: where.build(), onCreate: onCreate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        where.build();
        _$failedField = 'onCreate';
        onCreate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesConnectOrCreateFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesConnectOrCreateFieldInputOnCreate
    extends GProjectPagesConnectOrCreateFieldInputOnCreate {
  @override
  final GPageOnCreateInput node;

  factory _$GProjectPagesConnectOrCreateFieldInputOnCreate(
          [void Function(GProjectPagesConnectOrCreateFieldInputOnCreateBuilder)?
              updates]) =>
      (new GProjectPagesConnectOrCreateFieldInputOnCreateBuilder()
            ..update(updates))
          ._build();

  _$GProjectPagesConnectOrCreateFieldInputOnCreate._({required this.node})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GProjectPagesConnectOrCreateFieldInputOnCreate', 'node');
  }

  @override
  GProjectPagesConnectOrCreateFieldInputOnCreate rebuild(
          void Function(GProjectPagesConnectOrCreateFieldInputOnCreateBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesConnectOrCreateFieldInputOnCreateBuilder toBuilder() =>
      new GProjectPagesConnectOrCreateFieldInputOnCreateBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesConnectOrCreateFieldInputOnCreate &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProjectPagesConnectOrCreateFieldInputOnCreate')
          ..add('node', node))
        .toString();
  }
}

class GProjectPagesConnectOrCreateFieldInputOnCreateBuilder
    implements
        Builder<GProjectPagesConnectOrCreateFieldInputOnCreate,
            GProjectPagesConnectOrCreateFieldInputOnCreateBuilder> {
  _$GProjectPagesConnectOrCreateFieldInputOnCreate? _$v;

  GPageOnCreateInputBuilder? _node;
  GPageOnCreateInputBuilder get node =>
      _$this._node ??= new GPageOnCreateInputBuilder();
  set node(GPageOnCreateInputBuilder? node) => _$this._node = node;

  GProjectPagesConnectOrCreateFieldInputOnCreateBuilder();

  GProjectPagesConnectOrCreateFieldInputOnCreateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesConnectOrCreateFieldInputOnCreate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesConnectOrCreateFieldInputOnCreate;
  }

  @override
  void update(
      void Function(GProjectPagesConnectOrCreateFieldInputOnCreateBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesConnectOrCreateFieldInputOnCreate build() => _build();

  _$GProjectPagesConnectOrCreateFieldInputOnCreate _build() {
    _$GProjectPagesConnectOrCreateFieldInputOnCreate _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesConnectOrCreateFieldInputOnCreate._(
              node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesConnectOrCreateFieldInputOnCreate',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesCreateFieldInput extends GProjectPagesCreateFieldInput {
  @override
  final GPageCreateInput node;

  factory _$GProjectPagesCreateFieldInput(
          [void Function(GProjectPagesCreateFieldInputBuilder)? updates]) =>
      (new GProjectPagesCreateFieldInputBuilder()..update(updates))._build();

  _$GProjectPagesCreateFieldInput._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GProjectPagesCreateFieldInput', 'node');
  }

  @override
  GProjectPagesCreateFieldInput rebuild(
          void Function(GProjectPagesCreateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesCreateFieldInputBuilder toBuilder() =>
      new GProjectPagesCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesCreateFieldInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesCreateFieldInput')
          ..add('node', node))
        .toString();
  }
}

class GProjectPagesCreateFieldInputBuilder
    implements
        Builder<GProjectPagesCreateFieldInput,
            GProjectPagesCreateFieldInputBuilder> {
  _$GProjectPagesCreateFieldInput? _$v;

  GPageCreateInputBuilder? _node;
  GPageCreateInputBuilder get node =>
      _$this._node ??= new GPageCreateInputBuilder();
  set node(GPageCreateInputBuilder? node) => _$this._node = node;

  GProjectPagesCreateFieldInputBuilder();

  GProjectPagesCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesCreateFieldInput;
  }

  @override
  void update(void Function(GProjectPagesCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesCreateFieldInput build() => _build();

  _$GProjectPagesCreateFieldInput _build() {
    _$GProjectPagesCreateFieldInput _$result;
    try {
      _$result =
          _$v ?? new _$GProjectPagesCreateFieldInput._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesCreateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesDeleteFieldInput extends GProjectPagesDeleteFieldInput {
  @override
  final GProjectPagesConnectionWhere? where;
  @override
  final GPageDeleteInput? delete;

  factory _$GProjectPagesDeleteFieldInput(
          [void Function(GProjectPagesDeleteFieldInputBuilder)? updates]) =>
      (new GProjectPagesDeleteFieldInputBuilder()..update(updates))._build();

  _$GProjectPagesDeleteFieldInput._({this.where, this.delete}) : super._();

  @override
  GProjectPagesDeleteFieldInput rebuild(
          void Function(GProjectPagesDeleteFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesDeleteFieldInputBuilder toBuilder() =>
      new GProjectPagesDeleteFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesDeleteFieldInput &&
        where == other.where &&
        delete == other.delete;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), delete.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesDeleteFieldInput')
          ..add('where', where)
          ..add('delete', delete))
        .toString();
  }
}

class GProjectPagesDeleteFieldInputBuilder
    implements
        Builder<GProjectPagesDeleteFieldInput,
            GProjectPagesDeleteFieldInputBuilder> {
  _$GProjectPagesDeleteFieldInput? _$v;

  GProjectPagesConnectionWhereBuilder? _where;
  GProjectPagesConnectionWhereBuilder get where =>
      _$this._where ??= new GProjectPagesConnectionWhereBuilder();
  set where(GProjectPagesConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageDeleteInputBuilder? _delete;
  GPageDeleteInputBuilder get delete =>
      _$this._delete ??= new GPageDeleteInputBuilder();
  set delete(GPageDeleteInputBuilder? delete) => _$this._delete = delete;

  GProjectPagesDeleteFieldInputBuilder();

  GProjectPagesDeleteFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesDeleteFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesDeleteFieldInput;
  }

  @override
  void update(void Function(GProjectPagesDeleteFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesDeleteFieldInput build() => _build();

  _$GProjectPagesDeleteFieldInput _build() {
    _$GProjectPagesDeleteFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesDeleteFieldInput._(
              where: _where?.build(), delete: _delete?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'delete';
        _delete?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesDeleteFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesDisconnectFieldInput
    extends GProjectPagesDisconnectFieldInput {
  @override
  final GProjectPagesConnectionWhere? where;
  @override
  final GPageDisconnectInput? disconnect;

  factory _$GProjectPagesDisconnectFieldInput(
          [void Function(GProjectPagesDisconnectFieldInputBuilder)? updates]) =>
      (new GProjectPagesDisconnectFieldInputBuilder()..update(updates))
          ._build();

  _$GProjectPagesDisconnectFieldInput._({this.where, this.disconnect})
      : super._();

  @override
  GProjectPagesDisconnectFieldInput rebuild(
          void Function(GProjectPagesDisconnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesDisconnectFieldInputBuilder toBuilder() =>
      new GProjectPagesDisconnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesDisconnectFieldInput &&
        where == other.where &&
        disconnect == other.disconnect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), disconnect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesDisconnectFieldInput')
          ..add('where', where)
          ..add('disconnect', disconnect))
        .toString();
  }
}

class GProjectPagesDisconnectFieldInputBuilder
    implements
        Builder<GProjectPagesDisconnectFieldInput,
            GProjectPagesDisconnectFieldInputBuilder> {
  _$GProjectPagesDisconnectFieldInput? _$v;

  GProjectPagesConnectionWhereBuilder? _where;
  GProjectPagesConnectionWhereBuilder get where =>
      _$this._where ??= new GProjectPagesConnectionWhereBuilder();
  set where(GProjectPagesConnectionWhereBuilder? where) =>
      _$this._where = where;

  GPageDisconnectInputBuilder? _disconnect;
  GPageDisconnectInputBuilder get disconnect =>
      _$this._disconnect ??= new GPageDisconnectInputBuilder();
  set disconnect(GPageDisconnectInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GProjectPagesDisconnectFieldInputBuilder();

  GProjectPagesDisconnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesDisconnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesDisconnectFieldInput;
  }

  @override
  void update(
      void Function(GProjectPagesDisconnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesDisconnectFieldInput build() => _build();

  _$GProjectPagesDisconnectFieldInput _build() {
    _$GProjectPagesDisconnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesDisconnectFieldInput._(
              where: _where?.build(), disconnect: _disconnect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesDisconnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesFieldInput extends GProjectPagesFieldInput {
  @override
  final BuiltList<GProjectPagesCreateFieldInput>? create;
  @override
  final BuiltList<GProjectPagesConnectFieldInput>? connect;
  @override
  final BuiltList<GProjectPagesConnectOrCreateFieldInput>? connectOrCreate;

  factory _$GProjectPagesFieldInput(
          [void Function(GProjectPagesFieldInputBuilder)? updates]) =>
      (new GProjectPagesFieldInputBuilder()..update(updates))._build();

  _$GProjectPagesFieldInput._({this.create, this.connect, this.connectOrCreate})
      : super._();

  @override
  GProjectPagesFieldInput rebuild(
          void Function(GProjectPagesFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesFieldInputBuilder toBuilder() =>
      new GProjectPagesFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesFieldInput &&
        create == other.create &&
        connect == other.connect &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, create.hashCode), connect.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesFieldInput')
          ..add('create', create)
          ..add('connect', connect)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GProjectPagesFieldInputBuilder
    implements
        Builder<GProjectPagesFieldInput, GProjectPagesFieldInputBuilder> {
  _$GProjectPagesFieldInput? _$v;

  ListBuilder<GProjectPagesCreateFieldInput>? _create;
  ListBuilder<GProjectPagesCreateFieldInput> get create =>
      _$this._create ??= new ListBuilder<GProjectPagesCreateFieldInput>();
  set create(ListBuilder<GProjectPagesCreateFieldInput>? create) =>
      _$this._create = create;

  ListBuilder<GProjectPagesConnectFieldInput>? _connect;
  ListBuilder<GProjectPagesConnectFieldInput> get connect =>
      _$this._connect ??= new ListBuilder<GProjectPagesConnectFieldInput>();
  set connect(ListBuilder<GProjectPagesConnectFieldInput>? connect) =>
      _$this._connect = connect;

  ListBuilder<GProjectPagesConnectOrCreateFieldInput>? _connectOrCreate;
  ListBuilder<GProjectPagesConnectOrCreateFieldInput> get connectOrCreate =>
      _$this._connectOrCreate ??=
          new ListBuilder<GProjectPagesConnectOrCreateFieldInput>();
  set connectOrCreate(
          ListBuilder<GProjectPagesConnectOrCreateFieldInput>?
              connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GProjectPagesFieldInputBuilder();

  GProjectPagesFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _create = $v.create?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesFieldInput;
  }

  @override
  void update(void Function(GProjectPagesFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesFieldInput build() => _build();

  _$GProjectPagesFieldInput _build() {
    _$GProjectPagesFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesFieldInput._(
              create: _create?.build(),
              connect: _connect?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesNodeAggregationWhereInput
    extends GProjectPagesNodeAggregationWhereInput {
  @override
  final BuiltList<GProjectPagesNodeAggregationWhereInput>? AND;
  @override
  final BuiltList<GProjectPagesNodeAggregationWhereInput>? OR;
  @override
  final String? id_EQUAL;
  @override
  final String? title_EQUAL;
  @override
  final double? title_AVERAGE_EQUAL;
  @override
  final int? title_LONGEST_EQUAL;
  @override
  final int? title_SHORTEST_EQUAL;
  @override
  final int? title_GT;
  @override
  final double? title_AVERAGE_GT;
  @override
  final int? title_LONGEST_GT;
  @override
  final int? title_SHORTEST_GT;
  @override
  final int? title_GTE;
  @override
  final double? title_AVERAGE_GTE;
  @override
  final int? title_LONGEST_GTE;
  @override
  final int? title_SHORTEST_GTE;
  @override
  final int? title_LT;
  @override
  final double? title_AVERAGE_LT;
  @override
  final int? title_LONGEST_LT;
  @override
  final int? title_SHORTEST_LT;
  @override
  final int? title_LTE;
  @override
  final double? title_AVERAGE_LTE;
  @override
  final int? title_LONGEST_LTE;
  @override
  final int? title_SHORTEST_LTE;
  @override
  final String? description_EQUAL;
  @override
  final double? description_AVERAGE_EQUAL;
  @override
  final int? description_LONGEST_EQUAL;
  @override
  final int? description_SHORTEST_EQUAL;
  @override
  final int? description_GT;
  @override
  final double? description_AVERAGE_GT;
  @override
  final int? description_LONGEST_GT;
  @override
  final int? description_SHORTEST_GT;
  @override
  final int? description_GTE;
  @override
  final double? description_AVERAGE_GTE;
  @override
  final int? description_LONGEST_GTE;
  @override
  final int? description_SHORTEST_GTE;
  @override
  final int? description_LT;
  @override
  final double? description_AVERAGE_LT;
  @override
  final int? description_LONGEST_LT;
  @override
  final int? description_SHORTEST_LT;
  @override
  final int? description_LTE;
  @override
  final double? description_AVERAGE_LTE;
  @override
  final int? description_LONGEST_LTE;
  @override
  final int? description_SHORTEST_LTE;
  @override
  final String? layout_EQUAL;
  @override
  final double? layout_AVERAGE_EQUAL;
  @override
  final int? layout_LONGEST_EQUAL;
  @override
  final int? layout_SHORTEST_EQUAL;
  @override
  final int? layout_GT;
  @override
  final double? layout_AVERAGE_GT;
  @override
  final int? layout_LONGEST_GT;
  @override
  final int? layout_SHORTEST_GT;
  @override
  final int? layout_GTE;
  @override
  final double? layout_AVERAGE_GTE;
  @override
  final int? layout_LONGEST_GTE;
  @override
  final int? layout_SHORTEST_GTE;
  @override
  final int? layout_LT;
  @override
  final double? layout_AVERAGE_LT;
  @override
  final int? layout_LONGEST_LT;
  @override
  final int? layout_SHORTEST_LT;
  @override
  final int? layout_LTE;
  @override
  final double? layout_AVERAGE_LTE;
  @override
  final int? layout_LONGEST_LTE;
  @override
  final int? layout_SHORTEST_LTE;
  @override
  final int? orderNumber_EQUAL;
  @override
  final double? orderNumber_AVERAGE_EQUAL;
  @override
  final int? orderNumber_MIN_EQUAL;
  @override
  final int? orderNumber_MAX_EQUAL;
  @override
  final int? orderNumber_SUM_EQUAL;
  @override
  final int? orderNumber_GT;
  @override
  final double? orderNumber_AVERAGE_GT;
  @override
  final int? orderNumber_MIN_GT;
  @override
  final int? orderNumber_MAX_GT;
  @override
  final int? orderNumber_SUM_GT;
  @override
  final int? orderNumber_GTE;
  @override
  final double? orderNumber_AVERAGE_GTE;
  @override
  final int? orderNumber_MIN_GTE;
  @override
  final int? orderNumber_MAX_GTE;
  @override
  final int? orderNumber_SUM_GTE;
  @override
  final int? orderNumber_LT;
  @override
  final double? orderNumber_AVERAGE_LT;
  @override
  final int? orderNumber_MIN_LT;
  @override
  final int? orderNumber_MAX_LT;
  @override
  final int? orderNumber_SUM_LT;
  @override
  final int? orderNumber_LTE;
  @override
  final double? orderNumber_AVERAGE_LTE;
  @override
  final int? orderNumber_MIN_LTE;
  @override
  final int? orderNumber_MAX_LTE;
  @override
  final int? orderNumber_SUM_LTE;

  factory _$GProjectPagesNodeAggregationWhereInput(
          [void Function(GProjectPagesNodeAggregationWhereInputBuilder)?
              updates]) =>
      (new GProjectPagesNodeAggregationWhereInputBuilder()..update(updates))
          ._build();

  _$GProjectPagesNodeAggregationWhereInput._(
      {this.AND,
      this.OR,
      this.id_EQUAL,
      this.title_EQUAL,
      this.title_AVERAGE_EQUAL,
      this.title_LONGEST_EQUAL,
      this.title_SHORTEST_EQUAL,
      this.title_GT,
      this.title_AVERAGE_GT,
      this.title_LONGEST_GT,
      this.title_SHORTEST_GT,
      this.title_GTE,
      this.title_AVERAGE_GTE,
      this.title_LONGEST_GTE,
      this.title_SHORTEST_GTE,
      this.title_LT,
      this.title_AVERAGE_LT,
      this.title_LONGEST_LT,
      this.title_SHORTEST_LT,
      this.title_LTE,
      this.title_AVERAGE_LTE,
      this.title_LONGEST_LTE,
      this.title_SHORTEST_LTE,
      this.description_EQUAL,
      this.description_AVERAGE_EQUAL,
      this.description_LONGEST_EQUAL,
      this.description_SHORTEST_EQUAL,
      this.description_GT,
      this.description_AVERAGE_GT,
      this.description_LONGEST_GT,
      this.description_SHORTEST_GT,
      this.description_GTE,
      this.description_AVERAGE_GTE,
      this.description_LONGEST_GTE,
      this.description_SHORTEST_GTE,
      this.description_LT,
      this.description_AVERAGE_LT,
      this.description_LONGEST_LT,
      this.description_SHORTEST_LT,
      this.description_LTE,
      this.description_AVERAGE_LTE,
      this.description_LONGEST_LTE,
      this.description_SHORTEST_LTE,
      this.layout_EQUAL,
      this.layout_AVERAGE_EQUAL,
      this.layout_LONGEST_EQUAL,
      this.layout_SHORTEST_EQUAL,
      this.layout_GT,
      this.layout_AVERAGE_GT,
      this.layout_LONGEST_GT,
      this.layout_SHORTEST_GT,
      this.layout_GTE,
      this.layout_AVERAGE_GTE,
      this.layout_LONGEST_GTE,
      this.layout_SHORTEST_GTE,
      this.layout_LT,
      this.layout_AVERAGE_LT,
      this.layout_LONGEST_LT,
      this.layout_SHORTEST_LT,
      this.layout_LTE,
      this.layout_AVERAGE_LTE,
      this.layout_LONGEST_LTE,
      this.layout_SHORTEST_LTE,
      this.orderNumber_EQUAL,
      this.orderNumber_AVERAGE_EQUAL,
      this.orderNumber_MIN_EQUAL,
      this.orderNumber_MAX_EQUAL,
      this.orderNumber_SUM_EQUAL,
      this.orderNumber_GT,
      this.orderNumber_AVERAGE_GT,
      this.orderNumber_MIN_GT,
      this.orderNumber_MAX_GT,
      this.orderNumber_SUM_GT,
      this.orderNumber_GTE,
      this.orderNumber_AVERAGE_GTE,
      this.orderNumber_MIN_GTE,
      this.orderNumber_MAX_GTE,
      this.orderNumber_SUM_GTE,
      this.orderNumber_LT,
      this.orderNumber_AVERAGE_LT,
      this.orderNumber_MIN_LT,
      this.orderNumber_MAX_LT,
      this.orderNumber_SUM_LT,
      this.orderNumber_LTE,
      this.orderNumber_AVERAGE_LTE,
      this.orderNumber_MIN_LTE,
      this.orderNumber_MAX_LTE,
      this.orderNumber_SUM_LTE})
      : super._();

  @override
  GProjectPagesNodeAggregationWhereInput rebuild(
          void Function(GProjectPagesNodeAggregationWhereInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesNodeAggregationWhereInputBuilder toBuilder() =>
      new GProjectPagesNodeAggregationWhereInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesNodeAggregationWhereInput &&
        AND == other.AND &&
        OR == other.OR &&
        id_EQUAL == other.id_EQUAL &&
        title_EQUAL == other.title_EQUAL &&
        title_AVERAGE_EQUAL == other.title_AVERAGE_EQUAL &&
        title_LONGEST_EQUAL == other.title_LONGEST_EQUAL &&
        title_SHORTEST_EQUAL == other.title_SHORTEST_EQUAL &&
        title_GT == other.title_GT &&
        title_AVERAGE_GT == other.title_AVERAGE_GT &&
        title_LONGEST_GT == other.title_LONGEST_GT &&
        title_SHORTEST_GT == other.title_SHORTEST_GT &&
        title_GTE == other.title_GTE &&
        title_AVERAGE_GTE == other.title_AVERAGE_GTE &&
        title_LONGEST_GTE == other.title_LONGEST_GTE &&
        title_SHORTEST_GTE == other.title_SHORTEST_GTE &&
        title_LT == other.title_LT &&
        title_AVERAGE_LT == other.title_AVERAGE_LT &&
        title_LONGEST_LT == other.title_LONGEST_LT &&
        title_SHORTEST_LT == other.title_SHORTEST_LT &&
        title_LTE == other.title_LTE &&
        title_AVERAGE_LTE == other.title_AVERAGE_LTE &&
        title_LONGEST_LTE == other.title_LONGEST_LTE &&
        title_SHORTEST_LTE == other.title_SHORTEST_LTE &&
        description_EQUAL == other.description_EQUAL &&
        description_AVERAGE_EQUAL == other.description_AVERAGE_EQUAL &&
        description_LONGEST_EQUAL == other.description_LONGEST_EQUAL &&
        description_SHORTEST_EQUAL == other.description_SHORTEST_EQUAL &&
        description_GT == other.description_GT &&
        description_AVERAGE_GT == other.description_AVERAGE_GT &&
        description_LONGEST_GT == other.description_LONGEST_GT &&
        description_SHORTEST_GT == other.description_SHORTEST_GT &&
        description_GTE == other.description_GTE &&
        description_AVERAGE_GTE == other.description_AVERAGE_GTE &&
        description_LONGEST_GTE == other.description_LONGEST_GTE &&
        description_SHORTEST_GTE == other.description_SHORTEST_GTE &&
        description_LT == other.description_LT &&
        description_AVERAGE_LT == other.description_AVERAGE_LT &&
        description_LONGEST_LT == other.description_LONGEST_LT &&
        description_SHORTEST_LT == other.description_SHORTEST_LT &&
        description_LTE == other.description_LTE &&
        description_AVERAGE_LTE == other.description_AVERAGE_LTE &&
        description_LONGEST_LTE == other.description_LONGEST_LTE &&
        description_SHORTEST_LTE == other.description_SHORTEST_LTE &&
        layout_EQUAL == other.layout_EQUAL &&
        layout_AVERAGE_EQUAL == other.layout_AVERAGE_EQUAL &&
        layout_LONGEST_EQUAL == other.layout_LONGEST_EQUAL &&
        layout_SHORTEST_EQUAL == other.layout_SHORTEST_EQUAL &&
        layout_GT == other.layout_GT &&
        layout_AVERAGE_GT == other.layout_AVERAGE_GT &&
        layout_LONGEST_GT == other.layout_LONGEST_GT &&
        layout_SHORTEST_GT == other.layout_SHORTEST_GT &&
        layout_GTE == other.layout_GTE &&
        layout_AVERAGE_GTE == other.layout_AVERAGE_GTE &&
        layout_LONGEST_GTE == other.layout_LONGEST_GTE &&
        layout_SHORTEST_GTE == other.layout_SHORTEST_GTE &&
        layout_LT == other.layout_LT &&
        layout_AVERAGE_LT == other.layout_AVERAGE_LT &&
        layout_LONGEST_LT == other.layout_LONGEST_LT &&
        layout_SHORTEST_LT == other.layout_SHORTEST_LT &&
        layout_LTE == other.layout_LTE &&
        layout_AVERAGE_LTE == other.layout_AVERAGE_LTE &&
        layout_LONGEST_LTE == other.layout_LONGEST_LTE &&
        layout_SHORTEST_LTE == other.layout_SHORTEST_LTE &&
        orderNumber_EQUAL == other.orderNumber_EQUAL &&
        orderNumber_AVERAGE_EQUAL == other.orderNumber_AVERAGE_EQUAL &&
        orderNumber_MIN_EQUAL == other.orderNumber_MIN_EQUAL &&
        orderNumber_MAX_EQUAL == other.orderNumber_MAX_EQUAL &&
        orderNumber_SUM_EQUAL == other.orderNumber_SUM_EQUAL &&
        orderNumber_GT == other.orderNumber_GT &&
        orderNumber_AVERAGE_GT == other.orderNumber_AVERAGE_GT &&
        orderNumber_MIN_GT == other.orderNumber_MIN_GT &&
        orderNumber_MAX_GT == other.orderNumber_MAX_GT &&
        orderNumber_SUM_GT == other.orderNumber_SUM_GT &&
        orderNumber_GTE == other.orderNumber_GTE &&
        orderNumber_AVERAGE_GTE == other.orderNumber_AVERAGE_GTE &&
        orderNumber_MIN_GTE == other.orderNumber_MIN_GTE &&
        orderNumber_MAX_GTE == other.orderNumber_MAX_GTE &&
        orderNumber_SUM_GTE == other.orderNumber_SUM_GTE &&
        orderNumber_LT == other.orderNumber_LT &&
        orderNumber_AVERAGE_LT == other.orderNumber_AVERAGE_LT &&
        orderNumber_MIN_LT == other.orderNumber_MIN_LT &&
        orderNumber_MAX_LT == other.orderNumber_MAX_LT &&
        orderNumber_SUM_LT == other.orderNumber_SUM_LT &&
        orderNumber_LTE == other.orderNumber_LTE &&
        orderNumber_AVERAGE_LTE == other.orderNumber_AVERAGE_LTE &&
        orderNumber_MIN_LTE == other.orderNumber_MIN_LTE &&
        orderNumber_MAX_LTE == other.orderNumber_MAX_LTE &&
        orderNumber_SUM_LTE == other.orderNumber_SUM_LTE;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), id_EQUAL.hashCode), title_EQUAL.hashCode), title_AVERAGE_EQUAL.hashCode), title_LONGEST_EQUAL.hashCode), title_SHORTEST_EQUAL.hashCode), title_GT.hashCode), title_AVERAGE_GT.hashCode), title_LONGEST_GT.hashCode), title_SHORTEST_GT.hashCode), title_GTE.hashCode), title_AVERAGE_GTE.hashCode), title_LONGEST_GTE.hashCode), title_SHORTEST_GTE.hashCode), title_LT.hashCode), title_AVERAGE_LT.hashCode), title_LONGEST_LT.hashCode), title_SHORTEST_LT.hashCode), title_LTE.hashCode), title_AVERAGE_LTE.hashCode), title_LONGEST_LTE.hashCode), title_SHORTEST_LTE.hashCode), description_EQUAL.hashCode), description_AVERAGE_EQUAL.hashCode), description_LONGEST_EQUAL.hashCode), description_SHORTEST_EQUAL.hashCode), description_GT.hashCode), description_AVERAGE_GT.hashCode), description_LONGEST_GT.hashCode), description_SHORTEST_GT.hashCode), description_GTE.hashCode), description_AVERAGE_GTE.hashCode), description_LONGEST_GTE.hashCode), description_SHORTEST_GTE.hashCode), description_LT.hashCode), description_AVERAGE_LT.hashCode), description_LONGEST_LT.hashCode), description_SHORTEST_LT.hashCode), description_LTE.hashCode), description_AVERAGE_LTE.hashCode), description_LONGEST_LTE.hashCode), description_SHORTEST_LTE.hashCode), layout_EQUAL.hashCode), layout_AVERAGE_EQUAL.hashCode), layout_LONGEST_EQUAL.hashCode), layout_SHORTEST_EQUAL.hashCode), layout_GT.hashCode), layout_AVERAGE_GT.hashCode), layout_LONGEST_GT.hashCode), layout_SHORTEST_GT.hashCode), layout_GTE.hashCode), layout_AVERAGE_GTE.hashCode), layout_LONGEST_GTE.hashCode), layout_SHORTEST_GTE.hashCode), layout_LT.hashCode), layout_AVERAGE_LT.hashCode), layout_LONGEST_LT.hashCode), layout_SHORTEST_LT.hashCode), layout_LTE.hashCode), layout_AVERAGE_LTE.hashCode), layout_LONGEST_LTE.hashCode), layout_SHORTEST_LTE.hashCode), orderNumber_EQUAL.hashCode), orderNumber_AVERAGE_EQUAL.hashCode), orderNumber_MIN_EQUAL.hashCode), orderNumber_MAX_EQUAL.hashCode), orderNumber_SUM_EQUAL.hashCode), orderNumber_GT.hashCode),
                                                                                orderNumber_AVERAGE_GT.hashCode),
                                                                            orderNumber_MIN_GT.hashCode),
                                                                        orderNumber_MAX_GT.hashCode),
                                                                    orderNumber_SUM_GT.hashCode),
                                                                orderNumber_GTE.hashCode),
                                                            orderNumber_AVERAGE_GTE.hashCode),
                                                        orderNumber_MIN_GTE.hashCode),
                                                    orderNumber_MAX_GTE.hashCode),
                                                orderNumber_SUM_GTE.hashCode),
                                            orderNumber_LT.hashCode),
                                        orderNumber_AVERAGE_LT.hashCode),
                                    orderNumber_MIN_LT.hashCode),
                                orderNumber_MAX_LT.hashCode),
                            orderNumber_SUM_LT.hashCode),
                        orderNumber_LTE.hashCode),
                    orderNumber_AVERAGE_LTE.hashCode),
                orderNumber_MIN_LTE.hashCode),
            orderNumber_MAX_LTE.hashCode),
        orderNumber_SUM_LTE.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProjectPagesNodeAggregationWhereInput')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('id_EQUAL', id_EQUAL)
          ..add('title_EQUAL', title_EQUAL)
          ..add('title_AVERAGE_EQUAL', title_AVERAGE_EQUAL)
          ..add('title_LONGEST_EQUAL', title_LONGEST_EQUAL)
          ..add('title_SHORTEST_EQUAL', title_SHORTEST_EQUAL)
          ..add('title_GT', title_GT)
          ..add('title_AVERAGE_GT', title_AVERAGE_GT)
          ..add('title_LONGEST_GT', title_LONGEST_GT)
          ..add('title_SHORTEST_GT', title_SHORTEST_GT)
          ..add('title_GTE', title_GTE)
          ..add('title_AVERAGE_GTE', title_AVERAGE_GTE)
          ..add('title_LONGEST_GTE', title_LONGEST_GTE)
          ..add('title_SHORTEST_GTE', title_SHORTEST_GTE)
          ..add('title_LT', title_LT)
          ..add('title_AVERAGE_LT', title_AVERAGE_LT)
          ..add('title_LONGEST_LT', title_LONGEST_LT)
          ..add('title_SHORTEST_LT', title_SHORTEST_LT)
          ..add('title_LTE', title_LTE)
          ..add('title_AVERAGE_LTE', title_AVERAGE_LTE)
          ..add('title_LONGEST_LTE', title_LONGEST_LTE)
          ..add('title_SHORTEST_LTE', title_SHORTEST_LTE)
          ..add('description_EQUAL', description_EQUAL)
          ..add('description_AVERAGE_EQUAL', description_AVERAGE_EQUAL)
          ..add('description_LONGEST_EQUAL', description_LONGEST_EQUAL)
          ..add('description_SHORTEST_EQUAL', description_SHORTEST_EQUAL)
          ..add('description_GT', description_GT)
          ..add('description_AVERAGE_GT', description_AVERAGE_GT)
          ..add('description_LONGEST_GT', description_LONGEST_GT)
          ..add('description_SHORTEST_GT', description_SHORTEST_GT)
          ..add('description_GTE', description_GTE)
          ..add('description_AVERAGE_GTE', description_AVERAGE_GTE)
          ..add('description_LONGEST_GTE', description_LONGEST_GTE)
          ..add('description_SHORTEST_GTE', description_SHORTEST_GTE)
          ..add('description_LT', description_LT)
          ..add('description_AVERAGE_LT', description_AVERAGE_LT)
          ..add('description_LONGEST_LT', description_LONGEST_LT)
          ..add('description_SHORTEST_LT', description_SHORTEST_LT)
          ..add('description_LTE', description_LTE)
          ..add('description_AVERAGE_LTE', description_AVERAGE_LTE)
          ..add('description_LONGEST_LTE', description_LONGEST_LTE)
          ..add('description_SHORTEST_LTE', description_SHORTEST_LTE)
          ..add('layout_EQUAL', layout_EQUAL)
          ..add('layout_AVERAGE_EQUAL', layout_AVERAGE_EQUAL)
          ..add('layout_LONGEST_EQUAL', layout_LONGEST_EQUAL)
          ..add('layout_SHORTEST_EQUAL', layout_SHORTEST_EQUAL)
          ..add('layout_GT', layout_GT)
          ..add('layout_AVERAGE_GT', layout_AVERAGE_GT)
          ..add('layout_LONGEST_GT', layout_LONGEST_GT)
          ..add('layout_SHORTEST_GT', layout_SHORTEST_GT)
          ..add('layout_GTE', layout_GTE)
          ..add('layout_AVERAGE_GTE', layout_AVERAGE_GTE)
          ..add('layout_LONGEST_GTE', layout_LONGEST_GTE)
          ..add('layout_SHORTEST_GTE', layout_SHORTEST_GTE)
          ..add('layout_LT', layout_LT)
          ..add('layout_AVERAGE_LT', layout_AVERAGE_LT)
          ..add('layout_LONGEST_LT', layout_LONGEST_LT)
          ..add('layout_SHORTEST_LT', layout_SHORTEST_LT)
          ..add('layout_LTE', layout_LTE)
          ..add('layout_AVERAGE_LTE', layout_AVERAGE_LTE)
          ..add('layout_LONGEST_LTE', layout_LONGEST_LTE)
          ..add('layout_SHORTEST_LTE', layout_SHORTEST_LTE)
          ..add('orderNumber_EQUAL', orderNumber_EQUAL)
          ..add('orderNumber_AVERAGE_EQUAL', orderNumber_AVERAGE_EQUAL)
          ..add('orderNumber_MIN_EQUAL', orderNumber_MIN_EQUAL)
          ..add('orderNumber_MAX_EQUAL', orderNumber_MAX_EQUAL)
          ..add('orderNumber_SUM_EQUAL', orderNumber_SUM_EQUAL)
          ..add('orderNumber_GT', orderNumber_GT)
          ..add('orderNumber_AVERAGE_GT', orderNumber_AVERAGE_GT)
          ..add('orderNumber_MIN_GT', orderNumber_MIN_GT)
          ..add('orderNumber_MAX_GT', orderNumber_MAX_GT)
          ..add('orderNumber_SUM_GT', orderNumber_SUM_GT)
          ..add('orderNumber_GTE', orderNumber_GTE)
          ..add('orderNumber_AVERAGE_GTE', orderNumber_AVERAGE_GTE)
          ..add('orderNumber_MIN_GTE', orderNumber_MIN_GTE)
          ..add('orderNumber_MAX_GTE', orderNumber_MAX_GTE)
          ..add('orderNumber_SUM_GTE', orderNumber_SUM_GTE)
          ..add('orderNumber_LT', orderNumber_LT)
          ..add('orderNumber_AVERAGE_LT', orderNumber_AVERAGE_LT)
          ..add('orderNumber_MIN_LT', orderNumber_MIN_LT)
          ..add('orderNumber_MAX_LT', orderNumber_MAX_LT)
          ..add('orderNumber_SUM_LT', orderNumber_SUM_LT)
          ..add('orderNumber_LTE', orderNumber_LTE)
          ..add('orderNumber_AVERAGE_LTE', orderNumber_AVERAGE_LTE)
          ..add('orderNumber_MIN_LTE', orderNumber_MIN_LTE)
          ..add('orderNumber_MAX_LTE', orderNumber_MAX_LTE)
          ..add('orderNumber_SUM_LTE', orderNumber_SUM_LTE))
        .toString();
  }
}

class GProjectPagesNodeAggregationWhereInputBuilder
    implements
        Builder<GProjectPagesNodeAggregationWhereInput,
            GProjectPagesNodeAggregationWhereInputBuilder> {
  _$GProjectPagesNodeAggregationWhereInput? _$v;

  ListBuilder<GProjectPagesNodeAggregationWhereInput>? _AND;
  ListBuilder<GProjectPagesNodeAggregationWhereInput> get AND =>
      _$this._AND ??= new ListBuilder<GProjectPagesNodeAggregationWhereInput>();
  set AND(ListBuilder<GProjectPagesNodeAggregationWhereInput>? AND) =>
      _$this._AND = AND;

  ListBuilder<GProjectPagesNodeAggregationWhereInput>? _OR;
  ListBuilder<GProjectPagesNodeAggregationWhereInput> get OR =>
      _$this._OR ??= new ListBuilder<GProjectPagesNodeAggregationWhereInput>();
  set OR(ListBuilder<GProjectPagesNodeAggregationWhereInput>? OR) =>
      _$this._OR = OR;

  String? _id_EQUAL;
  String? get id_EQUAL => _$this._id_EQUAL;
  set id_EQUAL(String? id_EQUAL) => _$this._id_EQUAL = id_EQUAL;

  String? _title_EQUAL;
  String? get title_EQUAL => _$this._title_EQUAL;
  set title_EQUAL(String? title_EQUAL) => _$this._title_EQUAL = title_EQUAL;

  double? _title_AVERAGE_EQUAL;
  double? get title_AVERAGE_EQUAL => _$this._title_AVERAGE_EQUAL;
  set title_AVERAGE_EQUAL(double? title_AVERAGE_EQUAL) =>
      _$this._title_AVERAGE_EQUAL = title_AVERAGE_EQUAL;

  int? _title_LONGEST_EQUAL;
  int? get title_LONGEST_EQUAL => _$this._title_LONGEST_EQUAL;
  set title_LONGEST_EQUAL(int? title_LONGEST_EQUAL) =>
      _$this._title_LONGEST_EQUAL = title_LONGEST_EQUAL;

  int? _title_SHORTEST_EQUAL;
  int? get title_SHORTEST_EQUAL => _$this._title_SHORTEST_EQUAL;
  set title_SHORTEST_EQUAL(int? title_SHORTEST_EQUAL) =>
      _$this._title_SHORTEST_EQUAL = title_SHORTEST_EQUAL;

  int? _title_GT;
  int? get title_GT => _$this._title_GT;
  set title_GT(int? title_GT) => _$this._title_GT = title_GT;

  double? _title_AVERAGE_GT;
  double? get title_AVERAGE_GT => _$this._title_AVERAGE_GT;
  set title_AVERAGE_GT(double? title_AVERAGE_GT) =>
      _$this._title_AVERAGE_GT = title_AVERAGE_GT;

  int? _title_LONGEST_GT;
  int? get title_LONGEST_GT => _$this._title_LONGEST_GT;
  set title_LONGEST_GT(int? title_LONGEST_GT) =>
      _$this._title_LONGEST_GT = title_LONGEST_GT;

  int? _title_SHORTEST_GT;
  int? get title_SHORTEST_GT => _$this._title_SHORTEST_GT;
  set title_SHORTEST_GT(int? title_SHORTEST_GT) =>
      _$this._title_SHORTEST_GT = title_SHORTEST_GT;

  int? _title_GTE;
  int? get title_GTE => _$this._title_GTE;
  set title_GTE(int? title_GTE) => _$this._title_GTE = title_GTE;

  double? _title_AVERAGE_GTE;
  double? get title_AVERAGE_GTE => _$this._title_AVERAGE_GTE;
  set title_AVERAGE_GTE(double? title_AVERAGE_GTE) =>
      _$this._title_AVERAGE_GTE = title_AVERAGE_GTE;

  int? _title_LONGEST_GTE;
  int? get title_LONGEST_GTE => _$this._title_LONGEST_GTE;
  set title_LONGEST_GTE(int? title_LONGEST_GTE) =>
      _$this._title_LONGEST_GTE = title_LONGEST_GTE;

  int? _title_SHORTEST_GTE;
  int? get title_SHORTEST_GTE => _$this._title_SHORTEST_GTE;
  set title_SHORTEST_GTE(int? title_SHORTEST_GTE) =>
      _$this._title_SHORTEST_GTE = title_SHORTEST_GTE;

  int? _title_LT;
  int? get title_LT => _$this._title_LT;
  set title_LT(int? title_LT) => _$this._title_LT = title_LT;

  double? _title_AVERAGE_LT;
  double? get title_AVERAGE_LT => _$this._title_AVERAGE_LT;
  set title_AVERAGE_LT(double? title_AVERAGE_LT) =>
      _$this._title_AVERAGE_LT = title_AVERAGE_LT;

  int? _title_LONGEST_LT;
  int? get title_LONGEST_LT => _$this._title_LONGEST_LT;
  set title_LONGEST_LT(int? title_LONGEST_LT) =>
      _$this._title_LONGEST_LT = title_LONGEST_LT;

  int? _title_SHORTEST_LT;
  int? get title_SHORTEST_LT => _$this._title_SHORTEST_LT;
  set title_SHORTEST_LT(int? title_SHORTEST_LT) =>
      _$this._title_SHORTEST_LT = title_SHORTEST_LT;

  int? _title_LTE;
  int? get title_LTE => _$this._title_LTE;
  set title_LTE(int? title_LTE) => _$this._title_LTE = title_LTE;

  double? _title_AVERAGE_LTE;
  double? get title_AVERAGE_LTE => _$this._title_AVERAGE_LTE;
  set title_AVERAGE_LTE(double? title_AVERAGE_LTE) =>
      _$this._title_AVERAGE_LTE = title_AVERAGE_LTE;

  int? _title_LONGEST_LTE;
  int? get title_LONGEST_LTE => _$this._title_LONGEST_LTE;
  set title_LONGEST_LTE(int? title_LONGEST_LTE) =>
      _$this._title_LONGEST_LTE = title_LONGEST_LTE;

  int? _title_SHORTEST_LTE;
  int? get title_SHORTEST_LTE => _$this._title_SHORTEST_LTE;
  set title_SHORTEST_LTE(int? title_SHORTEST_LTE) =>
      _$this._title_SHORTEST_LTE = title_SHORTEST_LTE;

  String? _description_EQUAL;
  String? get description_EQUAL => _$this._description_EQUAL;
  set description_EQUAL(String? description_EQUAL) =>
      _$this._description_EQUAL = description_EQUAL;

  double? _description_AVERAGE_EQUAL;
  double? get description_AVERAGE_EQUAL => _$this._description_AVERAGE_EQUAL;
  set description_AVERAGE_EQUAL(double? description_AVERAGE_EQUAL) =>
      _$this._description_AVERAGE_EQUAL = description_AVERAGE_EQUAL;

  int? _description_LONGEST_EQUAL;
  int? get description_LONGEST_EQUAL => _$this._description_LONGEST_EQUAL;
  set description_LONGEST_EQUAL(int? description_LONGEST_EQUAL) =>
      _$this._description_LONGEST_EQUAL = description_LONGEST_EQUAL;

  int? _description_SHORTEST_EQUAL;
  int? get description_SHORTEST_EQUAL => _$this._description_SHORTEST_EQUAL;
  set description_SHORTEST_EQUAL(int? description_SHORTEST_EQUAL) =>
      _$this._description_SHORTEST_EQUAL = description_SHORTEST_EQUAL;

  int? _description_GT;
  int? get description_GT => _$this._description_GT;
  set description_GT(int? description_GT) =>
      _$this._description_GT = description_GT;

  double? _description_AVERAGE_GT;
  double? get description_AVERAGE_GT => _$this._description_AVERAGE_GT;
  set description_AVERAGE_GT(double? description_AVERAGE_GT) =>
      _$this._description_AVERAGE_GT = description_AVERAGE_GT;

  int? _description_LONGEST_GT;
  int? get description_LONGEST_GT => _$this._description_LONGEST_GT;
  set description_LONGEST_GT(int? description_LONGEST_GT) =>
      _$this._description_LONGEST_GT = description_LONGEST_GT;

  int? _description_SHORTEST_GT;
  int? get description_SHORTEST_GT => _$this._description_SHORTEST_GT;
  set description_SHORTEST_GT(int? description_SHORTEST_GT) =>
      _$this._description_SHORTEST_GT = description_SHORTEST_GT;

  int? _description_GTE;
  int? get description_GTE => _$this._description_GTE;
  set description_GTE(int? description_GTE) =>
      _$this._description_GTE = description_GTE;

  double? _description_AVERAGE_GTE;
  double? get description_AVERAGE_GTE => _$this._description_AVERAGE_GTE;
  set description_AVERAGE_GTE(double? description_AVERAGE_GTE) =>
      _$this._description_AVERAGE_GTE = description_AVERAGE_GTE;

  int? _description_LONGEST_GTE;
  int? get description_LONGEST_GTE => _$this._description_LONGEST_GTE;
  set description_LONGEST_GTE(int? description_LONGEST_GTE) =>
      _$this._description_LONGEST_GTE = description_LONGEST_GTE;

  int? _description_SHORTEST_GTE;
  int? get description_SHORTEST_GTE => _$this._description_SHORTEST_GTE;
  set description_SHORTEST_GTE(int? description_SHORTEST_GTE) =>
      _$this._description_SHORTEST_GTE = description_SHORTEST_GTE;

  int? _description_LT;
  int? get description_LT => _$this._description_LT;
  set description_LT(int? description_LT) =>
      _$this._description_LT = description_LT;

  double? _description_AVERAGE_LT;
  double? get description_AVERAGE_LT => _$this._description_AVERAGE_LT;
  set description_AVERAGE_LT(double? description_AVERAGE_LT) =>
      _$this._description_AVERAGE_LT = description_AVERAGE_LT;

  int? _description_LONGEST_LT;
  int? get description_LONGEST_LT => _$this._description_LONGEST_LT;
  set description_LONGEST_LT(int? description_LONGEST_LT) =>
      _$this._description_LONGEST_LT = description_LONGEST_LT;

  int? _description_SHORTEST_LT;
  int? get description_SHORTEST_LT => _$this._description_SHORTEST_LT;
  set description_SHORTEST_LT(int? description_SHORTEST_LT) =>
      _$this._description_SHORTEST_LT = description_SHORTEST_LT;

  int? _description_LTE;
  int? get description_LTE => _$this._description_LTE;
  set description_LTE(int? description_LTE) =>
      _$this._description_LTE = description_LTE;

  double? _description_AVERAGE_LTE;
  double? get description_AVERAGE_LTE => _$this._description_AVERAGE_LTE;
  set description_AVERAGE_LTE(double? description_AVERAGE_LTE) =>
      _$this._description_AVERAGE_LTE = description_AVERAGE_LTE;

  int? _description_LONGEST_LTE;
  int? get description_LONGEST_LTE => _$this._description_LONGEST_LTE;
  set description_LONGEST_LTE(int? description_LONGEST_LTE) =>
      _$this._description_LONGEST_LTE = description_LONGEST_LTE;

  int? _description_SHORTEST_LTE;
  int? get description_SHORTEST_LTE => _$this._description_SHORTEST_LTE;
  set description_SHORTEST_LTE(int? description_SHORTEST_LTE) =>
      _$this._description_SHORTEST_LTE = description_SHORTEST_LTE;

  String? _layout_EQUAL;
  String? get layout_EQUAL => _$this._layout_EQUAL;
  set layout_EQUAL(String? layout_EQUAL) => _$this._layout_EQUAL = layout_EQUAL;

  double? _layout_AVERAGE_EQUAL;
  double? get layout_AVERAGE_EQUAL => _$this._layout_AVERAGE_EQUAL;
  set layout_AVERAGE_EQUAL(double? layout_AVERAGE_EQUAL) =>
      _$this._layout_AVERAGE_EQUAL = layout_AVERAGE_EQUAL;

  int? _layout_LONGEST_EQUAL;
  int? get layout_LONGEST_EQUAL => _$this._layout_LONGEST_EQUAL;
  set layout_LONGEST_EQUAL(int? layout_LONGEST_EQUAL) =>
      _$this._layout_LONGEST_EQUAL = layout_LONGEST_EQUAL;

  int? _layout_SHORTEST_EQUAL;
  int? get layout_SHORTEST_EQUAL => _$this._layout_SHORTEST_EQUAL;
  set layout_SHORTEST_EQUAL(int? layout_SHORTEST_EQUAL) =>
      _$this._layout_SHORTEST_EQUAL = layout_SHORTEST_EQUAL;

  int? _layout_GT;
  int? get layout_GT => _$this._layout_GT;
  set layout_GT(int? layout_GT) => _$this._layout_GT = layout_GT;

  double? _layout_AVERAGE_GT;
  double? get layout_AVERAGE_GT => _$this._layout_AVERAGE_GT;
  set layout_AVERAGE_GT(double? layout_AVERAGE_GT) =>
      _$this._layout_AVERAGE_GT = layout_AVERAGE_GT;

  int? _layout_LONGEST_GT;
  int? get layout_LONGEST_GT => _$this._layout_LONGEST_GT;
  set layout_LONGEST_GT(int? layout_LONGEST_GT) =>
      _$this._layout_LONGEST_GT = layout_LONGEST_GT;

  int? _layout_SHORTEST_GT;
  int? get layout_SHORTEST_GT => _$this._layout_SHORTEST_GT;
  set layout_SHORTEST_GT(int? layout_SHORTEST_GT) =>
      _$this._layout_SHORTEST_GT = layout_SHORTEST_GT;

  int? _layout_GTE;
  int? get layout_GTE => _$this._layout_GTE;
  set layout_GTE(int? layout_GTE) => _$this._layout_GTE = layout_GTE;

  double? _layout_AVERAGE_GTE;
  double? get layout_AVERAGE_GTE => _$this._layout_AVERAGE_GTE;
  set layout_AVERAGE_GTE(double? layout_AVERAGE_GTE) =>
      _$this._layout_AVERAGE_GTE = layout_AVERAGE_GTE;

  int? _layout_LONGEST_GTE;
  int? get layout_LONGEST_GTE => _$this._layout_LONGEST_GTE;
  set layout_LONGEST_GTE(int? layout_LONGEST_GTE) =>
      _$this._layout_LONGEST_GTE = layout_LONGEST_GTE;

  int? _layout_SHORTEST_GTE;
  int? get layout_SHORTEST_GTE => _$this._layout_SHORTEST_GTE;
  set layout_SHORTEST_GTE(int? layout_SHORTEST_GTE) =>
      _$this._layout_SHORTEST_GTE = layout_SHORTEST_GTE;

  int? _layout_LT;
  int? get layout_LT => _$this._layout_LT;
  set layout_LT(int? layout_LT) => _$this._layout_LT = layout_LT;

  double? _layout_AVERAGE_LT;
  double? get layout_AVERAGE_LT => _$this._layout_AVERAGE_LT;
  set layout_AVERAGE_LT(double? layout_AVERAGE_LT) =>
      _$this._layout_AVERAGE_LT = layout_AVERAGE_LT;

  int? _layout_LONGEST_LT;
  int? get layout_LONGEST_LT => _$this._layout_LONGEST_LT;
  set layout_LONGEST_LT(int? layout_LONGEST_LT) =>
      _$this._layout_LONGEST_LT = layout_LONGEST_LT;

  int? _layout_SHORTEST_LT;
  int? get layout_SHORTEST_LT => _$this._layout_SHORTEST_LT;
  set layout_SHORTEST_LT(int? layout_SHORTEST_LT) =>
      _$this._layout_SHORTEST_LT = layout_SHORTEST_LT;

  int? _layout_LTE;
  int? get layout_LTE => _$this._layout_LTE;
  set layout_LTE(int? layout_LTE) => _$this._layout_LTE = layout_LTE;

  double? _layout_AVERAGE_LTE;
  double? get layout_AVERAGE_LTE => _$this._layout_AVERAGE_LTE;
  set layout_AVERAGE_LTE(double? layout_AVERAGE_LTE) =>
      _$this._layout_AVERAGE_LTE = layout_AVERAGE_LTE;

  int? _layout_LONGEST_LTE;
  int? get layout_LONGEST_LTE => _$this._layout_LONGEST_LTE;
  set layout_LONGEST_LTE(int? layout_LONGEST_LTE) =>
      _$this._layout_LONGEST_LTE = layout_LONGEST_LTE;

  int? _layout_SHORTEST_LTE;
  int? get layout_SHORTEST_LTE => _$this._layout_SHORTEST_LTE;
  set layout_SHORTEST_LTE(int? layout_SHORTEST_LTE) =>
      _$this._layout_SHORTEST_LTE = layout_SHORTEST_LTE;

  int? _orderNumber_EQUAL;
  int? get orderNumber_EQUAL => _$this._orderNumber_EQUAL;
  set orderNumber_EQUAL(int? orderNumber_EQUAL) =>
      _$this._orderNumber_EQUAL = orderNumber_EQUAL;

  double? _orderNumber_AVERAGE_EQUAL;
  double? get orderNumber_AVERAGE_EQUAL => _$this._orderNumber_AVERAGE_EQUAL;
  set orderNumber_AVERAGE_EQUAL(double? orderNumber_AVERAGE_EQUAL) =>
      _$this._orderNumber_AVERAGE_EQUAL = orderNumber_AVERAGE_EQUAL;

  int? _orderNumber_MIN_EQUAL;
  int? get orderNumber_MIN_EQUAL => _$this._orderNumber_MIN_EQUAL;
  set orderNumber_MIN_EQUAL(int? orderNumber_MIN_EQUAL) =>
      _$this._orderNumber_MIN_EQUAL = orderNumber_MIN_EQUAL;

  int? _orderNumber_MAX_EQUAL;
  int? get orderNumber_MAX_EQUAL => _$this._orderNumber_MAX_EQUAL;
  set orderNumber_MAX_EQUAL(int? orderNumber_MAX_EQUAL) =>
      _$this._orderNumber_MAX_EQUAL = orderNumber_MAX_EQUAL;

  int? _orderNumber_SUM_EQUAL;
  int? get orderNumber_SUM_EQUAL => _$this._orderNumber_SUM_EQUAL;
  set orderNumber_SUM_EQUAL(int? orderNumber_SUM_EQUAL) =>
      _$this._orderNumber_SUM_EQUAL = orderNumber_SUM_EQUAL;

  int? _orderNumber_GT;
  int? get orderNumber_GT => _$this._orderNumber_GT;
  set orderNumber_GT(int? orderNumber_GT) =>
      _$this._orderNumber_GT = orderNumber_GT;

  double? _orderNumber_AVERAGE_GT;
  double? get orderNumber_AVERAGE_GT => _$this._orderNumber_AVERAGE_GT;
  set orderNumber_AVERAGE_GT(double? orderNumber_AVERAGE_GT) =>
      _$this._orderNumber_AVERAGE_GT = orderNumber_AVERAGE_GT;

  int? _orderNumber_MIN_GT;
  int? get orderNumber_MIN_GT => _$this._orderNumber_MIN_GT;
  set orderNumber_MIN_GT(int? orderNumber_MIN_GT) =>
      _$this._orderNumber_MIN_GT = orderNumber_MIN_GT;

  int? _orderNumber_MAX_GT;
  int? get orderNumber_MAX_GT => _$this._orderNumber_MAX_GT;
  set orderNumber_MAX_GT(int? orderNumber_MAX_GT) =>
      _$this._orderNumber_MAX_GT = orderNumber_MAX_GT;

  int? _orderNumber_SUM_GT;
  int? get orderNumber_SUM_GT => _$this._orderNumber_SUM_GT;
  set orderNumber_SUM_GT(int? orderNumber_SUM_GT) =>
      _$this._orderNumber_SUM_GT = orderNumber_SUM_GT;

  int? _orderNumber_GTE;
  int? get orderNumber_GTE => _$this._orderNumber_GTE;
  set orderNumber_GTE(int? orderNumber_GTE) =>
      _$this._orderNumber_GTE = orderNumber_GTE;

  double? _orderNumber_AVERAGE_GTE;
  double? get orderNumber_AVERAGE_GTE => _$this._orderNumber_AVERAGE_GTE;
  set orderNumber_AVERAGE_GTE(double? orderNumber_AVERAGE_GTE) =>
      _$this._orderNumber_AVERAGE_GTE = orderNumber_AVERAGE_GTE;

  int? _orderNumber_MIN_GTE;
  int? get orderNumber_MIN_GTE => _$this._orderNumber_MIN_GTE;
  set orderNumber_MIN_GTE(int? orderNumber_MIN_GTE) =>
      _$this._orderNumber_MIN_GTE = orderNumber_MIN_GTE;

  int? _orderNumber_MAX_GTE;
  int? get orderNumber_MAX_GTE => _$this._orderNumber_MAX_GTE;
  set orderNumber_MAX_GTE(int? orderNumber_MAX_GTE) =>
      _$this._orderNumber_MAX_GTE = orderNumber_MAX_GTE;

  int? _orderNumber_SUM_GTE;
  int? get orderNumber_SUM_GTE => _$this._orderNumber_SUM_GTE;
  set orderNumber_SUM_GTE(int? orderNumber_SUM_GTE) =>
      _$this._orderNumber_SUM_GTE = orderNumber_SUM_GTE;

  int? _orderNumber_LT;
  int? get orderNumber_LT => _$this._orderNumber_LT;
  set orderNumber_LT(int? orderNumber_LT) =>
      _$this._orderNumber_LT = orderNumber_LT;

  double? _orderNumber_AVERAGE_LT;
  double? get orderNumber_AVERAGE_LT => _$this._orderNumber_AVERAGE_LT;
  set orderNumber_AVERAGE_LT(double? orderNumber_AVERAGE_LT) =>
      _$this._orderNumber_AVERAGE_LT = orderNumber_AVERAGE_LT;

  int? _orderNumber_MIN_LT;
  int? get orderNumber_MIN_LT => _$this._orderNumber_MIN_LT;
  set orderNumber_MIN_LT(int? orderNumber_MIN_LT) =>
      _$this._orderNumber_MIN_LT = orderNumber_MIN_LT;

  int? _orderNumber_MAX_LT;
  int? get orderNumber_MAX_LT => _$this._orderNumber_MAX_LT;
  set orderNumber_MAX_LT(int? orderNumber_MAX_LT) =>
      _$this._orderNumber_MAX_LT = orderNumber_MAX_LT;

  int? _orderNumber_SUM_LT;
  int? get orderNumber_SUM_LT => _$this._orderNumber_SUM_LT;
  set orderNumber_SUM_LT(int? orderNumber_SUM_LT) =>
      _$this._orderNumber_SUM_LT = orderNumber_SUM_LT;

  int? _orderNumber_LTE;
  int? get orderNumber_LTE => _$this._orderNumber_LTE;
  set orderNumber_LTE(int? orderNumber_LTE) =>
      _$this._orderNumber_LTE = orderNumber_LTE;

  double? _orderNumber_AVERAGE_LTE;
  double? get orderNumber_AVERAGE_LTE => _$this._orderNumber_AVERAGE_LTE;
  set orderNumber_AVERAGE_LTE(double? orderNumber_AVERAGE_LTE) =>
      _$this._orderNumber_AVERAGE_LTE = orderNumber_AVERAGE_LTE;

  int? _orderNumber_MIN_LTE;
  int? get orderNumber_MIN_LTE => _$this._orderNumber_MIN_LTE;
  set orderNumber_MIN_LTE(int? orderNumber_MIN_LTE) =>
      _$this._orderNumber_MIN_LTE = orderNumber_MIN_LTE;

  int? _orderNumber_MAX_LTE;
  int? get orderNumber_MAX_LTE => _$this._orderNumber_MAX_LTE;
  set orderNumber_MAX_LTE(int? orderNumber_MAX_LTE) =>
      _$this._orderNumber_MAX_LTE = orderNumber_MAX_LTE;

  int? _orderNumber_SUM_LTE;
  int? get orderNumber_SUM_LTE => _$this._orderNumber_SUM_LTE;
  set orderNumber_SUM_LTE(int? orderNumber_SUM_LTE) =>
      _$this._orderNumber_SUM_LTE = orderNumber_SUM_LTE;

  GProjectPagesNodeAggregationWhereInputBuilder();

  GProjectPagesNodeAggregationWhereInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _id_EQUAL = $v.id_EQUAL;
      _title_EQUAL = $v.title_EQUAL;
      _title_AVERAGE_EQUAL = $v.title_AVERAGE_EQUAL;
      _title_LONGEST_EQUAL = $v.title_LONGEST_EQUAL;
      _title_SHORTEST_EQUAL = $v.title_SHORTEST_EQUAL;
      _title_GT = $v.title_GT;
      _title_AVERAGE_GT = $v.title_AVERAGE_GT;
      _title_LONGEST_GT = $v.title_LONGEST_GT;
      _title_SHORTEST_GT = $v.title_SHORTEST_GT;
      _title_GTE = $v.title_GTE;
      _title_AVERAGE_GTE = $v.title_AVERAGE_GTE;
      _title_LONGEST_GTE = $v.title_LONGEST_GTE;
      _title_SHORTEST_GTE = $v.title_SHORTEST_GTE;
      _title_LT = $v.title_LT;
      _title_AVERAGE_LT = $v.title_AVERAGE_LT;
      _title_LONGEST_LT = $v.title_LONGEST_LT;
      _title_SHORTEST_LT = $v.title_SHORTEST_LT;
      _title_LTE = $v.title_LTE;
      _title_AVERAGE_LTE = $v.title_AVERAGE_LTE;
      _title_LONGEST_LTE = $v.title_LONGEST_LTE;
      _title_SHORTEST_LTE = $v.title_SHORTEST_LTE;
      _description_EQUAL = $v.description_EQUAL;
      _description_AVERAGE_EQUAL = $v.description_AVERAGE_EQUAL;
      _description_LONGEST_EQUAL = $v.description_LONGEST_EQUAL;
      _description_SHORTEST_EQUAL = $v.description_SHORTEST_EQUAL;
      _description_GT = $v.description_GT;
      _description_AVERAGE_GT = $v.description_AVERAGE_GT;
      _description_LONGEST_GT = $v.description_LONGEST_GT;
      _description_SHORTEST_GT = $v.description_SHORTEST_GT;
      _description_GTE = $v.description_GTE;
      _description_AVERAGE_GTE = $v.description_AVERAGE_GTE;
      _description_LONGEST_GTE = $v.description_LONGEST_GTE;
      _description_SHORTEST_GTE = $v.description_SHORTEST_GTE;
      _description_LT = $v.description_LT;
      _description_AVERAGE_LT = $v.description_AVERAGE_LT;
      _description_LONGEST_LT = $v.description_LONGEST_LT;
      _description_SHORTEST_LT = $v.description_SHORTEST_LT;
      _description_LTE = $v.description_LTE;
      _description_AVERAGE_LTE = $v.description_AVERAGE_LTE;
      _description_LONGEST_LTE = $v.description_LONGEST_LTE;
      _description_SHORTEST_LTE = $v.description_SHORTEST_LTE;
      _layout_EQUAL = $v.layout_EQUAL;
      _layout_AVERAGE_EQUAL = $v.layout_AVERAGE_EQUAL;
      _layout_LONGEST_EQUAL = $v.layout_LONGEST_EQUAL;
      _layout_SHORTEST_EQUAL = $v.layout_SHORTEST_EQUAL;
      _layout_GT = $v.layout_GT;
      _layout_AVERAGE_GT = $v.layout_AVERAGE_GT;
      _layout_LONGEST_GT = $v.layout_LONGEST_GT;
      _layout_SHORTEST_GT = $v.layout_SHORTEST_GT;
      _layout_GTE = $v.layout_GTE;
      _layout_AVERAGE_GTE = $v.layout_AVERAGE_GTE;
      _layout_LONGEST_GTE = $v.layout_LONGEST_GTE;
      _layout_SHORTEST_GTE = $v.layout_SHORTEST_GTE;
      _layout_LT = $v.layout_LT;
      _layout_AVERAGE_LT = $v.layout_AVERAGE_LT;
      _layout_LONGEST_LT = $v.layout_LONGEST_LT;
      _layout_SHORTEST_LT = $v.layout_SHORTEST_LT;
      _layout_LTE = $v.layout_LTE;
      _layout_AVERAGE_LTE = $v.layout_AVERAGE_LTE;
      _layout_LONGEST_LTE = $v.layout_LONGEST_LTE;
      _layout_SHORTEST_LTE = $v.layout_SHORTEST_LTE;
      _orderNumber_EQUAL = $v.orderNumber_EQUAL;
      _orderNumber_AVERAGE_EQUAL = $v.orderNumber_AVERAGE_EQUAL;
      _orderNumber_MIN_EQUAL = $v.orderNumber_MIN_EQUAL;
      _orderNumber_MAX_EQUAL = $v.orderNumber_MAX_EQUAL;
      _orderNumber_SUM_EQUAL = $v.orderNumber_SUM_EQUAL;
      _orderNumber_GT = $v.orderNumber_GT;
      _orderNumber_AVERAGE_GT = $v.orderNumber_AVERAGE_GT;
      _orderNumber_MIN_GT = $v.orderNumber_MIN_GT;
      _orderNumber_MAX_GT = $v.orderNumber_MAX_GT;
      _orderNumber_SUM_GT = $v.orderNumber_SUM_GT;
      _orderNumber_GTE = $v.orderNumber_GTE;
      _orderNumber_AVERAGE_GTE = $v.orderNumber_AVERAGE_GTE;
      _orderNumber_MIN_GTE = $v.orderNumber_MIN_GTE;
      _orderNumber_MAX_GTE = $v.orderNumber_MAX_GTE;
      _orderNumber_SUM_GTE = $v.orderNumber_SUM_GTE;
      _orderNumber_LT = $v.orderNumber_LT;
      _orderNumber_AVERAGE_LT = $v.orderNumber_AVERAGE_LT;
      _orderNumber_MIN_LT = $v.orderNumber_MIN_LT;
      _orderNumber_MAX_LT = $v.orderNumber_MAX_LT;
      _orderNumber_SUM_LT = $v.orderNumber_SUM_LT;
      _orderNumber_LTE = $v.orderNumber_LTE;
      _orderNumber_AVERAGE_LTE = $v.orderNumber_AVERAGE_LTE;
      _orderNumber_MIN_LTE = $v.orderNumber_MIN_LTE;
      _orderNumber_MAX_LTE = $v.orderNumber_MAX_LTE;
      _orderNumber_SUM_LTE = $v.orderNumber_SUM_LTE;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesNodeAggregationWhereInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesNodeAggregationWhereInput;
  }

  @override
  void update(
      void Function(GProjectPagesNodeAggregationWhereInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesNodeAggregationWhereInput build() => _build();

  _$GProjectPagesNodeAggregationWhereInput _build() {
    _$GProjectPagesNodeAggregationWhereInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesNodeAggregationWhereInput._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              id_EQUAL: id_EQUAL,
              title_EQUAL: title_EQUAL,
              title_AVERAGE_EQUAL: title_AVERAGE_EQUAL,
              title_LONGEST_EQUAL: title_LONGEST_EQUAL,
              title_SHORTEST_EQUAL: title_SHORTEST_EQUAL,
              title_GT: title_GT,
              title_AVERAGE_GT: title_AVERAGE_GT,
              title_LONGEST_GT: title_LONGEST_GT,
              title_SHORTEST_GT: title_SHORTEST_GT,
              title_GTE: title_GTE,
              title_AVERAGE_GTE: title_AVERAGE_GTE,
              title_LONGEST_GTE: title_LONGEST_GTE,
              title_SHORTEST_GTE: title_SHORTEST_GTE,
              title_LT: title_LT,
              title_AVERAGE_LT: title_AVERAGE_LT,
              title_LONGEST_LT: title_LONGEST_LT,
              title_SHORTEST_LT: title_SHORTEST_LT,
              title_LTE: title_LTE,
              title_AVERAGE_LTE: title_AVERAGE_LTE,
              title_LONGEST_LTE: title_LONGEST_LTE,
              title_SHORTEST_LTE: title_SHORTEST_LTE,
              description_EQUAL: description_EQUAL,
              description_AVERAGE_EQUAL: description_AVERAGE_EQUAL,
              description_LONGEST_EQUAL: description_LONGEST_EQUAL,
              description_SHORTEST_EQUAL: description_SHORTEST_EQUAL,
              description_GT: description_GT,
              description_AVERAGE_GT: description_AVERAGE_GT,
              description_LONGEST_GT: description_LONGEST_GT,
              description_SHORTEST_GT: description_SHORTEST_GT,
              description_GTE: description_GTE,
              description_AVERAGE_GTE: description_AVERAGE_GTE,
              description_LONGEST_GTE: description_LONGEST_GTE,
              description_SHORTEST_GTE: description_SHORTEST_GTE,
              description_LT: description_LT,
              description_AVERAGE_LT: description_AVERAGE_LT,
              description_LONGEST_LT: description_LONGEST_LT,
              description_SHORTEST_LT: description_SHORTEST_LT,
              description_LTE: description_LTE,
              description_AVERAGE_LTE: description_AVERAGE_LTE,
              description_LONGEST_LTE: description_LONGEST_LTE,
              description_SHORTEST_LTE: description_SHORTEST_LTE,
              layout_EQUAL: layout_EQUAL,
              layout_AVERAGE_EQUAL: layout_AVERAGE_EQUAL,
              layout_LONGEST_EQUAL: layout_LONGEST_EQUAL,
              layout_SHORTEST_EQUAL: layout_SHORTEST_EQUAL,
              layout_GT: layout_GT,
              layout_AVERAGE_GT: layout_AVERAGE_GT,
              layout_LONGEST_GT: layout_LONGEST_GT,
              layout_SHORTEST_GT: layout_SHORTEST_GT,
              layout_GTE: layout_GTE,
              layout_AVERAGE_GTE: layout_AVERAGE_GTE,
              layout_LONGEST_GTE: layout_LONGEST_GTE,
              layout_SHORTEST_GTE: layout_SHORTEST_GTE,
              layout_LT: layout_LT,
              layout_AVERAGE_LT: layout_AVERAGE_LT,
              layout_LONGEST_LT: layout_LONGEST_LT,
              layout_SHORTEST_LT: layout_SHORTEST_LT,
              layout_LTE: layout_LTE,
              layout_AVERAGE_LTE: layout_AVERAGE_LTE,
              layout_LONGEST_LTE: layout_LONGEST_LTE,
              layout_SHORTEST_LTE: layout_SHORTEST_LTE,
              orderNumber_EQUAL: orderNumber_EQUAL,
              orderNumber_AVERAGE_EQUAL: orderNumber_AVERAGE_EQUAL,
              orderNumber_MIN_EQUAL: orderNumber_MIN_EQUAL,
              orderNumber_MAX_EQUAL: orderNumber_MAX_EQUAL,
              orderNumber_SUM_EQUAL: orderNumber_SUM_EQUAL,
              orderNumber_GT: orderNumber_GT,
              orderNumber_AVERAGE_GT: orderNumber_AVERAGE_GT,
              orderNumber_MIN_GT: orderNumber_MIN_GT,
              orderNumber_MAX_GT: orderNumber_MAX_GT,
              orderNumber_SUM_GT: orderNumber_SUM_GT,
              orderNumber_GTE: orderNumber_GTE,
              orderNumber_AVERAGE_GTE: orderNumber_AVERAGE_GTE,
              orderNumber_MIN_GTE: orderNumber_MIN_GTE,
              orderNumber_MAX_GTE: orderNumber_MAX_GTE,
              orderNumber_SUM_GTE: orderNumber_SUM_GTE,
              orderNumber_LT: orderNumber_LT,
              orderNumber_AVERAGE_LT: orderNumber_AVERAGE_LT,
              orderNumber_MIN_LT: orderNumber_MIN_LT,
              orderNumber_MAX_LT: orderNumber_MAX_LT,
              orderNumber_SUM_LT: orderNumber_SUM_LT,
              orderNumber_LTE: orderNumber_LTE,
              orderNumber_AVERAGE_LTE: orderNumber_AVERAGE_LTE,
              orderNumber_MIN_LTE: orderNumber_MIN_LTE,
              orderNumber_MAX_LTE: orderNumber_MAX_LTE,
              orderNumber_SUM_LTE: orderNumber_SUM_LTE);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesNodeAggregationWhereInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesUpdateConnectionInput
    extends GProjectPagesUpdateConnectionInput {
  @override
  final GPageUpdateInput? node;

  factory _$GProjectPagesUpdateConnectionInput(
          [void Function(GProjectPagesUpdateConnectionInputBuilder)?
              updates]) =>
      (new GProjectPagesUpdateConnectionInputBuilder()..update(updates))
          ._build();

  _$GProjectPagesUpdateConnectionInput._({this.node}) : super._();

  @override
  GProjectPagesUpdateConnectionInput rebuild(
          void Function(GProjectPagesUpdateConnectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesUpdateConnectionInputBuilder toBuilder() =>
      new GProjectPagesUpdateConnectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesUpdateConnectionInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesUpdateConnectionInput')
          ..add('node', node))
        .toString();
  }
}

class GProjectPagesUpdateConnectionInputBuilder
    implements
        Builder<GProjectPagesUpdateConnectionInput,
            GProjectPagesUpdateConnectionInputBuilder> {
  _$GProjectPagesUpdateConnectionInput? _$v;

  GPageUpdateInputBuilder? _node;
  GPageUpdateInputBuilder get node =>
      _$this._node ??= new GPageUpdateInputBuilder();
  set node(GPageUpdateInputBuilder? node) => _$this._node = node;

  GProjectPagesUpdateConnectionInputBuilder();

  GProjectPagesUpdateConnectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesUpdateConnectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesUpdateConnectionInput;
  }

  @override
  void update(
      void Function(GProjectPagesUpdateConnectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesUpdateConnectionInput build() => _build();

  _$GProjectPagesUpdateConnectionInput _build() {
    _$GProjectPagesUpdateConnectionInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesUpdateConnectionInput._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesUpdateConnectionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectPagesUpdateFieldInput extends GProjectPagesUpdateFieldInput {
  @override
  final GProjectPagesConnectionWhere? where;
  @override
  final GProjectPagesUpdateConnectionInput? Gupdate;
  @override
  final BuiltList<GProjectPagesConnectFieldInput>? connect;
  @override
  final BuiltList<GProjectPagesDisconnectFieldInput>? disconnect;
  @override
  final BuiltList<GProjectPagesCreateFieldInput>? create;
  @override
  final BuiltList<GProjectPagesDeleteFieldInput>? delete;
  @override
  final BuiltList<GProjectPagesConnectOrCreateFieldInput>? connectOrCreate;

  factory _$GProjectPagesUpdateFieldInput(
          [void Function(GProjectPagesUpdateFieldInputBuilder)? updates]) =>
      (new GProjectPagesUpdateFieldInputBuilder()..update(updates))._build();

  _$GProjectPagesUpdateFieldInput._(
      {this.where,
      this.Gupdate,
      this.connect,
      this.disconnect,
      this.create,
      this.delete,
      this.connectOrCreate})
      : super._();

  @override
  GProjectPagesUpdateFieldInput rebuild(
          void Function(GProjectPagesUpdateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectPagesUpdateFieldInputBuilder toBuilder() =>
      new GProjectPagesUpdateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectPagesUpdateFieldInput &&
        where == other.where &&
        Gupdate == other.Gupdate &&
        connect == other.connect &&
        disconnect == other.disconnect &&
        create == other.create &&
        delete == other.delete &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, where.hashCode), Gupdate.hashCode),
                        connect.hashCode),
                    disconnect.hashCode),
                create.hashCode),
            delete.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectPagesUpdateFieldInput')
          ..add('where', where)
          ..add('Gupdate', Gupdate)
          ..add('connect', connect)
          ..add('disconnect', disconnect)
          ..add('create', create)
          ..add('delete', delete)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GProjectPagesUpdateFieldInputBuilder
    implements
        Builder<GProjectPagesUpdateFieldInput,
            GProjectPagesUpdateFieldInputBuilder> {
  _$GProjectPagesUpdateFieldInput? _$v;

  GProjectPagesConnectionWhereBuilder? _where;
  GProjectPagesConnectionWhereBuilder get where =>
      _$this._where ??= new GProjectPagesConnectionWhereBuilder();
  set where(GProjectPagesConnectionWhereBuilder? where) =>
      _$this._where = where;

  GProjectPagesUpdateConnectionInputBuilder? _Gupdate;
  GProjectPagesUpdateConnectionInputBuilder get Gupdate =>
      _$this._Gupdate ??= new GProjectPagesUpdateConnectionInputBuilder();
  set Gupdate(GProjectPagesUpdateConnectionInputBuilder? Gupdate) =>
      _$this._Gupdate = Gupdate;

  ListBuilder<GProjectPagesConnectFieldInput>? _connect;
  ListBuilder<GProjectPagesConnectFieldInput> get connect =>
      _$this._connect ??= new ListBuilder<GProjectPagesConnectFieldInput>();
  set connect(ListBuilder<GProjectPagesConnectFieldInput>? connect) =>
      _$this._connect = connect;

  ListBuilder<GProjectPagesDisconnectFieldInput>? _disconnect;
  ListBuilder<GProjectPagesDisconnectFieldInput> get disconnect =>
      _$this._disconnect ??=
          new ListBuilder<GProjectPagesDisconnectFieldInput>();
  set disconnect(ListBuilder<GProjectPagesDisconnectFieldInput>? disconnect) =>
      _$this._disconnect = disconnect;

  ListBuilder<GProjectPagesCreateFieldInput>? _create;
  ListBuilder<GProjectPagesCreateFieldInput> get create =>
      _$this._create ??= new ListBuilder<GProjectPagesCreateFieldInput>();
  set create(ListBuilder<GProjectPagesCreateFieldInput>? create) =>
      _$this._create = create;

  ListBuilder<GProjectPagesDeleteFieldInput>? _delete;
  ListBuilder<GProjectPagesDeleteFieldInput> get delete =>
      _$this._delete ??= new ListBuilder<GProjectPagesDeleteFieldInput>();
  set delete(ListBuilder<GProjectPagesDeleteFieldInput>? delete) =>
      _$this._delete = delete;

  ListBuilder<GProjectPagesConnectOrCreateFieldInput>? _connectOrCreate;
  ListBuilder<GProjectPagesConnectOrCreateFieldInput> get connectOrCreate =>
      _$this._connectOrCreate ??=
          new ListBuilder<GProjectPagesConnectOrCreateFieldInput>();
  set connectOrCreate(
          ListBuilder<GProjectPagesConnectOrCreateFieldInput>?
              connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GProjectPagesUpdateFieldInputBuilder();

  GProjectPagesUpdateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _Gupdate = $v.Gupdate?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _create = $v.create?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectPagesUpdateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectPagesUpdateFieldInput;
  }

  @override
  void update(void Function(GProjectPagesUpdateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectPagesUpdateFieldInput build() => _build();

  _$GProjectPagesUpdateFieldInput _build() {
    _$GProjectPagesUpdateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectPagesUpdateFieldInput._(
              where: _where?.build(),
              Gupdate: _Gupdate?.build(),
              connect: _connect?.build(),
              disconnect: _disconnect?.build(),
              create: _create?.build(),
              delete: _delete?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'Gupdate';
        _Gupdate?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'delete';
        _delete?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectPagesUpdateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectRelationInput extends GProjectRelationInput {
  @override
  final BuiltList<GProjectPagesCreateFieldInput>? pages;
  @override
  final GProjectOwnerCreateFieldInput? owner;

  factory _$GProjectRelationInput(
          [void Function(GProjectRelationInputBuilder)? updates]) =>
      (new GProjectRelationInputBuilder()..update(updates))._build();

  _$GProjectRelationInput._({this.pages, this.owner}) : super._();

  @override
  GProjectRelationInput rebuild(
          void Function(GProjectRelationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectRelationInputBuilder toBuilder() =>
      new GProjectRelationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectRelationInput &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, pages.hashCode), owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectRelationInput')
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectRelationInputBuilder
    implements Builder<GProjectRelationInput, GProjectRelationInputBuilder> {
  _$GProjectRelationInput? _$v;

  ListBuilder<GProjectPagesCreateFieldInput>? _pages;
  ListBuilder<GProjectPagesCreateFieldInput> get pages =>
      _$this._pages ??= new ListBuilder<GProjectPagesCreateFieldInput>();
  set pages(ListBuilder<GProjectPagesCreateFieldInput>? pages) =>
      _$this._pages = pages;

  GProjectOwnerCreateFieldInputBuilder? _owner;
  GProjectOwnerCreateFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerCreateFieldInputBuilder();
  set owner(GProjectOwnerCreateFieldInputBuilder? owner) =>
      _$this._owner = owner;

  GProjectRelationInputBuilder();

  GProjectRelationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectRelationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectRelationInput;
  }

  @override
  void update(void Function(GProjectRelationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectRelationInput build() => _build();

  _$GProjectRelationInput _build() {
    _$GProjectRelationInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectRelationInput._(
              pages: _pages?.build(), owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectRelationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectSort extends GProjectSort {
  @override
  final GSortDirection? id;
  @override
  final GSortDirection? title;
  @override
  final GSortDirection? description;
  @override
  final GSortDirection? creationDate;
  @override
  final GSortDirection? modifiedDate;

  factory _$GProjectSort([void Function(GProjectSortBuilder)? updates]) =>
      (new GProjectSortBuilder()..update(updates))._build();

  _$GProjectSort._(
      {this.id,
      this.title,
      this.description,
      this.creationDate,
      this.modifiedDate})
      : super._();

  @override
  GProjectSort rebuild(void Function(GProjectSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectSortBuilder toBuilder() => new GProjectSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectSort &&
        id == other.id &&
        title == other.title &&
        description == other.description &&
        creationDate == other.creationDate &&
        modifiedDate == other.modifiedDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, id.hashCode), title.hashCode), description.hashCode),
            creationDate.hashCode),
        modifiedDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectSort')
          ..add('id', id)
          ..add('title', title)
          ..add('description', description)
          ..add('creationDate', creationDate)
          ..add('modifiedDate', modifiedDate))
        .toString();
  }
}

class GProjectSortBuilder
    implements Builder<GProjectSort, GProjectSortBuilder> {
  _$GProjectSort? _$v;

  GSortDirection? _id;
  GSortDirection? get id => _$this._id;
  set id(GSortDirection? id) => _$this._id = id;

  GSortDirection? _title;
  GSortDirection? get title => _$this._title;
  set title(GSortDirection? title) => _$this._title = title;

  GSortDirection? _description;
  GSortDirection? get description => _$this._description;
  set description(GSortDirection? description) =>
      _$this._description = description;

  GSortDirection? _creationDate;
  GSortDirection? get creationDate => _$this._creationDate;
  set creationDate(GSortDirection? creationDate) =>
      _$this._creationDate = creationDate;

  GSortDirection? _modifiedDate;
  GSortDirection? get modifiedDate => _$this._modifiedDate;
  set modifiedDate(GSortDirection? modifiedDate) =>
      _$this._modifiedDate = modifiedDate;

  GProjectSortBuilder();

  GProjectSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _title = $v.title;
      _description = $v.description;
      _creationDate = $v.creationDate;
      _modifiedDate = $v.modifiedDate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectSort;
  }

  @override
  void update(void Function(GProjectSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectSort build() => _build();

  _$GProjectSort _build() {
    final _$result = _$v ??
        new _$GProjectSort._(
            id: id,
            title: title,
            description: description,
            creationDate: creationDate,
            modifiedDate: modifiedDate);
    replace(_$result);
    return _$result;
  }
}

class _$GProjectUniqueWhere extends GProjectUniqueWhere {
  @override
  final String? id;

  factory _$GProjectUniqueWhere(
          [void Function(GProjectUniqueWhereBuilder)? updates]) =>
      (new GProjectUniqueWhereBuilder()..update(updates))._build();

  _$GProjectUniqueWhere._({this.id}) : super._();

  @override
  GProjectUniqueWhere rebuild(
          void Function(GProjectUniqueWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectUniqueWhereBuilder toBuilder() =>
      new GProjectUniqueWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectUniqueWhere && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectUniqueWhere')..add('id', id))
        .toString();
  }
}

class GProjectUniqueWhereBuilder
    implements Builder<GProjectUniqueWhere, GProjectUniqueWhereBuilder> {
  _$GProjectUniqueWhere? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GProjectUniqueWhereBuilder();

  GProjectUniqueWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectUniqueWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectUniqueWhere;
  }

  @override
  void update(void Function(GProjectUniqueWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectUniqueWhere build() => _build();

  _$GProjectUniqueWhere _build() {
    final _$result = _$v ?? new _$GProjectUniqueWhere._(id: id);
    replace(_$result);
    return _$result;
  }
}

class _$GProjectUpdateInput extends GProjectUpdateInput {
  @override
  final String? title;
  @override
  final String? description;
  @override
  final BuiltList<GProjectPagesUpdateFieldInput>? pages;
  @override
  final GProjectOwnerUpdateFieldInput? owner;

  factory _$GProjectUpdateInput(
          [void Function(GProjectUpdateInputBuilder)? updates]) =>
      (new GProjectUpdateInputBuilder()..update(updates))._build();

  _$GProjectUpdateInput._(
      {this.title, this.description, this.pages, this.owner})
      : super._();

  @override
  GProjectUpdateInput rebuild(
          void Function(GProjectUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectUpdateInputBuilder toBuilder() =>
      new GProjectUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectUpdateInput &&
        title == other.title &&
        description == other.description &&
        pages == other.pages &&
        owner == other.owner;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, title.hashCode), description.hashCode), pages.hashCode),
        owner.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectUpdateInput')
          ..add('title', title)
          ..add('description', description)
          ..add('pages', pages)
          ..add('owner', owner))
        .toString();
  }
}

class GProjectUpdateInputBuilder
    implements Builder<GProjectUpdateInput, GProjectUpdateInputBuilder> {
  _$GProjectUpdateInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<GProjectPagesUpdateFieldInput>? _pages;
  ListBuilder<GProjectPagesUpdateFieldInput> get pages =>
      _$this._pages ??= new ListBuilder<GProjectPagesUpdateFieldInput>();
  set pages(ListBuilder<GProjectPagesUpdateFieldInput>? pages) =>
      _$this._pages = pages;

  GProjectOwnerUpdateFieldInputBuilder? _owner;
  GProjectOwnerUpdateFieldInputBuilder get owner =>
      _$this._owner ??= new GProjectOwnerUpdateFieldInputBuilder();
  set owner(GProjectOwnerUpdateFieldInputBuilder? owner) =>
      _$this._owner = owner;

  GProjectUpdateInputBuilder();

  GProjectUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _pages = $v.pages?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectUpdateInput;
  }

  @override
  void update(void Function(GProjectUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectUpdateInput build() => _build();

  _$GProjectUpdateInput _build() {
    _$GProjectUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GProjectUpdateInput._(
              title: title,
              description: description,
              pages: _pages?.build(),
              owner: _owner?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pages';
        _pages?.build();
        _$failedField = 'owner';
        _owner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProjectWhere extends GProjectWhere {
  @override
  final BuiltList<GProjectWhere>? OR;
  @override
  final BuiltList<GProjectWhere>? AND;
  @override
  final String? id;
  @override
  final String? id_NOT;
  @override
  final BuiltList<String>? id_IN;
  @override
  final BuiltList<String>? id_NOT_IN;
  @override
  final String? id_CONTAINS;
  @override
  final String? id_NOT_CONTAINS;
  @override
  final String? id_STARTS_WITH;
  @override
  final String? id_NOT_STARTS_WITH;
  @override
  final String? id_ENDS_WITH;
  @override
  final String? id_NOT_ENDS_WITH;
  @override
  final String? title;
  @override
  final String? title_NOT;
  @override
  final BuiltList<String>? title_IN;
  @override
  final BuiltList<String>? title_NOT_IN;
  @override
  final String? title_CONTAINS;
  @override
  final String? title_NOT_CONTAINS;
  @override
  final String? title_STARTS_WITH;
  @override
  final String? title_NOT_STARTS_WITH;
  @override
  final String? title_ENDS_WITH;
  @override
  final String? title_NOT_ENDS_WITH;
  @override
  final String? description;
  @override
  final String? description_NOT;
  @override
  final BuiltList<String>? description_IN;
  @override
  final BuiltList<String>? description_NOT_IN;
  @override
  final String? description_CONTAINS;
  @override
  final String? description_NOT_CONTAINS;
  @override
  final String? description_STARTS_WITH;
  @override
  final String? description_NOT_STARTS_WITH;
  @override
  final String? description_ENDS_WITH;
  @override
  final String? description_NOT_ENDS_WITH;
  @override
  final GDateTime? creationDate;
  @override
  final GDateTime? creationDate_NOT;
  @override
  final BuiltList<GDateTime>? creationDate_IN;
  @override
  final BuiltList<GDateTime>? creationDate_NOT_IN;
  @override
  final GDateTime? creationDate_LT;
  @override
  final GDateTime? creationDate_LTE;
  @override
  final GDateTime? creationDate_GT;
  @override
  final GDateTime? creationDate_GTE;
  @override
  final GDateTime? modifiedDate;
  @override
  final GDateTime? modifiedDate_NOT;
  @override
  final BuiltList<GDateTime>? modifiedDate_IN;
  @override
  final BuiltList<GDateTime>? modifiedDate_NOT_IN;
  @override
  final GDateTime? modifiedDate_LT;
  @override
  final GDateTime? modifiedDate_LTE;
  @override
  final GDateTime? modifiedDate_GT;
  @override
  final GDateTime? modifiedDate_GTE;
  @override
  final GProjectPagesAggregateInput? pagesAggregate;
  @override
  final GPageWhere? pages_ALL;
  @override
  final GPageWhere? pages_NONE;
  @override
  final GPageWhere? pages_SINGLE;
  @override
  final GPageWhere? pages_SOME;
  @override
  final GUserWhere? owner;
  @override
  final GUserWhere? owner_NOT;
  @override
  final GProjectOwnerAggregateInput? ownerAggregate;
  @override
  final GProjectPagesConnectionWhere? pagesConnection_ALL;
  @override
  final GProjectPagesConnectionWhere? pagesConnection_NONE;
  @override
  final GProjectPagesConnectionWhere? pagesConnection_SINGLE;
  @override
  final GProjectPagesConnectionWhere? pagesConnection_SOME;
  @override
  final GProjectOwnerConnectionWhere? ownerConnection;
  @override
  final GProjectOwnerConnectionWhere? ownerConnection_NOT;

  factory _$GProjectWhere([void Function(GProjectWhereBuilder)? updates]) =>
      (new GProjectWhereBuilder()..update(updates))._build();

  _$GProjectWhere._(
      {this.OR,
      this.AND,
      this.id,
      this.id_NOT,
      this.id_IN,
      this.id_NOT_IN,
      this.id_CONTAINS,
      this.id_NOT_CONTAINS,
      this.id_STARTS_WITH,
      this.id_NOT_STARTS_WITH,
      this.id_ENDS_WITH,
      this.id_NOT_ENDS_WITH,
      this.title,
      this.title_NOT,
      this.title_IN,
      this.title_NOT_IN,
      this.title_CONTAINS,
      this.title_NOT_CONTAINS,
      this.title_STARTS_WITH,
      this.title_NOT_STARTS_WITH,
      this.title_ENDS_WITH,
      this.title_NOT_ENDS_WITH,
      this.description,
      this.description_NOT,
      this.description_IN,
      this.description_NOT_IN,
      this.description_CONTAINS,
      this.description_NOT_CONTAINS,
      this.description_STARTS_WITH,
      this.description_NOT_STARTS_WITH,
      this.description_ENDS_WITH,
      this.description_NOT_ENDS_WITH,
      this.creationDate,
      this.creationDate_NOT,
      this.creationDate_IN,
      this.creationDate_NOT_IN,
      this.creationDate_LT,
      this.creationDate_LTE,
      this.creationDate_GT,
      this.creationDate_GTE,
      this.modifiedDate,
      this.modifiedDate_NOT,
      this.modifiedDate_IN,
      this.modifiedDate_NOT_IN,
      this.modifiedDate_LT,
      this.modifiedDate_LTE,
      this.modifiedDate_GT,
      this.modifiedDate_GTE,
      this.pagesAggregate,
      this.pages_ALL,
      this.pages_NONE,
      this.pages_SINGLE,
      this.pages_SOME,
      this.owner,
      this.owner_NOT,
      this.ownerAggregate,
      this.pagesConnection_ALL,
      this.pagesConnection_NONE,
      this.pagesConnection_SINGLE,
      this.pagesConnection_SOME,
      this.ownerConnection,
      this.ownerConnection_NOT})
      : super._();

  @override
  GProjectWhere rebuild(void Function(GProjectWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProjectWhereBuilder toBuilder() => new GProjectWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProjectWhere &&
        OR == other.OR &&
        AND == other.AND &&
        id == other.id &&
        id_NOT == other.id_NOT &&
        id_IN == other.id_IN &&
        id_NOT_IN == other.id_NOT_IN &&
        id_CONTAINS == other.id_CONTAINS &&
        id_NOT_CONTAINS == other.id_NOT_CONTAINS &&
        id_STARTS_WITH == other.id_STARTS_WITH &&
        id_NOT_STARTS_WITH == other.id_NOT_STARTS_WITH &&
        id_ENDS_WITH == other.id_ENDS_WITH &&
        id_NOT_ENDS_WITH == other.id_NOT_ENDS_WITH &&
        title == other.title &&
        title_NOT == other.title_NOT &&
        title_IN == other.title_IN &&
        title_NOT_IN == other.title_NOT_IN &&
        title_CONTAINS == other.title_CONTAINS &&
        title_NOT_CONTAINS == other.title_NOT_CONTAINS &&
        title_STARTS_WITH == other.title_STARTS_WITH &&
        title_NOT_STARTS_WITH == other.title_NOT_STARTS_WITH &&
        title_ENDS_WITH == other.title_ENDS_WITH &&
        title_NOT_ENDS_WITH == other.title_NOT_ENDS_WITH &&
        description == other.description &&
        description_NOT == other.description_NOT &&
        description_IN == other.description_IN &&
        description_NOT_IN == other.description_NOT_IN &&
        description_CONTAINS == other.description_CONTAINS &&
        description_NOT_CONTAINS == other.description_NOT_CONTAINS &&
        description_STARTS_WITH == other.description_STARTS_WITH &&
        description_NOT_STARTS_WITH == other.description_NOT_STARTS_WITH &&
        description_ENDS_WITH == other.description_ENDS_WITH &&
        description_NOT_ENDS_WITH == other.description_NOT_ENDS_WITH &&
        creationDate == other.creationDate &&
        creationDate_NOT == other.creationDate_NOT &&
        creationDate_IN == other.creationDate_IN &&
        creationDate_NOT_IN == other.creationDate_NOT_IN &&
        creationDate_LT == other.creationDate_LT &&
        creationDate_LTE == other.creationDate_LTE &&
        creationDate_GT == other.creationDate_GT &&
        creationDate_GTE == other.creationDate_GTE &&
        modifiedDate == other.modifiedDate &&
        modifiedDate_NOT == other.modifiedDate_NOT &&
        modifiedDate_IN == other.modifiedDate_IN &&
        modifiedDate_NOT_IN == other.modifiedDate_NOT_IN &&
        modifiedDate_LT == other.modifiedDate_LT &&
        modifiedDate_LTE == other.modifiedDate_LTE &&
        modifiedDate_GT == other.modifiedDate_GT &&
        modifiedDate_GTE == other.modifiedDate_GTE &&
        pagesAggregate == other.pagesAggregate &&
        pages_ALL == other.pages_ALL &&
        pages_NONE == other.pages_NONE &&
        pages_SINGLE == other.pages_SINGLE &&
        pages_SOME == other.pages_SOME &&
        owner == other.owner &&
        owner_NOT == other.owner_NOT &&
        ownerAggregate == other.ownerAggregate &&
        pagesConnection_ALL == other.pagesConnection_ALL &&
        pagesConnection_NONE == other.pagesConnection_NONE &&
        pagesConnection_SINGLE == other.pagesConnection_SINGLE &&
        pagesConnection_SOME == other.pagesConnection_SOME &&
        ownerConnection == other.ownerConnection &&
        ownerConnection_NOT == other.ownerConnection_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, OR.hashCode), AND.hashCode), id.hashCode), id_NOT.hashCode), id_IN.hashCode), id_NOT_IN.hashCode), id_CONTAINS.hashCode), id_NOT_CONTAINS.hashCode), id_STARTS_WITH.hashCode), id_NOT_STARTS_WITH.hashCode), id_ENDS_WITH.hashCode), id_NOT_ENDS_WITH.hashCode), title.hashCode), title_NOT.hashCode), title_IN.hashCode), title_NOT_IN.hashCode), title_CONTAINS.hashCode), title_NOT_CONTAINS.hashCode), title_STARTS_WITH.hashCode), title_NOT_STARTS_WITH.hashCode), title_ENDS_WITH.hashCode), title_NOT_ENDS_WITH.hashCode), description.hashCode), description_NOT.hashCode), description_IN.hashCode), description_NOT_IN.hashCode), description_CONTAINS.hashCode), description_NOT_CONTAINS.hashCode), description_STARTS_WITH.hashCode), description_NOT_STARTS_WITH.hashCode), description_ENDS_WITH.hashCode), description_NOT_ENDS_WITH.hashCode), creationDate.hashCode), creationDate_NOT.hashCode), creationDate_IN.hashCode), creationDate_NOT_IN.hashCode), creationDate_LT.hashCode), creationDate_LTE.hashCode), creationDate_GT.hashCode), creationDate_GTE.hashCode), modifiedDate.hashCode), modifiedDate_NOT.hashCode), modifiedDate_IN.hashCode),
                                                                                modifiedDate_NOT_IN.hashCode),
                                                                            modifiedDate_LT.hashCode),
                                                                        modifiedDate_LTE.hashCode),
                                                                    modifiedDate_GT.hashCode),
                                                                modifiedDate_GTE.hashCode),
                                                            pagesAggregate.hashCode),
                                                        pages_ALL.hashCode),
                                                    pages_NONE.hashCode),
                                                pages_SINGLE.hashCode),
                                            pages_SOME.hashCode),
                                        owner.hashCode),
                                    owner_NOT.hashCode),
                                ownerAggregate.hashCode),
                            pagesConnection_ALL.hashCode),
                        pagesConnection_NONE.hashCode),
                    pagesConnection_SINGLE.hashCode),
                pagesConnection_SOME.hashCode),
            ownerConnection.hashCode),
        ownerConnection_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProjectWhere')
          ..add('OR', OR)
          ..add('AND', AND)
          ..add('id', id)
          ..add('id_NOT', id_NOT)
          ..add('id_IN', id_IN)
          ..add('id_NOT_IN', id_NOT_IN)
          ..add('id_CONTAINS', id_CONTAINS)
          ..add('id_NOT_CONTAINS', id_NOT_CONTAINS)
          ..add('id_STARTS_WITH', id_STARTS_WITH)
          ..add('id_NOT_STARTS_WITH', id_NOT_STARTS_WITH)
          ..add('id_ENDS_WITH', id_ENDS_WITH)
          ..add('id_NOT_ENDS_WITH', id_NOT_ENDS_WITH)
          ..add('title', title)
          ..add('title_NOT', title_NOT)
          ..add('title_IN', title_IN)
          ..add('title_NOT_IN', title_NOT_IN)
          ..add('title_CONTAINS', title_CONTAINS)
          ..add('title_NOT_CONTAINS', title_NOT_CONTAINS)
          ..add('title_STARTS_WITH', title_STARTS_WITH)
          ..add('title_NOT_STARTS_WITH', title_NOT_STARTS_WITH)
          ..add('title_ENDS_WITH', title_ENDS_WITH)
          ..add('title_NOT_ENDS_WITH', title_NOT_ENDS_WITH)
          ..add('description', description)
          ..add('description_NOT', description_NOT)
          ..add('description_IN', description_IN)
          ..add('description_NOT_IN', description_NOT_IN)
          ..add('description_CONTAINS', description_CONTAINS)
          ..add('description_NOT_CONTAINS', description_NOT_CONTAINS)
          ..add('description_STARTS_WITH', description_STARTS_WITH)
          ..add('description_NOT_STARTS_WITH', description_NOT_STARTS_WITH)
          ..add('description_ENDS_WITH', description_ENDS_WITH)
          ..add('description_NOT_ENDS_WITH', description_NOT_ENDS_WITH)
          ..add('creationDate', creationDate)
          ..add('creationDate_NOT', creationDate_NOT)
          ..add('creationDate_IN', creationDate_IN)
          ..add('creationDate_NOT_IN', creationDate_NOT_IN)
          ..add('creationDate_LT', creationDate_LT)
          ..add('creationDate_LTE', creationDate_LTE)
          ..add('creationDate_GT', creationDate_GT)
          ..add('creationDate_GTE', creationDate_GTE)
          ..add('modifiedDate', modifiedDate)
          ..add('modifiedDate_NOT', modifiedDate_NOT)
          ..add('modifiedDate_IN', modifiedDate_IN)
          ..add('modifiedDate_NOT_IN', modifiedDate_NOT_IN)
          ..add('modifiedDate_LT', modifiedDate_LT)
          ..add('modifiedDate_LTE', modifiedDate_LTE)
          ..add('modifiedDate_GT', modifiedDate_GT)
          ..add('modifiedDate_GTE', modifiedDate_GTE)
          ..add('pagesAggregate', pagesAggregate)
          ..add('pages_ALL', pages_ALL)
          ..add('pages_NONE', pages_NONE)
          ..add('pages_SINGLE', pages_SINGLE)
          ..add('pages_SOME', pages_SOME)
          ..add('owner', owner)
          ..add('owner_NOT', owner_NOT)
          ..add('ownerAggregate', ownerAggregate)
          ..add('pagesConnection_ALL', pagesConnection_ALL)
          ..add('pagesConnection_NONE', pagesConnection_NONE)
          ..add('pagesConnection_SINGLE', pagesConnection_SINGLE)
          ..add('pagesConnection_SOME', pagesConnection_SOME)
          ..add('ownerConnection', ownerConnection)
          ..add('ownerConnection_NOT', ownerConnection_NOT))
        .toString();
  }
}

class GProjectWhereBuilder
    implements Builder<GProjectWhere, GProjectWhereBuilder> {
  _$GProjectWhere? _$v;

  ListBuilder<GProjectWhere>? _OR;
  ListBuilder<GProjectWhere> get OR =>
      _$this._OR ??= new ListBuilder<GProjectWhere>();
  set OR(ListBuilder<GProjectWhere>? OR) => _$this._OR = OR;

  ListBuilder<GProjectWhere>? _AND;
  ListBuilder<GProjectWhere> get AND =>
      _$this._AND ??= new ListBuilder<GProjectWhere>();
  set AND(ListBuilder<GProjectWhere>? AND) => _$this._AND = AND;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _id_NOT;
  String? get id_NOT => _$this._id_NOT;
  set id_NOT(String? id_NOT) => _$this._id_NOT = id_NOT;

  ListBuilder<String>? _id_IN;
  ListBuilder<String> get id_IN => _$this._id_IN ??= new ListBuilder<String>();
  set id_IN(ListBuilder<String>? id_IN) => _$this._id_IN = id_IN;

  ListBuilder<String>? _id_NOT_IN;
  ListBuilder<String> get id_NOT_IN =>
      _$this._id_NOT_IN ??= new ListBuilder<String>();
  set id_NOT_IN(ListBuilder<String>? id_NOT_IN) =>
      _$this._id_NOT_IN = id_NOT_IN;

  String? _id_CONTAINS;
  String? get id_CONTAINS => _$this._id_CONTAINS;
  set id_CONTAINS(String? id_CONTAINS) => _$this._id_CONTAINS = id_CONTAINS;

  String? _id_NOT_CONTAINS;
  String? get id_NOT_CONTAINS => _$this._id_NOT_CONTAINS;
  set id_NOT_CONTAINS(String? id_NOT_CONTAINS) =>
      _$this._id_NOT_CONTAINS = id_NOT_CONTAINS;

  String? _id_STARTS_WITH;
  String? get id_STARTS_WITH => _$this._id_STARTS_WITH;
  set id_STARTS_WITH(String? id_STARTS_WITH) =>
      _$this._id_STARTS_WITH = id_STARTS_WITH;

  String? _id_NOT_STARTS_WITH;
  String? get id_NOT_STARTS_WITH => _$this._id_NOT_STARTS_WITH;
  set id_NOT_STARTS_WITH(String? id_NOT_STARTS_WITH) =>
      _$this._id_NOT_STARTS_WITH = id_NOT_STARTS_WITH;

  String? _id_ENDS_WITH;
  String? get id_ENDS_WITH => _$this._id_ENDS_WITH;
  set id_ENDS_WITH(String? id_ENDS_WITH) => _$this._id_ENDS_WITH = id_ENDS_WITH;

  String? _id_NOT_ENDS_WITH;
  String? get id_NOT_ENDS_WITH => _$this._id_NOT_ENDS_WITH;
  set id_NOT_ENDS_WITH(String? id_NOT_ENDS_WITH) =>
      _$this._id_NOT_ENDS_WITH = id_NOT_ENDS_WITH;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _title_NOT;
  String? get title_NOT => _$this._title_NOT;
  set title_NOT(String? title_NOT) => _$this._title_NOT = title_NOT;

  ListBuilder<String>? _title_IN;
  ListBuilder<String> get title_IN =>
      _$this._title_IN ??= new ListBuilder<String>();
  set title_IN(ListBuilder<String>? title_IN) => _$this._title_IN = title_IN;

  ListBuilder<String>? _title_NOT_IN;
  ListBuilder<String> get title_NOT_IN =>
      _$this._title_NOT_IN ??= new ListBuilder<String>();
  set title_NOT_IN(ListBuilder<String>? title_NOT_IN) =>
      _$this._title_NOT_IN = title_NOT_IN;

  String? _title_CONTAINS;
  String? get title_CONTAINS => _$this._title_CONTAINS;
  set title_CONTAINS(String? title_CONTAINS) =>
      _$this._title_CONTAINS = title_CONTAINS;

  String? _title_NOT_CONTAINS;
  String? get title_NOT_CONTAINS => _$this._title_NOT_CONTAINS;
  set title_NOT_CONTAINS(String? title_NOT_CONTAINS) =>
      _$this._title_NOT_CONTAINS = title_NOT_CONTAINS;

  String? _title_STARTS_WITH;
  String? get title_STARTS_WITH => _$this._title_STARTS_WITH;
  set title_STARTS_WITH(String? title_STARTS_WITH) =>
      _$this._title_STARTS_WITH = title_STARTS_WITH;

  String? _title_NOT_STARTS_WITH;
  String? get title_NOT_STARTS_WITH => _$this._title_NOT_STARTS_WITH;
  set title_NOT_STARTS_WITH(String? title_NOT_STARTS_WITH) =>
      _$this._title_NOT_STARTS_WITH = title_NOT_STARTS_WITH;

  String? _title_ENDS_WITH;
  String? get title_ENDS_WITH => _$this._title_ENDS_WITH;
  set title_ENDS_WITH(String? title_ENDS_WITH) =>
      _$this._title_ENDS_WITH = title_ENDS_WITH;

  String? _title_NOT_ENDS_WITH;
  String? get title_NOT_ENDS_WITH => _$this._title_NOT_ENDS_WITH;
  set title_NOT_ENDS_WITH(String? title_NOT_ENDS_WITH) =>
      _$this._title_NOT_ENDS_WITH = title_NOT_ENDS_WITH;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _description_NOT;
  String? get description_NOT => _$this._description_NOT;
  set description_NOT(String? description_NOT) =>
      _$this._description_NOT = description_NOT;

  ListBuilder<String>? _description_IN;
  ListBuilder<String> get description_IN =>
      _$this._description_IN ??= new ListBuilder<String>();
  set description_IN(ListBuilder<String>? description_IN) =>
      _$this._description_IN = description_IN;

  ListBuilder<String>? _description_NOT_IN;
  ListBuilder<String> get description_NOT_IN =>
      _$this._description_NOT_IN ??= new ListBuilder<String>();
  set description_NOT_IN(ListBuilder<String>? description_NOT_IN) =>
      _$this._description_NOT_IN = description_NOT_IN;

  String? _description_CONTAINS;
  String? get description_CONTAINS => _$this._description_CONTAINS;
  set description_CONTAINS(String? description_CONTAINS) =>
      _$this._description_CONTAINS = description_CONTAINS;

  String? _description_NOT_CONTAINS;
  String? get description_NOT_CONTAINS => _$this._description_NOT_CONTAINS;
  set description_NOT_CONTAINS(String? description_NOT_CONTAINS) =>
      _$this._description_NOT_CONTAINS = description_NOT_CONTAINS;

  String? _description_STARTS_WITH;
  String? get description_STARTS_WITH => _$this._description_STARTS_WITH;
  set description_STARTS_WITH(String? description_STARTS_WITH) =>
      _$this._description_STARTS_WITH = description_STARTS_WITH;

  String? _description_NOT_STARTS_WITH;
  String? get description_NOT_STARTS_WITH =>
      _$this._description_NOT_STARTS_WITH;
  set description_NOT_STARTS_WITH(String? description_NOT_STARTS_WITH) =>
      _$this._description_NOT_STARTS_WITH = description_NOT_STARTS_WITH;

  String? _description_ENDS_WITH;
  String? get description_ENDS_WITH => _$this._description_ENDS_WITH;
  set description_ENDS_WITH(String? description_ENDS_WITH) =>
      _$this._description_ENDS_WITH = description_ENDS_WITH;

  String? _description_NOT_ENDS_WITH;
  String? get description_NOT_ENDS_WITH => _$this._description_NOT_ENDS_WITH;
  set description_NOT_ENDS_WITH(String? description_NOT_ENDS_WITH) =>
      _$this._description_NOT_ENDS_WITH = description_NOT_ENDS_WITH;

  GDateTimeBuilder? _creationDate;
  GDateTimeBuilder get creationDate =>
      _$this._creationDate ??= new GDateTimeBuilder();
  set creationDate(GDateTimeBuilder? creationDate) =>
      _$this._creationDate = creationDate;

  GDateTimeBuilder? _creationDate_NOT;
  GDateTimeBuilder get creationDate_NOT =>
      _$this._creationDate_NOT ??= new GDateTimeBuilder();
  set creationDate_NOT(GDateTimeBuilder? creationDate_NOT) =>
      _$this._creationDate_NOT = creationDate_NOT;

  ListBuilder<GDateTime>? _creationDate_IN;
  ListBuilder<GDateTime> get creationDate_IN =>
      _$this._creationDate_IN ??= new ListBuilder<GDateTime>();
  set creationDate_IN(ListBuilder<GDateTime>? creationDate_IN) =>
      _$this._creationDate_IN = creationDate_IN;

  ListBuilder<GDateTime>? _creationDate_NOT_IN;
  ListBuilder<GDateTime> get creationDate_NOT_IN =>
      _$this._creationDate_NOT_IN ??= new ListBuilder<GDateTime>();
  set creationDate_NOT_IN(ListBuilder<GDateTime>? creationDate_NOT_IN) =>
      _$this._creationDate_NOT_IN = creationDate_NOT_IN;

  GDateTimeBuilder? _creationDate_LT;
  GDateTimeBuilder get creationDate_LT =>
      _$this._creationDate_LT ??= new GDateTimeBuilder();
  set creationDate_LT(GDateTimeBuilder? creationDate_LT) =>
      _$this._creationDate_LT = creationDate_LT;

  GDateTimeBuilder? _creationDate_LTE;
  GDateTimeBuilder get creationDate_LTE =>
      _$this._creationDate_LTE ??= new GDateTimeBuilder();
  set creationDate_LTE(GDateTimeBuilder? creationDate_LTE) =>
      _$this._creationDate_LTE = creationDate_LTE;

  GDateTimeBuilder? _creationDate_GT;
  GDateTimeBuilder get creationDate_GT =>
      _$this._creationDate_GT ??= new GDateTimeBuilder();
  set creationDate_GT(GDateTimeBuilder? creationDate_GT) =>
      _$this._creationDate_GT = creationDate_GT;

  GDateTimeBuilder? _creationDate_GTE;
  GDateTimeBuilder get creationDate_GTE =>
      _$this._creationDate_GTE ??= new GDateTimeBuilder();
  set creationDate_GTE(GDateTimeBuilder? creationDate_GTE) =>
      _$this._creationDate_GTE = creationDate_GTE;

  GDateTimeBuilder? _modifiedDate;
  GDateTimeBuilder get modifiedDate =>
      _$this._modifiedDate ??= new GDateTimeBuilder();
  set modifiedDate(GDateTimeBuilder? modifiedDate) =>
      _$this._modifiedDate = modifiedDate;

  GDateTimeBuilder? _modifiedDate_NOT;
  GDateTimeBuilder get modifiedDate_NOT =>
      _$this._modifiedDate_NOT ??= new GDateTimeBuilder();
  set modifiedDate_NOT(GDateTimeBuilder? modifiedDate_NOT) =>
      _$this._modifiedDate_NOT = modifiedDate_NOT;

  ListBuilder<GDateTime>? _modifiedDate_IN;
  ListBuilder<GDateTime> get modifiedDate_IN =>
      _$this._modifiedDate_IN ??= new ListBuilder<GDateTime>();
  set modifiedDate_IN(ListBuilder<GDateTime>? modifiedDate_IN) =>
      _$this._modifiedDate_IN = modifiedDate_IN;

  ListBuilder<GDateTime>? _modifiedDate_NOT_IN;
  ListBuilder<GDateTime> get modifiedDate_NOT_IN =>
      _$this._modifiedDate_NOT_IN ??= new ListBuilder<GDateTime>();
  set modifiedDate_NOT_IN(ListBuilder<GDateTime>? modifiedDate_NOT_IN) =>
      _$this._modifiedDate_NOT_IN = modifiedDate_NOT_IN;

  GDateTimeBuilder? _modifiedDate_LT;
  GDateTimeBuilder get modifiedDate_LT =>
      _$this._modifiedDate_LT ??= new GDateTimeBuilder();
  set modifiedDate_LT(GDateTimeBuilder? modifiedDate_LT) =>
      _$this._modifiedDate_LT = modifiedDate_LT;

  GDateTimeBuilder? _modifiedDate_LTE;
  GDateTimeBuilder get modifiedDate_LTE =>
      _$this._modifiedDate_LTE ??= new GDateTimeBuilder();
  set modifiedDate_LTE(GDateTimeBuilder? modifiedDate_LTE) =>
      _$this._modifiedDate_LTE = modifiedDate_LTE;

  GDateTimeBuilder? _modifiedDate_GT;
  GDateTimeBuilder get modifiedDate_GT =>
      _$this._modifiedDate_GT ??= new GDateTimeBuilder();
  set modifiedDate_GT(GDateTimeBuilder? modifiedDate_GT) =>
      _$this._modifiedDate_GT = modifiedDate_GT;

  GDateTimeBuilder? _modifiedDate_GTE;
  GDateTimeBuilder get modifiedDate_GTE =>
      _$this._modifiedDate_GTE ??= new GDateTimeBuilder();
  set modifiedDate_GTE(GDateTimeBuilder? modifiedDate_GTE) =>
      _$this._modifiedDate_GTE = modifiedDate_GTE;

  GProjectPagesAggregateInputBuilder? _pagesAggregate;
  GProjectPagesAggregateInputBuilder get pagesAggregate =>
      _$this._pagesAggregate ??= new GProjectPagesAggregateInputBuilder();
  set pagesAggregate(GProjectPagesAggregateInputBuilder? pagesAggregate) =>
      _$this._pagesAggregate = pagesAggregate;

  GPageWhereBuilder? _pages_ALL;
  GPageWhereBuilder get pages_ALL =>
      _$this._pages_ALL ??= new GPageWhereBuilder();
  set pages_ALL(GPageWhereBuilder? pages_ALL) => _$this._pages_ALL = pages_ALL;

  GPageWhereBuilder? _pages_NONE;
  GPageWhereBuilder get pages_NONE =>
      _$this._pages_NONE ??= new GPageWhereBuilder();
  set pages_NONE(GPageWhereBuilder? pages_NONE) =>
      _$this._pages_NONE = pages_NONE;

  GPageWhereBuilder? _pages_SINGLE;
  GPageWhereBuilder get pages_SINGLE =>
      _$this._pages_SINGLE ??= new GPageWhereBuilder();
  set pages_SINGLE(GPageWhereBuilder? pages_SINGLE) =>
      _$this._pages_SINGLE = pages_SINGLE;

  GPageWhereBuilder? _pages_SOME;
  GPageWhereBuilder get pages_SOME =>
      _$this._pages_SOME ??= new GPageWhereBuilder();
  set pages_SOME(GPageWhereBuilder? pages_SOME) =>
      _$this._pages_SOME = pages_SOME;

  GUserWhereBuilder? _owner;
  GUserWhereBuilder get owner => _$this._owner ??= new GUserWhereBuilder();
  set owner(GUserWhereBuilder? owner) => _$this._owner = owner;

  GUserWhereBuilder? _owner_NOT;
  GUserWhereBuilder get owner_NOT =>
      _$this._owner_NOT ??= new GUserWhereBuilder();
  set owner_NOT(GUserWhereBuilder? owner_NOT) => _$this._owner_NOT = owner_NOT;

  GProjectOwnerAggregateInputBuilder? _ownerAggregate;
  GProjectOwnerAggregateInputBuilder get ownerAggregate =>
      _$this._ownerAggregate ??= new GProjectOwnerAggregateInputBuilder();
  set ownerAggregate(GProjectOwnerAggregateInputBuilder? ownerAggregate) =>
      _$this._ownerAggregate = ownerAggregate;

  GProjectPagesConnectionWhereBuilder? _pagesConnection_ALL;
  GProjectPagesConnectionWhereBuilder get pagesConnection_ALL =>
      _$this._pagesConnection_ALL ??= new GProjectPagesConnectionWhereBuilder();
  set pagesConnection_ALL(
          GProjectPagesConnectionWhereBuilder? pagesConnection_ALL) =>
      _$this._pagesConnection_ALL = pagesConnection_ALL;

  GProjectPagesConnectionWhereBuilder? _pagesConnection_NONE;
  GProjectPagesConnectionWhereBuilder get pagesConnection_NONE =>
      _$this._pagesConnection_NONE ??=
          new GProjectPagesConnectionWhereBuilder();
  set pagesConnection_NONE(
          GProjectPagesConnectionWhereBuilder? pagesConnection_NONE) =>
      _$this._pagesConnection_NONE = pagesConnection_NONE;

  GProjectPagesConnectionWhereBuilder? _pagesConnection_SINGLE;
  GProjectPagesConnectionWhereBuilder get pagesConnection_SINGLE =>
      _$this._pagesConnection_SINGLE ??=
          new GProjectPagesConnectionWhereBuilder();
  set pagesConnection_SINGLE(
          GProjectPagesConnectionWhereBuilder? pagesConnection_SINGLE) =>
      _$this._pagesConnection_SINGLE = pagesConnection_SINGLE;

  GProjectPagesConnectionWhereBuilder? _pagesConnection_SOME;
  GProjectPagesConnectionWhereBuilder get pagesConnection_SOME =>
      _$this._pagesConnection_SOME ??=
          new GProjectPagesConnectionWhereBuilder();
  set pagesConnection_SOME(
          GProjectPagesConnectionWhereBuilder? pagesConnection_SOME) =>
      _$this._pagesConnection_SOME = pagesConnection_SOME;

  GProjectOwnerConnectionWhereBuilder? _ownerConnection;
  GProjectOwnerConnectionWhereBuilder get ownerConnection =>
      _$this._ownerConnection ??= new GProjectOwnerConnectionWhereBuilder();
  set ownerConnection(GProjectOwnerConnectionWhereBuilder? ownerConnection) =>
      _$this._ownerConnection = ownerConnection;

  GProjectOwnerConnectionWhereBuilder? _ownerConnection_NOT;
  GProjectOwnerConnectionWhereBuilder get ownerConnection_NOT =>
      _$this._ownerConnection_NOT ??= new GProjectOwnerConnectionWhereBuilder();
  set ownerConnection_NOT(
          GProjectOwnerConnectionWhereBuilder? ownerConnection_NOT) =>
      _$this._ownerConnection_NOT = ownerConnection_NOT;

  GProjectWhereBuilder();

  GProjectWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _OR = $v.OR?.toBuilder();
      _AND = $v.AND?.toBuilder();
      _id = $v.id;
      _id_NOT = $v.id_NOT;
      _id_IN = $v.id_IN?.toBuilder();
      _id_NOT_IN = $v.id_NOT_IN?.toBuilder();
      _id_CONTAINS = $v.id_CONTAINS;
      _id_NOT_CONTAINS = $v.id_NOT_CONTAINS;
      _id_STARTS_WITH = $v.id_STARTS_WITH;
      _id_NOT_STARTS_WITH = $v.id_NOT_STARTS_WITH;
      _id_ENDS_WITH = $v.id_ENDS_WITH;
      _id_NOT_ENDS_WITH = $v.id_NOT_ENDS_WITH;
      _title = $v.title;
      _title_NOT = $v.title_NOT;
      _title_IN = $v.title_IN?.toBuilder();
      _title_NOT_IN = $v.title_NOT_IN?.toBuilder();
      _title_CONTAINS = $v.title_CONTAINS;
      _title_NOT_CONTAINS = $v.title_NOT_CONTAINS;
      _title_STARTS_WITH = $v.title_STARTS_WITH;
      _title_NOT_STARTS_WITH = $v.title_NOT_STARTS_WITH;
      _title_ENDS_WITH = $v.title_ENDS_WITH;
      _title_NOT_ENDS_WITH = $v.title_NOT_ENDS_WITH;
      _description = $v.description;
      _description_NOT = $v.description_NOT;
      _description_IN = $v.description_IN?.toBuilder();
      _description_NOT_IN = $v.description_NOT_IN?.toBuilder();
      _description_CONTAINS = $v.description_CONTAINS;
      _description_NOT_CONTAINS = $v.description_NOT_CONTAINS;
      _description_STARTS_WITH = $v.description_STARTS_WITH;
      _description_NOT_STARTS_WITH = $v.description_NOT_STARTS_WITH;
      _description_ENDS_WITH = $v.description_ENDS_WITH;
      _description_NOT_ENDS_WITH = $v.description_NOT_ENDS_WITH;
      _creationDate = $v.creationDate?.toBuilder();
      _creationDate_NOT = $v.creationDate_NOT?.toBuilder();
      _creationDate_IN = $v.creationDate_IN?.toBuilder();
      _creationDate_NOT_IN = $v.creationDate_NOT_IN?.toBuilder();
      _creationDate_LT = $v.creationDate_LT?.toBuilder();
      _creationDate_LTE = $v.creationDate_LTE?.toBuilder();
      _creationDate_GT = $v.creationDate_GT?.toBuilder();
      _creationDate_GTE = $v.creationDate_GTE?.toBuilder();
      _modifiedDate = $v.modifiedDate?.toBuilder();
      _modifiedDate_NOT = $v.modifiedDate_NOT?.toBuilder();
      _modifiedDate_IN = $v.modifiedDate_IN?.toBuilder();
      _modifiedDate_NOT_IN = $v.modifiedDate_NOT_IN?.toBuilder();
      _modifiedDate_LT = $v.modifiedDate_LT?.toBuilder();
      _modifiedDate_LTE = $v.modifiedDate_LTE?.toBuilder();
      _modifiedDate_GT = $v.modifiedDate_GT?.toBuilder();
      _modifiedDate_GTE = $v.modifiedDate_GTE?.toBuilder();
      _pagesAggregate = $v.pagesAggregate?.toBuilder();
      _pages_ALL = $v.pages_ALL?.toBuilder();
      _pages_NONE = $v.pages_NONE?.toBuilder();
      _pages_SINGLE = $v.pages_SINGLE?.toBuilder();
      _pages_SOME = $v.pages_SOME?.toBuilder();
      _owner = $v.owner?.toBuilder();
      _owner_NOT = $v.owner_NOT?.toBuilder();
      _ownerAggregate = $v.ownerAggregate?.toBuilder();
      _pagesConnection_ALL = $v.pagesConnection_ALL?.toBuilder();
      _pagesConnection_NONE = $v.pagesConnection_NONE?.toBuilder();
      _pagesConnection_SINGLE = $v.pagesConnection_SINGLE?.toBuilder();
      _pagesConnection_SOME = $v.pagesConnection_SOME?.toBuilder();
      _ownerConnection = $v.ownerConnection?.toBuilder();
      _ownerConnection_NOT = $v.ownerConnection_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProjectWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProjectWhere;
  }

  @override
  void update(void Function(GProjectWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProjectWhere build() => _build();

  _$GProjectWhere _build() {
    _$GProjectWhere _$result;
    try {
      _$result = _$v ??
          new _$GProjectWhere._(
              OR: _OR?.build(),
              AND: _AND?.build(),
              id: id,
              id_NOT: id_NOT,
              id_IN: _id_IN?.build(),
              id_NOT_IN: _id_NOT_IN?.build(),
              id_CONTAINS: id_CONTAINS,
              id_NOT_CONTAINS: id_NOT_CONTAINS,
              id_STARTS_WITH: id_STARTS_WITH,
              id_NOT_STARTS_WITH: id_NOT_STARTS_WITH,
              id_ENDS_WITH: id_ENDS_WITH,
              id_NOT_ENDS_WITH: id_NOT_ENDS_WITH,
              title: title,
              title_NOT: title_NOT,
              title_IN: _title_IN?.build(),
              title_NOT_IN: _title_NOT_IN?.build(),
              title_CONTAINS: title_CONTAINS,
              title_NOT_CONTAINS: title_NOT_CONTAINS,
              title_STARTS_WITH: title_STARTS_WITH,
              title_NOT_STARTS_WITH: title_NOT_STARTS_WITH,
              title_ENDS_WITH: title_ENDS_WITH,
              title_NOT_ENDS_WITH: title_NOT_ENDS_WITH,
              description: description,
              description_NOT: description_NOT,
              description_IN: _description_IN?.build(),
              description_NOT_IN: _description_NOT_IN?.build(),
              description_CONTAINS: description_CONTAINS,
              description_NOT_CONTAINS: description_NOT_CONTAINS,
              description_STARTS_WITH: description_STARTS_WITH,
              description_NOT_STARTS_WITH: description_NOT_STARTS_WITH,
              description_ENDS_WITH: description_ENDS_WITH,
              description_NOT_ENDS_WITH: description_NOT_ENDS_WITH,
              creationDate: _creationDate?.build(),
              creationDate_NOT: _creationDate_NOT?.build(),
              creationDate_IN: _creationDate_IN?.build(),
              creationDate_NOT_IN: _creationDate_NOT_IN?.build(),
              creationDate_LT: _creationDate_LT?.build(),
              creationDate_LTE: _creationDate_LTE?.build(),
              creationDate_GT: _creationDate_GT?.build(),
              creationDate_GTE: _creationDate_GTE?.build(),
              modifiedDate: _modifiedDate?.build(),
              modifiedDate_NOT: _modifiedDate_NOT?.build(),
              modifiedDate_IN: _modifiedDate_IN?.build(),
              modifiedDate_NOT_IN: _modifiedDate_NOT_IN?.build(),
              modifiedDate_LT: _modifiedDate_LT?.build(),
              modifiedDate_LTE: _modifiedDate_LTE?.build(),
              modifiedDate_GT: _modifiedDate_GT?.build(),
              modifiedDate_GTE: _modifiedDate_GTE?.build(),
              pagesAggregate: _pagesAggregate?.build(),
              pages_ALL: _pages_ALL?.build(),
              pages_NONE: _pages_NONE?.build(),
              pages_SINGLE: _pages_SINGLE?.build(),
              pages_SOME: _pages_SOME?.build(),
              owner: _owner?.build(),
              owner_NOT: _owner_NOT?.build(),
              ownerAggregate: _ownerAggregate?.build(),
              pagesConnection_ALL: _pagesConnection_ALL?.build(),
              pagesConnection_NONE: _pagesConnection_NONE?.build(),
              pagesConnection_SINGLE: _pagesConnection_SINGLE?.build(),
              pagesConnection_SOME: _pagesConnection_SOME?.build(),
              ownerConnection: _ownerConnection?.build(),
              ownerConnection_NOT: _ownerConnection_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'AND';
        _AND?.build();

        _$failedField = 'id_IN';
        _id_IN?.build();
        _$failedField = 'id_NOT_IN';
        _id_NOT_IN?.build();

        _$failedField = 'title_IN';
        _title_IN?.build();
        _$failedField = 'title_NOT_IN';
        _title_NOT_IN?.build();

        _$failedField = 'description_IN';
        _description_IN?.build();
        _$failedField = 'description_NOT_IN';
        _description_NOT_IN?.build();

        _$failedField = 'creationDate';
        _creationDate?.build();
        _$failedField = 'creationDate_NOT';
        _creationDate_NOT?.build();
        _$failedField = 'creationDate_IN';
        _creationDate_IN?.build();
        _$failedField = 'creationDate_NOT_IN';
        _creationDate_NOT_IN?.build();
        _$failedField = 'creationDate_LT';
        _creationDate_LT?.build();
        _$failedField = 'creationDate_LTE';
        _creationDate_LTE?.build();
        _$failedField = 'creationDate_GT';
        _creationDate_GT?.build();
        _$failedField = 'creationDate_GTE';
        _creationDate_GTE?.build();
        _$failedField = 'modifiedDate';
        _modifiedDate?.build();
        _$failedField = 'modifiedDate_NOT';
        _modifiedDate_NOT?.build();
        _$failedField = 'modifiedDate_IN';
        _modifiedDate_IN?.build();
        _$failedField = 'modifiedDate_NOT_IN';
        _modifiedDate_NOT_IN?.build();
        _$failedField = 'modifiedDate_LT';
        _modifiedDate_LT?.build();
        _$failedField = 'modifiedDate_LTE';
        _modifiedDate_LTE?.build();
        _$failedField = 'modifiedDate_GT';
        _modifiedDate_GT?.build();
        _$failedField = 'modifiedDate_GTE';
        _modifiedDate_GTE?.build();
        _$failedField = 'pagesAggregate';
        _pagesAggregate?.build();
        _$failedField = 'pages_ALL';
        _pages_ALL?.build();
        _$failedField = 'pages_NONE';
        _pages_NONE?.build();
        _$failedField = 'pages_SINGLE';
        _pages_SINGLE?.build();
        _$failedField = 'pages_SOME';
        _pages_SOME?.build();
        _$failedField = 'owner';
        _owner?.build();
        _$failedField = 'owner_NOT';
        _owner_NOT?.build();
        _$failedField = 'ownerAggregate';
        _ownerAggregate?.build();
        _$failedField = 'pagesConnection_ALL';
        _pagesConnection_ALL?.build();
        _$failedField = 'pagesConnection_NONE';
        _pagesConnection_NONE?.build();
        _$failedField = 'pagesConnection_SINGLE';
        _pagesConnection_SINGLE?.build();
        _$failedField = 'pagesConnection_SOME';
        _pagesConnection_SOME?.build();
        _$failedField = 'ownerConnection';
        _ownerConnection?.build();
        _$failedField = 'ownerConnection_NOT';
        _ownerConnection_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProjectWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserConnectInput extends GUserConnectInput {
  @override
  final BuiltList<GUserProjectsConnectFieldInput>? projects;

  factory _$GUserConnectInput(
          [void Function(GUserConnectInputBuilder)? updates]) =>
      (new GUserConnectInputBuilder()..update(updates))._build();

  _$GUserConnectInput._({this.projects}) : super._();

  @override
  GUserConnectInput rebuild(void Function(GUserConnectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserConnectInputBuilder toBuilder() =>
      new GUserConnectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserConnectInput && projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc(0, projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserConnectInput')
          ..add('projects', projects))
        .toString();
  }
}

class GUserConnectInputBuilder
    implements Builder<GUserConnectInput, GUserConnectInputBuilder> {
  _$GUserConnectInput? _$v;

  ListBuilder<GUserProjectsConnectFieldInput>? _projects;
  ListBuilder<GUserProjectsConnectFieldInput> get projects =>
      _$this._projects ??= new ListBuilder<GUserProjectsConnectFieldInput>();
  set projects(ListBuilder<GUserProjectsConnectFieldInput>? projects) =>
      _$this._projects = projects;

  GUserConnectInputBuilder();

  GUserConnectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserConnectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserConnectInput;
  }

  @override
  void update(void Function(GUserConnectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserConnectInput build() => _build();

  _$GUserConnectInput _build() {
    _$GUserConnectInput _$result;
    try {
      _$result = _$v ?? new _$GUserConnectInput._(projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserConnectInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserConnectOrCreateInput extends GUserConnectOrCreateInput {
  @override
  final BuiltList<GUserProjectsConnectOrCreateFieldInput>? projects;

  factory _$GUserConnectOrCreateInput(
          [void Function(GUserConnectOrCreateInputBuilder)? updates]) =>
      (new GUserConnectOrCreateInputBuilder()..update(updates))._build();

  _$GUserConnectOrCreateInput._({this.projects}) : super._();

  @override
  GUserConnectOrCreateInput rebuild(
          void Function(GUserConnectOrCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserConnectOrCreateInputBuilder toBuilder() =>
      new GUserConnectOrCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserConnectOrCreateInput && projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc(0, projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserConnectOrCreateInput')
          ..add('projects', projects))
        .toString();
  }
}

class GUserConnectOrCreateInputBuilder
    implements
        Builder<GUserConnectOrCreateInput, GUserConnectOrCreateInputBuilder> {
  _$GUserConnectOrCreateInput? _$v;

  ListBuilder<GUserProjectsConnectOrCreateFieldInput>? _projects;
  ListBuilder<GUserProjectsConnectOrCreateFieldInput> get projects =>
      _$this._projects ??=
          new ListBuilder<GUserProjectsConnectOrCreateFieldInput>();
  set projects(ListBuilder<GUserProjectsConnectOrCreateFieldInput>? projects) =>
      _$this._projects = projects;

  GUserConnectOrCreateInputBuilder();

  GUserConnectOrCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserConnectOrCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserConnectOrCreateInput;
  }

  @override
  void update(void Function(GUserConnectOrCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserConnectOrCreateInput build() => _build();

  _$GUserConnectOrCreateInput _build() {
    _$GUserConnectOrCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GUserConnectOrCreateInput._(projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserConnectOrCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserConnectOrCreateWhere extends GUserConnectOrCreateWhere {
  @override
  final GUserUniqueWhere node;

  factory _$GUserConnectOrCreateWhere(
          [void Function(GUserConnectOrCreateWhereBuilder)? updates]) =>
      (new GUserConnectOrCreateWhereBuilder()..update(updates))._build();

  _$GUserConnectOrCreateWhere._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GUserConnectOrCreateWhere', 'node');
  }

  @override
  GUserConnectOrCreateWhere rebuild(
          void Function(GUserConnectOrCreateWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserConnectOrCreateWhereBuilder toBuilder() =>
      new GUserConnectOrCreateWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserConnectOrCreateWhere && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserConnectOrCreateWhere')
          ..add('node', node))
        .toString();
  }
}

class GUserConnectOrCreateWhereBuilder
    implements
        Builder<GUserConnectOrCreateWhere, GUserConnectOrCreateWhereBuilder> {
  _$GUserConnectOrCreateWhere? _$v;

  GUserUniqueWhereBuilder? _node;
  GUserUniqueWhereBuilder get node =>
      _$this._node ??= new GUserUniqueWhereBuilder();
  set node(GUserUniqueWhereBuilder? node) => _$this._node = node;

  GUserConnectOrCreateWhereBuilder();

  GUserConnectOrCreateWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserConnectOrCreateWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserConnectOrCreateWhere;
  }

  @override
  void update(void Function(GUserConnectOrCreateWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserConnectOrCreateWhere build() => _build();

  _$GUserConnectOrCreateWhere _build() {
    _$GUserConnectOrCreateWhere _$result;
    try {
      _$result = _$v ?? new _$GUserConnectOrCreateWhere._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserConnectOrCreateWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserConnectWhere extends GUserConnectWhere {
  @override
  final GUserWhere node;

  factory _$GUserConnectWhere(
          [void Function(GUserConnectWhereBuilder)? updates]) =>
      (new GUserConnectWhereBuilder()..update(updates))._build();

  _$GUserConnectWhere._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(node, r'GUserConnectWhere', 'node');
  }

  @override
  GUserConnectWhere rebuild(void Function(GUserConnectWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserConnectWhereBuilder toBuilder() =>
      new GUserConnectWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserConnectWhere && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserConnectWhere')
          ..add('node', node))
        .toString();
  }
}

class GUserConnectWhereBuilder
    implements Builder<GUserConnectWhere, GUserConnectWhereBuilder> {
  _$GUserConnectWhere? _$v;

  GUserWhereBuilder? _node;
  GUserWhereBuilder get node => _$this._node ??= new GUserWhereBuilder();
  set node(GUserWhereBuilder? node) => _$this._node = node;

  GUserConnectWhereBuilder();

  GUserConnectWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserConnectWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserConnectWhere;
  }

  @override
  void update(void Function(GUserConnectWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserConnectWhere build() => _build();

  _$GUserConnectWhere _build() {
    _$GUserConnectWhere _$result;
    try {
      _$result = _$v ?? new _$GUserConnectWhere._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserConnectWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserCreateInput extends GUserCreateInput {
  @override
  final String username;
  @override
  final String displayName;
  @override
  final GUserProjectsFieldInput? projects;

  factory _$GUserCreateInput(
          [void Function(GUserCreateInputBuilder)? updates]) =>
      (new GUserCreateInputBuilder()..update(updates))._build();

  _$GUserCreateInput._(
      {required this.username, required this.displayName, this.projects})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        username, r'GUserCreateInput', 'username');
    BuiltValueNullFieldError.checkNotNull(
        displayName, r'GUserCreateInput', 'displayName');
  }

  @override
  GUserCreateInput rebuild(void Function(GUserCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserCreateInputBuilder toBuilder() =>
      new GUserCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserCreateInput &&
        username == other.username &&
        displayName == other.displayName &&
        projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, username.hashCode), displayName.hashCode),
        projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserCreateInput')
          ..add('username', username)
          ..add('displayName', displayName)
          ..add('projects', projects))
        .toString();
  }
}

class GUserCreateInputBuilder
    implements Builder<GUserCreateInput, GUserCreateInputBuilder> {
  _$GUserCreateInput? _$v;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  GUserProjectsFieldInputBuilder? _projects;
  GUserProjectsFieldInputBuilder get projects =>
      _$this._projects ??= new GUserProjectsFieldInputBuilder();
  set projects(GUserProjectsFieldInputBuilder? projects) =>
      _$this._projects = projects;

  GUserCreateInputBuilder();

  GUserCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _username = $v.username;
      _displayName = $v.displayName;
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserCreateInput;
  }

  @override
  void update(void Function(GUserCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserCreateInput build() => _build();

  _$GUserCreateInput _build() {
    _$GUserCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GUserCreateInput._(
              username: BuiltValueNullFieldError.checkNotNull(
                  username, r'GUserCreateInput', 'username'),
              displayName: BuiltValueNullFieldError.checkNotNull(
                  displayName, r'GUserCreateInput', 'displayName'),
              projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserDeleteInput extends GUserDeleteInput {
  @override
  final BuiltList<GUserProjectsDeleteFieldInput>? projects;

  factory _$GUserDeleteInput(
          [void Function(GUserDeleteInputBuilder)? updates]) =>
      (new GUserDeleteInputBuilder()..update(updates))._build();

  _$GUserDeleteInput._({this.projects}) : super._();

  @override
  GUserDeleteInput rebuild(void Function(GUserDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserDeleteInputBuilder toBuilder() =>
      new GUserDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserDeleteInput && projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc(0, projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserDeleteInput')
          ..add('projects', projects))
        .toString();
  }
}

class GUserDeleteInputBuilder
    implements Builder<GUserDeleteInput, GUserDeleteInputBuilder> {
  _$GUserDeleteInput? _$v;

  ListBuilder<GUserProjectsDeleteFieldInput>? _projects;
  ListBuilder<GUserProjectsDeleteFieldInput> get projects =>
      _$this._projects ??= new ListBuilder<GUserProjectsDeleteFieldInput>();
  set projects(ListBuilder<GUserProjectsDeleteFieldInput>? projects) =>
      _$this._projects = projects;

  GUserDeleteInputBuilder();

  GUserDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserDeleteInput;
  }

  @override
  void update(void Function(GUserDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserDeleteInput build() => _build();

  _$GUserDeleteInput _build() {
    _$GUserDeleteInput _$result;
    try {
      _$result = _$v ?? new _$GUserDeleteInput._(projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserDeleteInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserDisconnectInput extends GUserDisconnectInput {
  @override
  final BuiltList<GUserProjectsDisconnectFieldInput>? projects;

  factory _$GUserDisconnectInput(
          [void Function(GUserDisconnectInputBuilder)? updates]) =>
      (new GUserDisconnectInputBuilder()..update(updates))._build();

  _$GUserDisconnectInput._({this.projects}) : super._();

  @override
  GUserDisconnectInput rebuild(
          void Function(GUserDisconnectInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserDisconnectInputBuilder toBuilder() =>
      new GUserDisconnectInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserDisconnectInput && projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc(0, projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserDisconnectInput')
          ..add('projects', projects))
        .toString();
  }
}

class GUserDisconnectInputBuilder
    implements Builder<GUserDisconnectInput, GUserDisconnectInputBuilder> {
  _$GUserDisconnectInput? _$v;

  ListBuilder<GUserProjectsDisconnectFieldInput>? _projects;
  ListBuilder<GUserProjectsDisconnectFieldInput> get projects =>
      _$this._projects ??= new ListBuilder<GUserProjectsDisconnectFieldInput>();
  set projects(ListBuilder<GUserProjectsDisconnectFieldInput>? projects) =>
      _$this._projects = projects;

  GUserDisconnectInputBuilder();

  GUserDisconnectInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserDisconnectInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserDisconnectInput;
  }

  @override
  void update(void Function(GUserDisconnectInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserDisconnectInput build() => _build();

  _$GUserDisconnectInput _build() {
    _$GUserDisconnectInput _$result;
    try {
      _$result =
          _$v ?? new _$GUserDisconnectInput._(projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserDisconnectInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserOnCreateInput extends GUserOnCreateInput {
  @override
  final String username;
  @override
  final String displayName;

  factory _$GUserOnCreateInput(
          [void Function(GUserOnCreateInputBuilder)? updates]) =>
      (new GUserOnCreateInputBuilder()..update(updates))._build();

  _$GUserOnCreateInput._({required this.username, required this.displayName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        username, r'GUserOnCreateInput', 'username');
    BuiltValueNullFieldError.checkNotNull(
        displayName, r'GUserOnCreateInput', 'displayName');
  }

  @override
  GUserOnCreateInput rebuild(
          void Function(GUserOnCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserOnCreateInputBuilder toBuilder() =>
      new GUserOnCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserOnCreateInput &&
        username == other.username &&
        displayName == other.displayName;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, username.hashCode), displayName.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserOnCreateInput')
          ..add('username', username)
          ..add('displayName', displayName))
        .toString();
  }
}

class GUserOnCreateInputBuilder
    implements Builder<GUserOnCreateInput, GUserOnCreateInputBuilder> {
  _$GUserOnCreateInput? _$v;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  GUserOnCreateInputBuilder();

  GUserOnCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _username = $v.username;
      _displayName = $v.displayName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserOnCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserOnCreateInput;
  }

  @override
  void update(void Function(GUserOnCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserOnCreateInput build() => _build();

  _$GUserOnCreateInput _build() {
    final _$result = _$v ??
        new _$GUserOnCreateInput._(
            username: BuiltValueNullFieldError.checkNotNull(
                username, r'GUserOnCreateInput', 'username'),
            displayName: BuiltValueNullFieldError.checkNotNull(
                displayName, r'GUserOnCreateInput', 'displayName'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserOptions extends GUserOptions {
  @override
  final BuiltList<GUserSort>? sort;
  @override
  final int? limit;
  @override
  final int? offset;

  factory _$GUserOptions([void Function(GUserOptionsBuilder)? updates]) =>
      (new GUserOptionsBuilder()..update(updates))._build();

  _$GUserOptions._({this.sort, this.limit, this.offset}) : super._();

  @override
  GUserOptions rebuild(void Function(GUserOptionsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserOptionsBuilder toBuilder() => new GUserOptionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserOptions &&
        sort == other.sort &&
        limit == other.limit &&
        offset == other.offset;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, sort.hashCode), limit.hashCode), offset.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserOptions')
          ..add('sort', sort)
          ..add('limit', limit)
          ..add('offset', offset))
        .toString();
  }
}

class GUserOptionsBuilder
    implements Builder<GUserOptions, GUserOptionsBuilder> {
  _$GUserOptions? _$v;

  ListBuilder<GUserSort>? _sort;
  ListBuilder<GUserSort> get sort =>
      _$this._sort ??= new ListBuilder<GUserSort>();
  set sort(ListBuilder<GUserSort>? sort) => _$this._sort = sort;

  int? _limit;
  int? get limit => _$this._limit;
  set limit(int? limit) => _$this._limit = limit;

  int? _offset;
  int? get offset => _$this._offset;
  set offset(int? offset) => _$this._offset = offset;

  GUserOptionsBuilder();

  GUserOptionsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sort = $v.sort?.toBuilder();
      _limit = $v.limit;
      _offset = $v.offset;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserOptions other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserOptions;
  }

  @override
  void update(void Function(GUserOptionsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserOptions build() => _build();

  _$GUserOptions _build() {
    _$GUserOptions _$result;
    try {
      _$result = _$v ??
          new _$GUserOptions._(
              sort: _sort?.build(), limit: limit, offset: offset);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'sort';
        _sort?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserOptions', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsAggregateInput extends GUserProjectsAggregateInput {
  @override
  final int? count;
  @override
  final int? count_LT;
  @override
  final int? count_LTE;
  @override
  final int? count_GT;
  @override
  final int? count_GTE;
  @override
  final BuiltList<GUserProjectsAggregateInput>? AND;
  @override
  final BuiltList<GUserProjectsAggregateInput>? OR;
  @override
  final GUserProjectsNodeAggregationWhereInput? node;

  factory _$GUserProjectsAggregateInput(
          [void Function(GUserProjectsAggregateInputBuilder)? updates]) =>
      (new GUserProjectsAggregateInputBuilder()..update(updates))._build();

  _$GUserProjectsAggregateInput._(
      {this.count,
      this.count_LT,
      this.count_LTE,
      this.count_GT,
      this.count_GTE,
      this.AND,
      this.OR,
      this.node})
      : super._();

  @override
  GUserProjectsAggregateInput rebuild(
          void Function(GUserProjectsAggregateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsAggregateInputBuilder toBuilder() =>
      new GUserProjectsAggregateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsAggregateInput &&
        count == other.count &&
        count_LT == other.count_LT &&
        count_LTE == other.count_LTE &&
        count_GT == other.count_GT &&
        count_GTE == other.count_GTE &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, count.hashCode), count_LT.hashCode),
                            count_LTE.hashCode),
                        count_GT.hashCode),
                    count_GTE.hashCode),
                AND.hashCode),
            OR.hashCode),
        node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsAggregateInput')
          ..add('count', count)
          ..add('count_LT', count_LT)
          ..add('count_LTE', count_LTE)
          ..add('count_GT', count_GT)
          ..add('count_GTE', count_GTE)
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node))
        .toString();
  }
}

class GUserProjectsAggregateInputBuilder
    implements
        Builder<GUserProjectsAggregateInput,
            GUserProjectsAggregateInputBuilder> {
  _$GUserProjectsAggregateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  int? _count_LT;
  int? get count_LT => _$this._count_LT;
  set count_LT(int? count_LT) => _$this._count_LT = count_LT;

  int? _count_LTE;
  int? get count_LTE => _$this._count_LTE;
  set count_LTE(int? count_LTE) => _$this._count_LTE = count_LTE;

  int? _count_GT;
  int? get count_GT => _$this._count_GT;
  set count_GT(int? count_GT) => _$this._count_GT = count_GT;

  int? _count_GTE;
  int? get count_GTE => _$this._count_GTE;
  set count_GTE(int? count_GTE) => _$this._count_GTE = count_GTE;

  ListBuilder<GUserProjectsAggregateInput>? _AND;
  ListBuilder<GUserProjectsAggregateInput> get AND =>
      _$this._AND ??= new ListBuilder<GUserProjectsAggregateInput>();
  set AND(ListBuilder<GUserProjectsAggregateInput>? AND) => _$this._AND = AND;

  ListBuilder<GUserProjectsAggregateInput>? _OR;
  ListBuilder<GUserProjectsAggregateInput> get OR =>
      _$this._OR ??= new ListBuilder<GUserProjectsAggregateInput>();
  set OR(ListBuilder<GUserProjectsAggregateInput>? OR) => _$this._OR = OR;

  GUserProjectsNodeAggregationWhereInputBuilder? _node;
  GUserProjectsNodeAggregationWhereInputBuilder get node =>
      _$this._node ??= new GUserProjectsNodeAggregationWhereInputBuilder();
  set node(GUserProjectsNodeAggregationWhereInputBuilder? node) =>
      _$this._node = node;

  GUserProjectsAggregateInputBuilder();

  GUserProjectsAggregateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _count_LT = $v.count_LT;
      _count_LTE = $v.count_LTE;
      _count_GT = $v.count_GT;
      _count_GTE = $v.count_GTE;
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsAggregateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsAggregateInput;
  }

  @override
  void update(void Function(GUserProjectsAggregateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsAggregateInput build() => _build();

  _$GUserProjectsAggregateInput _build() {
    _$GUserProjectsAggregateInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsAggregateInput._(
              count: count,
              count_LT: count_LT,
              count_LTE: count_LTE,
              count_GT: count_GT,
              count_GTE: count_GTE,
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsAggregateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsConnectFieldInput extends GUserProjectsConnectFieldInput {
  @override
  final GProjectConnectWhere? where;
  @override
  final BuiltList<GProjectConnectInput>? connect;

  factory _$GUserProjectsConnectFieldInput(
          [void Function(GUserProjectsConnectFieldInputBuilder)? updates]) =>
      (new GUserProjectsConnectFieldInputBuilder()..update(updates))._build();

  _$GUserProjectsConnectFieldInput._({this.where, this.connect}) : super._();

  @override
  GUserProjectsConnectFieldInput rebuild(
          void Function(GUserProjectsConnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsConnectFieldInputBuilder toBuilder() =>
      new GUserProjectsConnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsConnectFieldInput &&
        where == other.where &&
        connect == other.connect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), connect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsConnectFieldInput')
          ..add('where', where)
          ..add('connect', connect))
        .toString();
  }
}

class GUserProjectsConnectFieldInputBuilder
    implements
        Builder<GUserProjectsConnectFieldInput,
            GUserProjectsConnectFieldInputBuilder> {
  _$GUserProjectsConnectFieldInput? _$v;

  GProjectConnectWhereBuilder? _where;
  GProjectConnectWhereBuilder get where =>
      _$this._where ??= new GProjectConnectWhereBuilder();
  set where(GProjectConnectWhereBuilder? where) => _$this._where = where;

  ListBuilder<GProjectConnectInput>? _connect;
  ListBuilder<GProjectConnectInput> get connect =>
      _$this._connect ??= new ListBuilder<GProjectConnectInput>();
  set connect(ListBuilder<GProjectConnectInput>? connect) =>
      _$this._connect = connect;

  GUserProjectsConnectFieldInputBuilder();

  GUserProjectsConnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsConnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsConnectFieldInput;
  }

  @override
  void update(void Function(GUserProjectsConnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsConnectFieldInput build() => _build();

  _$GUserProjectsConnectFieldInput _build() {
    _$GUserProjectsConnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsConnectFieldInput._(
              where: _where?.build(), connect: _connect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'connect';
        _connect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsConnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsConnectionSort extends GUserProjectsConnectionSort {
  @override
  final GProjectSort? node;

  factory _$GUserProjectsConnectionSort(
          [void Function(GUserProjectsConnectionSortBuilder)? updates]) =>
      (new GUserProjectsConnectionSortBuilder()..update(updates))._build();

  _$GUserProjectsConnectionSort._({this.node}) : super._();

  @override
  GUserProjectsConnectionSort rebuild(
          void Function(GUserProjectsConnectionSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsConnectionSortBuilder toBuilder() =>
      new GUserProjectsConnectionSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsConnectionSort && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsConnectionSort')
          ..add('node', node))
        .toString();
  }
}

class GUserProjectsConnectionSortBuilder
    implements
        Builder<GUserProjectsConnectionSort,
            GUserProjectsConnectionSortBuilder> {
  _$GUserProjectsConnectionSort? _$v;

  GProjectSortBuilder? _node;
  GProjectSortBuilder get node => _$this._node ??= new GProjectSortBuilder();
  set node(GProjectSortBuilder? node) => _$this._node = node;

  GUserProjectsConnectionSortBuilder();

  GUserProjectsConnectionSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsConnectionSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsConnectionSort;
  }

  @override
  void update(void Function(GUserProjectsConnectionSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsConnectionSort build() => _build();

  _$GUserProjectsConnectionSort _build() {
    _$GUserProjectsConnectionSort _$result;
    try {
      _$result =
          _$v ?? new _$GUserProjectsConnectionSort._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsConnectionSort', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsConnectionWhere extends GUserProjectsConnectionWhere {
  @override
  final BuiltList<GUserProjectsConnectionWhere>? AND;
  @override
  final BuiltList<GUserProjectsConnectionWhere>? OR;
  @override
  final GProjectWhere? node;
  @override
  final GProjectWhere? node_NOT;

  factory _$GUserProjectsConnectionWhere(
          [void Function(GUserProjectsConnectionWhereBuilder)? updates]) =>
      (new GUserProjectsConnectionWhereBuilder()..update(updates))._build();

  _$GUserProjectsConnectionWhere._(
      {this.AND, this.OR, this.node, this.node_NOT})
      : super._();

  @override
  GUserProjectsConnectionWhere rebuild(
          void Function(GUserProjectsConnectionWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsConnectionWhereBuilder toBuilder() =>
      new GUserProjectsConnectionWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsConnectionWhere &&
        AND == other.AND &&
        OR == other.OR &&
        node == other.node &&
        node_NOT == other.node_NOT;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), node.hashCode),
        node_NOT.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsConnectionWhere')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('node', node)
          ..add('node_NOT', node_NOT))
        .toString();
  }
}

class GUserProjectsConnectionWhereBuilder
    implements
        Builder<GUserProjectsConnectionWhere,
            GUserProjectsConnectionWhereBuilder> {
  _$GUserProjectsConnectionWhere? _$v;

  ListBuilder<GUserProjectsConnectionWhere>? _AND;
  ListBuilder<GUserProjectsConnectionWhere> get AND =>
      _$this._AND ??= new ListBuilder<GUserProjectsConnectionWhere>();
  set AND(ListBuilder<GUserProjectsConnectionWhere>? AND) => _$this._AND = AND;

  ListBuilder<GUserProjectsConnectionWhere>? _OR;
  ListBuilder<GUserProjectsConnectionWhere> get OR =>
      _$this._OR ??= new ListBuilder<GUserProjectsConnectionWhere>();
  set OR(ListBuilder<GUserProjectsConnectionWhere>? OR) => _$this._OR = OR;

  GProjectWhereBuilder? _node;
  GProjectWhereBuilder get node => _$this._node ??= new GProjectWhereBuilder();
  set node(GProjectWhereBuilder? node) => _$this._node = node;

  GProjectWhereBuilder? _node_NOT;
  GProjectWhereBuilder get node_NOT =>
      _$this._node_NOT ??= new GProjectWhereBuilder();
  set node_NOT(GProjectWhereBuilder? node_NOT) => _$this._node_NOT = node_NOT;

  GUserProjectsConnectionWhereBuilder();

  GUserProjectsConnectionWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _node = $v.node?.toBuilder();
      _node_NOT = $v.node_NOT?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsConnectionWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsConnectionWhere;
  }

  @override
  void update(void Function(GUserProjectsConnectionWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsConnectionWhere build() => _build();

  _$GUserProjectsConnectionWhere _build() {
    _$GUserProjectsConnectionWhere _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsConnectionWhere._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              node: _node?.build(),
              node_NOT: _node_NOT?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'node';
        _node?.build();
        _$failedField = 'node_NOT';
        _node_NOT?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsConnectionWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsConnectOrCreateFieldInput
    extends GUserProjectsConnectOrCreateFieldInput {
  @override
  final GProjectConnectOrCreateWhere where;
  @override
  final GUserProjectsConnectOrCreateFieldInputOnCreate onCreate;

  factory _$GUserProjectsConnectOrCreateFieldInput(
          [void Function(GUserProjectsConnectOrCreateFieldInputBuilder)?
              updates]) =>
      (new GUserProjectsConnectOrCreateFieldInputBuilder()..update(updates))
          ._build();

  _$GUserProjectsConnectOrCreateFieldInput._(
      {required this.where, required this.onCreate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GUserProjectsConnectOrCreateFieldInput', 'where');
    BuiltValueNullFieldError.checkNotNull(
        onCreate, r'GUserProjectsConnectOrCreateFieldInput', 'onCreate');
  }

  @override
  GUserProjectsConnectOrCreateFieldInput rebuild(
          void Function(GUserProjectsConnectOrCreateFieldInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsConnectOrCreateFieldInputBuilder toBuilder() =>
      new GUserProjectsConnectOrCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsConnectOrCreateFieldInput &&
        where == other.where &&
        onCreate == other.onCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), onCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GUserProjectsConnectOrCreateFieldInput')
          ..add('where', where)
          ..add('onCreate', onCreate))
        .toString();
  }
}

class GUserProjectsConnectOrCreateFieldInputBuilder
    implements
        Builder<GUserProjectsConnectOrCreateFieldInput,
            GUserProjectsConnectOrCreateFieldInputBuilder> {
  _$GUserProjectsConnectOrCreateFieldInput? _$v;

  GProjectConnectOrCreateWhereBuilder? _where;
  GProjectConnectOrCreateWhereBuilder get where =>
      _$this._where ??= new GProjectConnectOrCreateWhereBuilder();
  set where(GProjectConnectOrCreateWhereBuilder? where) =>
      _$this._where = where;

  GUserProjectsConnectOrCreateFieldInputOnCreateBuilder? _onCreate;
  GUserProjectsConnectOrCreateFieldInputOnCreateBuilder get onCreate =>
      _$this._onCreate ??=
          new GUserProjectsConnectOrCreateFieldInputOnCreateBuilder();
  set onCreate(
          GUserProjectsConnectOrCreateFieldInputOnCreateBuilder? onCreate) =>
      _$this._onCreate = onCreate;

  GUserProjectsConnectOrCreateFieldInputBuilder();

  GUserProjectsConnectOrCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where.toBuilder();
      _onCreate = $v.onCreate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsConnectOrCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsConnectOrCreateFieldInput;
  }

  @override
  void update(
      void Function(GUserProjectsConnectOrCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsConnectOrCreateFieldInput build() => _build();

  _$GUserProjectsConnectOrCreateFieldInput _build() {
    _$GUserProjectsConnectOrCreateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsConnectOrCreateFieldInput._(
              where: where.build(), onCreate: onCreate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        where.build();
        _$failedField = 'onCreate';
        onCreate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsConnectOrCreateFieldInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsConnectOrCreateFieldInputOnCreate
    extends GUserProjectsConnectOrCreateFieldInputOnCreate {
  @override
  final GProjectOnCreateInput node;

  factory _$GUserProjectsConnectOrCreateFieldInputOnCreate(
          [void Function(GUserProjectsConnectOrCreateFieldInputOnCreateBuilder)?
              updates]) =>
      (new GUserProjectsConnectOrCreateFieldInputOnCreateBuilder()
            ..update(updates))
          ._build();

  _$GUserProjectsConnectOrCreateFieldInputOnCreate._({required this.node})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GUserProjectsConnectOrCreateFieldInputOnCreate', 'node');
  }

  @override
  GUserProjectsConnectOrCreateFieldInputOnCreate rebuild(
          void Function(GUserProjectsConnectOrCreateFieldInputOnCreateBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsConnectOrCreateFieldInputOnCreateBuilder toBuilder() =>
      new GUserProjectsConnectOrCreateFieldInputOnCreateBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsConnectOrCreateFieldInputOnCreate &&
        node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GUserProjectsConnectOrCreateFieldInputOnCreate')
          ..add('node', node))
        .toString();
  }
}

class GUserProjectsConnectOrCreateFieldInputOnCreateBuilder
    implements
        Builder<GUserProjectsConnectOrCreateFieldInputOnCreate,
            GUserProjectsConnectOrCreateFieldInputOnCreateBuilder> {
  _$GUserProjectsConnectOrCreateFieldInputOnCreate? _$v;

  GProjectOnCreateInputBuilder? _node;
  GProjectOnCreateInputBuilder get node =>
      _$this._node ??= new GProjectOnCreateInputBuilder();
  set node(GProjectOnCreateInputBuilder? node) => _$this._node = node;

  GUserProjectsConnectOrCreateFieldInputOnCreateBuilder();

  GUserProjectsConnectOrCreateFieldInputOnCreateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsConnectOrCreateFieldInputOnCreate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsConnectOrCreateFieldInputOnCreate;
  }

  @override
  void update(
      void Function(GUserProjectsConnectOrCreateFieldInputOnCreateBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsConnectOrCreateFieldInputOnCreate build() => _build();

  _$GUserProjectsConnectOrCreateFieldInputOnCreate _build() {
    _$GUserProjectsConnectOrCreateFieldInputOnCreate _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsConnectOrCreateFieldInputOnCreate._(
              node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsConnectOrCreateFieldInputOnCreate',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsCreateFieldInput extends GUserProjectsCreateFieldInput {
  @override
  final GProjectCreateInput node;

  factory _$GUserProjectsCreateFieldInput(
          [void Function(GUserProjectsCreateFieldInputBuilder)? updates]) =>
      (new GUserProjectsCreateFieldInputBuilder()..update(updates))._build();

  _$GUserProjectsCreateFieldInput._({required this.node}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        node, r'GUserProjectsCreateFieldInput', 'node');
  }

  @override
  GUserProjectsCreateFieldInput rebuild(
          void Function(GUserProjectsCreateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsCreateFieldInputBuilder toBuilder() =>
      new GUserProjectsCreateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsCreateFieldInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsCreateFieldInput')
          ..add('node', node))
        .toString();
  }
}

class GUserProjectsCreateFieldInputBuilder
    implements
        Builder<GUserProjectsCreateFieldInput,
            GUserProjectsCreateFieldInputBuilder> {
  _$GUserProjectsCreateFieldInput? _$v;

  GProjectCreateInputBuilder? _node;
  GProjectCreateInputBuilder get node =>
      _$this._node ??= new GProjectCreateInputBuilder();
  set node(GProjectCreateInputBuilder? node) => _$this._node = node;

  GUserProjectsCreateFieldInputBuilder();

  GUserProjectsCreateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsCreateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsCreateFieldInput;
  }

  @override
  void update(void Function(GUserProjectsCreateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsCreateFieldInput build() => _build();

  _$GUserProjectsCreateFieldInput _build() {
    _$GUserProjectsCreateFieldInput _$result;
    try {
      _$result =
          _$v ?? new _$GUserProjectsCreateFieldInput._(node: node.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        node.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsCreateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsDeleteFieldInput extends GUserProjectsDeleteFieldInput {
  @override
  final GUserProjectsConnectionWhere? where;
  @override
  final GProjectDeleteInput? delete;

  factory _$GUserProjectsDeleteFieldInput(
          [void Function(GUserProjectsDeleteFieldInputBuilder)? updates]) =>
      (new GUserProjectsDeleteFieldInputBuilder()..update(updates))._build();

  _$GUserProjectsDeleteFieldInput._({this.where, this.delete}) : super._();

  @override
  GUserProjectsDeleteFieldInput rebuild(
          void Function(GUserProjectsDeleteFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsDeleteFieldInputBuilder toBuilder() =>
      new GUserProjectsDeleteFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsDeleteFieldInput &&
        where == other.where &&
        delete == other.delete;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), delete.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsDeleteFieldInput')
          ..add('where', where)
          ..add('delete', delete))
        .toString();
  }
}

class GUserProjectsDeleteFieldInputBuilder
    implements
        Builder<GUserProjectsDeleteFieldInput,
            GUserProjectsDeleteFieldInputBuilder> {
  _$GUserProjectsDeleteFieldInput? _$v;

  GUserProjectsConnectionWhereBuilder? _where;
  GUserProjectsConnectionWhereBuilder get where =>
      _$this._where ??= new GUserProjectsConnectionWhereBuilder();
  set where(GUserProjectsConnectionWhereBuilder? where) =>
      _$this._where = where;

  GProjectDeleteInputBuilder? _delete;
  GProjectDeleteInputBuilder get delete =>
      _$this._delete ??= new GProjectDeleteInputBuilder();
  set delete(GProjectDeleteInputBuilder? delete) => _$this._delete = delete;

  GUserProjectsDeleteFieldInputBuilder();

  GUserProjectsDeleteFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsDeleteFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsDeleteFieldInput;
  }

  @override
  void update(void Function(GUserProjectsDeleteFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsDeleteFieldInput build() => _build();

  _$GUserProjectsDeleteFieldInput _build() {
    _$GUserProjectsDeleteFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsDeleteFieldInput._(
              where: _where?.build(), delete: _delete?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'delete';
        _delete?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsDeleteFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsDisconnectFieldInput
    extends GUserProjectsDisconnectFieldInput {
  @override
  final GUserProjectsConnectionWhere? where;
  @override
  final GProjectDisconnectInput? disconnect;

  factory _$GUserProjectsDisconnectFieldInput(
          [void Function(GUserProjectsDisconnectFieldInputBuilder)? updates]) =>
      (new GUserProjectsDisconnectFieldInputBuilder()..update(updates))
          ._build();

  _$GUserProjectsDisconnectFieldInput._({this.where, this.disconnect})
      : super._();

  @override
  GUserProjectsDisconnectFieldInput rebuild(
          void Function(GUserProjectsDisconnectFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsDisconnectFieldInputBuilder toBuilder() =>
      new GUserProjectsDisconnectFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsDisconnectFieldInput &&
        where == other.where &&
        disconnect == other.disconnect;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, where.hashCode), disconnect.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsDisconnectFieldInput')
          ..add('where', where)
          ..add('disconnect', disconnect))
        .toString();
  }
}

class GUserProjectsDisconnectFieldInputBuilder
    implements
        Builder<GUserProjectsDisconnectFieldInput,
            GUserProjectsDisconnectFieldInputBuilder> {
  _$GUserProjectsDisconnectFieldInput? _$v;

  GUserProjectsConnectionWhereBuilder? _where;
  GUserProjectsConnectionWhereBuilder get where =>
      _$this._where ??= new GUserProjectsConnectionWhereBuilder();
  set where(GUserProjectsConnectionWhereBuilder? where) =>
      _$this._where = where;

  GProjectDisconnectInputBuilder? _disconnect;
  GProjectDisconnectInputBuilder get disconnect =>
      _$this._disconnect ??= new GProjectDisconnectInputBuilder();
  set disconnect(GProjectDisconnectInputBuilder? disconnect) =>
      _$this._disconnect = disconnect;

  GUserProjectsDisconnectFieldInputBuilder();

  GUserProjectsDisconnectFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsDisconnectFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsDisconnectFieldInput;
  }

  @override
  void update(
      void Function(GUserProjectsDisconnectFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsDisconnectFieldInput build() => _build();

  _$GUserProjectsDisconnectFieldInput _build() {
    _$GUserProjectsDisconnectFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsDisconnectFieldInput._(
              where: _where?.build(), disconnect: _disconnect?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsDisconnectFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsFieldInput extends GUserProjectsFieldInput {
  @override
  final BuiltList<GUserProjectsCreateFieldInput>? create;
  @override
  final BuiltList<GUserProjectsConnectFieldInput>? connect;
  @override
  final BuiltList<GUserProjectsConnectOrCreateFieldInput>? connectOrCreate;

  factory _$GUserProjectsFieldInput(
          [void Function(GUserProjectsFieldInputBuilder)? updates]) =>
      (new GUserProjectsFieldInputBuilder()..update(updates))._build();

  _$GUserProjectsFieldInput._({this.create, this.connect, this.connectOrCreate})
      : super._();

  @override
  GUserProjectsFieldInput rebuild(
          void Function(GUserProjectsFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsFieldInputBuilder toBuilder() =>
      new GUserProjectsFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsFieldInput &&
        create == other.create &&
        connect == other.connect &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, create.hashCode), connect.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsFieldInput')
          ..add('create', create)
          ..add('connect', connect)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GUserProjectsFieldInputBuilder
    implements
        Builder<GUserProjectsFieldInput, GUserProjectsFieldInputBuilder> {
  _$GUserProjectsFieldInput? _$v;

  ListBuilder<GUserProjectsCreateFieldInput>? _create;
  ListBuilder<GUserProjectsCreateFieldInput> get create =>
      _$this._create ??= new ListBuilder<GUserProjectsCreateFieldInput>();
  set create(ListBuilder<GUserProjectsCreateFieldInput>? create) =>
      _$this._create = create;

  ListBuilder<GUserProjectsConnectFieldInput>? _connect;
  ListBuilder<GUserProjectsConnectFieldInput> get connect =>
      _$this._connect ??= new ListBuilder<GUserProjectsConnectFieldInput>();
  set connect(ListBuilder<GUserProjectsConnectFieldInput>? connect) =>
      _$this._connect = connect;

  ListBuilder<GUserProjectsConnectOrCreateFieldInput>? _connectOrCreate;
  ListBuilder<GUserProjectsConnectOrCreateFieldInput> get connectOrCreate =>
      _$this._connectOrCreate ??=
          new ListBuilder<GUserProjectsConnectOrCreateFieldInput>();
  set connectOrCreate(
          ListBuilder<GUserProjectsConnectOrCreateFieldInput>?
              connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GUserProjectsFieldInputBuilder();

  GUserProjectsFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _create = $v.create?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsFieldInput;
  }

  @override
  void update(void Function(GUserProjectsFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsFieldInput build() => _build();

  _$GUserProjectsFieldInput _build() {
    _$GUserProjectsFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsFieldInput._(
              create: _create?.build(),
              connect: _connect?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsNodeAggregationWhereInput
    extends GUserProjectsNodeAggregationWhereInput {
  @override
  final BuiltList<GUserProjectsNodeAggregationWhereInput>? AND;
  @override
  final BuiltList<GUserProjectsNodeAggregationWhereInput>? OR;
  @override
  final String? id_EQUAL;
  @override
  final String? title_EQUAL;
  @override
  final double? title_AVERAGE_EQUAL;
  @override
  final int? title_LONGEST_EQUAL;
  @override
  final int? title_SHORTEST_EQUAL;
  @override
  final int? title_GT;
  @override
  final double? title_AVERAGE_GT;
  @override
  final int? title_LONGEST_GT;
  @override
  final int? title_SHORTEST_GT;
  @override
  final int? title_GTE;
  @override
  final double? title_AVERAGE_GTE;
  @override
  final int? title_LONGEST_GTE;
  @override
  final int? title_SHORTEST_GTE;
  @override
  final int? title_LT;
  @override
  final double? title_AVERAGE_LT;
  @override
  final int? title_LONGEST_LT;
  @override
  final int? title_SHORTEST_LT;
  @override
  final int? title_LTE;
  @override
  final double? title_AVERAGE_LTE;
  @override
  final int? title_LONGEST_LTE;
  @override
  final int? title_SHORTEST_LTE;
  @override
  final String? description_EQUAL;
  @override
  final double? description_AVERAGE_EQUAL;
  @override
  final int? description_LONGEST_EQUAL;
  @override
  final int? description_SHORTEST_EQUAL;
  @override
  final int? description_GT;
  @override
  final double? description_AVERAGE_GT;
  @override
  final int? description_LONGEST_GT;
  @override
  final int? description_SHORTEST_GT;
  @override
  final int? description_GTE;
  @override
  final double? description_AVERAGE_GTE;
  @override
  final int? description_LONGEST_GTE;
  @override
  final int? description_SHORTEST_GTE;
  @override
  final int? description_LT;
  @override
  final double? description_AVERAGE_LT;
  @override
  final int? description_LONGEST_LT;
  @override
  final int? description_SHORTEST_LT;
  @override
  final int? description_LTE;
  @override
  final double? description_AVERAGE_LTE;
  @override
  final int? description_LONGEST_LTE;
  @override
  final int? description_SHORTEST_LTE;
  @override
  final GDateTime? creationDate_EQUAL;
  @override
  final GDateTime? creationDate_MIN_EQUAL;
  @override
  final GDateTime? creationDate_MAX_EQUAL;
  @override
  final GDateTime? creationDate_GT;
  @override
  final GDateTime? creationDate_MIN_GT;
  @override
  final GDateTime? creationDate_MAX_GT;
  @override
  final GDateTime? creationDate_GTE;
  @override
  final GDateTime? creationDate_MIN_GTE;
  @override
  final GDateTime? creationDate_MAX_GTE;
  @override
  final GDateTime? creationDate_LT;
  @override
  final GDateTime? creationDate_MIN_LT;
  @override
  final GDateTime? creationDate_MAX_LT;
  @override
  final GDateTime? creationDate_LTE;
  @override
  final GDateTime? creationDate_MIN_LTE;
  @override
  final GDateTime? creationDate_MAX_LTE;
  @override
  final GDateTime? modifiedDate_EQUAL;
  @override
  final GDateTime? modifiedDate_MIN_EQUAL;
  @override
  final GDateTime? modifiedDate_MAX_EQUAL;
  @override
  final GDateTime? modifiedDate_GT;
  @override
  final GDateTime? modifiedDate_MIN_GT;
  @override
  final GDateTime? modifiedDate_MAX_GT;
  @override
  final GDateTime? modifiedDate_GTE;
  @override
  final GDateTime? modifiedDate_MIN_GTE;
  @override
  final GDateTime? modifiedDate_MAX_GTE;
  @override
  final GDateTime? modifiedDate_LT;
  @override
  final GDateTime? modifiedDate_MIN_LT;
  @override
  final GDateTime? modifiedDate_MAX_LT;
  @override
  final GDateTime? modifiedDate_LTE;
  @override
  final GDateTime? modifiedDate_MIN_LTE;
  @override
  final GDateTime? modifiedDate_MAX_LTE;

  factory _$GUserProjectsNodeAggregationWhereInput(
          [void Function(GUserProjectsNodeAggregationWhereInputBuilder)?
              updates]) =>
      (new GUserProjectsNodeAggregationWhereInputBuilder()..update(updates))
          ._build();

  _$GUserProjectsNodeAggregationWhereInput._(
      {this.AND,
      this.OR,
      this.id_EQUAL,
      this.title_EQUAL,
      this.title_AVERAGE_EQUAL,
      this.title_LONGEST_EQUAL,
      this.title_SHORTEST_EQUAL,
      this.title_GT,
      this.title_AVERAGE_GT,
      this.title_LONGEST_GT,
      this.title_SHORTEST_GT,
      this.title_GTE,
      this.title_AVERAGE_GTE,
      this.title_LONGEST_GTE,
      this.title_SHORTEST_GTE,
      this.title_LT,
      this.title_AVERAGE_LT,
      this.title_LONGEST_LT,
      this.title_SHORTEST_LT,
      this.title_LTE,
      this.title_AVERAGE_LTE,
      this.title_LONGEST_LTE,
      this.title_SHORTEST_LTE,
      this.description_EQUAL,
      this.description_AVERAGE_EQUAL,
      this.description_LONGEST_EQUAL,
      this.description_SHORTEST_EQUAL,
      this.description_GT,
      this.description_AVERAGE_GT,
      this.description_LONGEST_GT,
      this.description_SHORTEST_GT,
      this.description_GTE,
      this.description_AVERAGE_GTE,
      this.description_LONGEST_GTE,
      this.description_SHORTEST_GTE,
      this.description_LT,
      this.description_AVERAGE_LT,
      this.description_LONGEST_LT,
      this.description_SHORTEST_LT,
      this.description_LTE,
      this.description_AVERAGE_LTE,
      this.description_LONGEST_LTE,
      this.description_SHORTEST_LTE,
      this.creationDate_EQUAL,
      this.creationDate_MIN_EQUAL,
      this.creationDate_MAX_EQUAL,
      this.creationDate_GT,
      this.creationDate_MIN_GT,
      this.creationDate_MAX_GT,
      this.creationDate_GTE,
      this.creationDate_MIN_GTE,
      this.creationDate_MAX_GTE,
      this.creationDate_LT,
      this.creationDate_MIN_LT,
      this.creationDate_MAX_LT,
      this.creationDate_LTE,
      this.creationDate_MIN_LTE,
      this.creationDate_MAX_LTE,
      this.modifiedDate_EQUAL,
      this.modifiedDate_MIN_EQUAL,
      this.modifiedDate_MAX_EQUAL,
      this.modifiedDate_GT,
      this.modifiedDate_MIN_GT,
      this.modifiedDate_MAX_GT,
      this.modifiedDate_GTE,
      this.modifiedDate_MIN_GTE,
      this.modifiedDate_MAX_GTE,
      this.modifiedDate_LT,
      this.modifiedDate_MIN_LT,
      this.modifiedDate_MAX_LT,
      this.modifiedDate_LTE,
      this.modifiedDate_MIN_LTE,
      this.modifiedDate_MAX_LTE})
      : super._();

  @override
  GUserProjectsNodeAggregationWhereInput rebuild(
          void Function(GUserProjectsNodeAggregationWhereInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsNodeAggregationWhereInputBuilder toBuilder() =>
      new GUserProjectsNodeAggregationWhereInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsNodeAggregationWhereInput &&
        AND == other.AND &&
        OR == other.OR &&
        id_EQUAL == other.id_EQUAL &&
        title_EQUAL == other.title_EQUAL &&
        title_AVERAGE_EQUAL == other.title_AVERAGE_EQUAL &&
        title_LONGEST_EQUAL == other.title_LONGEST_EQUAL &&
        title_SHORTEST_EQUAL == other.title_SHORTEST_EQUAL &&
        title_GT == other.title_GT &&
        title_AVERAGE_GT == other.title_AVERAGE_GT &&
        title_LONGEST_GT == other.title_LONGEST_GT &&
        title_SHORTEST_GT == other.title_SHORTEST_GT &&
        title_GTE == other.title_GTE &&
        title_AVERAGE_GTE == other.title_AVERAGE_GTE &&
        title_LONGEST_GTE == other.title_LONGEST_GTE &&
        title_SHORTEST_GTE == other.title_SHORTEST_GTE &&
        title_LT == other.title_LT &&
        title_AVERAGE_LT == other.title_AVERAGE_LT &&
        title_LONGEST_LT == other.title_LONGEST_LT &&
        title_SHORTEST_LT == other.title_SHORTEST_LT &&
        title_LTE == other.title_LTE &&
        title_AVERAGE_LTE == other.title_AVERAGE_LTE &&
        title_LONGEST_LTE == other.title_LONGEST_LTE &&
        title_SHORTEST_LTE == other.title_SHORTEST_LTE &&
        description_EQUAL == other.description_EQUAL &&
        description_AVERAGE_EQUAL == other.description_AVERAGE_EQUAL &&
        description_LONGEST_EQUAL == other.description_LONGEST_EQUAL &&
        description_SHORTEST_EQUAL == other.description_SHORTEST_EQUAL &&
        description_GT == other.description_GT &&
        description_AVERAGE_GT == other.description_AVERAGE_GT &&
        description_LONGEST_GT == other.description_LONGEST_GT &&
        description_SHORTEST_GT == other.description_SHORTEST_GT &&
        description_GTE == other.description_GTE &&
        description_AVERAGE_GTE == other.description_AVERAGE_GTE &&
        description_LONGEST_GTE == other.description_LONGEST_GTE &&
        description_SHORTEST_GTE == other.description_SHORTEST_GTE &&
        description_LT == other.description_LT &&
        description_AVERAGE_LT == other.description_AVERAGE_LT &&
        description_LONGEST_LT == other.description_LONGEST_LT &&
        description_SHORTEST_LT == other.description_SHORTEST_LT &&
        description_LTE == other.description_LTE &&
        description_AVERAGE_LTE == other.description_AVERAGE_LTE &&
        description_LONGEST_LTE == other.description_LONGEST_LTE &&
        description_SHORTEST_LTE == other.description_SHORTEST_LTE &&
        creationDate_EQUAL == other.creationDate_EQUAL &&
        creationDate_MIN_EQUAL == other.creationDate_MIN_EQUAL &&
        creationDate_MAX_EQUAL == other.creationDate_MAX_EQUAL &&
        creationDate_GT == other.creationDate_GT &&
        creationDate_MIN_GT == other.creationDate_MIN_GT &&
        creationDate_MAX_GT == other.creationDate_MAX_GT &&
        creationDate_GTE == other.creationDate_GTE &&
        creationDate_MIN_GTE == other.creationDate_MIN_GTE &&
        creationDate_MAX_GTE == other.creationDate_MAX_GTE &&
        creationDate_LT == other.creationDate_LT &&
        creationDate_MIN_LT == other.creationDate_MIN_LT &&
        creationDate_MAX_LT == other.creationDate_MAX_LT &&
        creationDate_LTE == other.creationDate_LTE &&
        creationDate_MIN_LTE == other.creationDate_MIN_LTE &&
        creationDate_MAX_LTE == other.creationDate_MAX_LTE &&
        modifiedDate_EQUAL == other.modifiedDate_EQUAL &&
        modifiedDate_MIN_EQUAL == other.modifiedDate_MIN_EQUAL &&
        modifiedDate_MAX_EQUAL == other.modifiedDate_MAX_EQUAL &&
        modifiedDate_GT == other.modifiedDate_GT &&
        modifiedDate_MIN_GT == other.modifiedDate_MIN_GT &&
        modifiedDate_MAX_GT == other.modifiedDate_MAX_GT &&
        modifiedDate_GTE == other.modifiedDate_GTE &&
        modifiedDate_MIN_GTE == other.modifiedDate_MIN_GTE &&
        modifiedDate_MAX_GTE == other.modifiedDate_MAX_GTE &&
        modifiedDate_LT == other.modifiedDate_LT &&
        modifiedDate_MIN_LT == other.modifiedDate_MIN_LT &&
        modifiedDate_MAX_LT == other.modifiedDate_MAX_LT &&
        modifiedDate_LTE == other.modifiedDate_LTE &&
        modifiedDate_MIN_LTE == other.modifiedDate_MIN_LTE &&
        modifiedDate_MAX_LTE == other.modifiedDate_MAX_LTE;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, AND.hashCode), OR.hashCode), id_EQUAL.hashCode), title_EQUAL.hashCode), title_AVERAGE_EQUAL.hashCode), title_LONGEST_EQUAL.hashCode), title_SHORTEST_EQUAL.hashCode), title_GT.hashCode), title_AVERAGE_GT.hashCode), title_LONGEST_GT.hashCode), title_SHORTEST_GT.hashCode), title_GTE.hashCode), title_AVERAGE_GTE.hashCode), title_LONGEST_GTE.hashCode), title_SHORTEST_GTE.hashCode), title_LT.hashCode), title_AVERAGE_LT.hashCode), title_LONGEST_LT.hashCode), title_SHORTEST_LT.hashCode), title_LTE.hashCode), title_AVERAGE_LTE.hashCode), title_LONGEST_LTE.hashCode), title_SHORTEST_LTE.hashCode), description_EQUAL.hashCode), description_AVERAGE_EQUAL.hashCode), description_LONGEST_EQUAL.hashCode), description_SHORTEST_EQUAL.hashCode), description_GT.hashCode), description_AVERAGE_GT.hashCode), description_LONGEST_GT.hashCode), description_SHORTEST_GT.hashCode), description_GTE.hashCode), description_AVERAGE_GTE.hashCode), description_LONGEST_GTE.hashCode), description_SHORTEST_GTE.hashCode), description_LT.hashCode), description_AVERAGE_LT.hashCode), description_LONGEST_LT.hashCode), description_SHORTEST_LT.hashCode), description_LTE.hashCode), description_AVERAGE_LTE.hashCode), description_LONGEST_LTE.hashCode), description_SHORTEST_LTE.hashCode), creationDate_EQUAL.hashCode), creationDate_MIN_EQUAL.hashCode), creationDate_MAX_EQUAL.hashCode), creationDate_GT.hashCode), creationDate_MIN_GT.hashCode), creationDate_MAX_GT.hashCode), creationDate_GTE.hashCode), creationDate_MIN_GTE.hashCode), creationDate_MAX_GTE.hashCode), creationDate_LT.hashCode), creationDate_MIN_LT.hashCode),
                                                                                creationDate_MAX_LT.hashCode),
                                                                            creationDate_LTE.hashCode),
                                                                        creationDate_MIN_LTE.hashCode),
                                                                    creationDate_MAX_LTE.hashCode),
                                                                modifiedDate_EQUAL.hashCode),
                                                            modifiedDate_MIN_EQUAL.hashCode),
                                                        modifiedDate_MAX_EQUAL.hashCode),
                                                    modifiedDate_GT.hashCode),
                                                modifiedDate_MIN_GT.hashCode),
                                            modifiedDate_MAX_GT.hashCode),
                                        modifiedDate_GTE.hashCode),
                                    modifiedDate_MIN_GTE.hashCode),
                                modifiedDate_MAX_GTE.hashCode),
                            modifiedDate_LT.hashCode),
                        modifiedDate_MIN_LT.hashCode),
                    modifiedDate_MAX_LT.hashCode),
                modifiedDate_LTE.hashCode),
            modifiedDate_MIN_LTE.hashCode),
        modifiedDate_MAX_LTE.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GUserProjectsNodeAggregationWhereInput')
          ..add('AND', AND)
          ..add('OR', OR)
          ..add('id_EQUAL', id_EQUAL)
          ..add('title_EQUAL', title_EQUAL)
          ..add('title_AVERAGE_EQUAL', title_AVERAGE_EQUAL)
          ..add('title_LONGEST_EQUAL', title_LONGEST_EQUAL)
          ..add('title_SHORTEST_EQUAL', title_SHORTEST_EQUAL)
          ..add('title_GT', title_GT)
          ..add('title_AVERAGE_GT', title_AVERAGE_GT)
          ..add('title_LONGEST_GT', title_LONGEST_GT)
          ..add('title_SHORTEST_GT', title_SHORTEST_GT)
          ..add('title_GTE', title_GTE)
          ..add('title_AVERAGE_GTE', title_AVERAGE_GTE)
          ..add('title_LONGEST_GTE', title_LONGEST_GTE)
          ..add('title_SHORTEST_GTE', title_SHORTEST_GTE)
          ..add('title_LT', title_LT)
          ..add('title_AVERAGE_LT', title_AVERAGE_LT)
          ..add('title_LONGEST_LT', title_LONGEST_LT)
          ..add('title_SHORTEST_LT', title_SHORTEST_LT)
          ..add('title_LTE', title_LTE)
          ..add('title_AVERAGE_LTE', title_AVERAGE_LTE)
          ..add('title_LONGEST_LTE', title_LONGEST_LTE)
          ..add('title_SHORTEST_LTE', title_SHORTEST_LTE)
          ..add('description_EQUAL', description_EQUAL)
          ..add('description_AVERAGE_EQUAL', description_AVERAGE_EQUAL)
          ..add('description_LONGEST_EQUAL', description_LONGEST_EQUAL)
          ..add('description_SHORTEST_EQUAL', description_SHORTEST_EQUAL)
          ..add('description_GT', description_GT)
          ..add('description_AVERAGE_GT', description_AVERAGE_GT)
          ..add('description_LONGEST_GT', description_LONGEST_GT)
          ..add('description_SHORTEST_GT', description_SHORTEST_GT)
          ..add('description_GTE', description_GTE)
          ..add('description_AVERAGE_GTE', description_AVERAGE_GTE)
          ..add('description_LONGEST_GTE', description_LONGEST_GTE)
          ..add('description_SHORTEST_GTE', description_SHORTEST_GTE)
          ..add('description_LT', description_LT)
          ..add('description_AVERAGE_LT', description_AVERAGE_LT)
          ..add('description_LONGEST_LT', description_LONGEST_LT)
          ..add('description_SHORTEST_LT', description_SHORTEST_LT)
          ..add('description_LTE', description_LTE)
          ..add('description_AVERAGE_LTE', description_AVERAGE_LTE)
          ..add('description_LONGEST_LTE', description_LONGEST_LTE)
          ..add('description_SHORTEST_LTE', description_SHORTEST_LTE)
          ..add('creationDate_EQUAL', creationDate_EQUAL)
          ..add('creationDate_MIN_EQUAL', creationDate_MIN_EQUAL)
          ..add('creationDate_MAX_EQUAL', creationDate_MAX_EQUAL)
          ..add('creationDate_GT', creationDate_GT)
          ..add('creationDate_MIN_GT', creationDate_MIN_GT)
          ..add('creationDate_MAX_GT', creationDate_MAX_GT)
          ..add('creationDate_GTE', creationDate_GTE)
          ..add('creationDate_MIN_GTE', creationDate_MIN_GTE)
          ..add('creationDate_MAX_GTE', creationDate_MAX_GTE)
          ..add('creationDate_LT', creationDate_LT)
          ..add('creationDate_MIN_LT', creationDate_MIN_LT)
          ..add('creationDate_MAX_LT', creationDate_MAX_LT)
          ..add('creationDate_LTE', creationDate_LTE)
          ..add('creationDate_MIN_LTE', creationDate_MIN_LTE)
          ..add('creationDate_MAX_LTE', creationDate_MAX_LTE)
          ..add('modifiedDate_EQUAL', modifiedDate_EQUAL)
          ..add('modifiedDate_MIN_EQUAL', modifiedDate_MIN_EQUAL)
          ..add('modifiedDate_MAX_EQUAL', modifiedDate_MAX_EQUAL)
          ..add('modifiedDate_GT', modifiedDate_GT)
          ..add('modifiedDate_MIN_GT', modifiedDate_MIN_GT)
          ..add('modifiedDate_MAX_GT', modifiedDate_MAX_GT)
          ..add('modifiedDate_GTE', modifiedDate_GTE)
          ..add('modifiedDate_MIN_GTE', modifiedDate_MIN_GTE)
          ..add('modifiedDate_MAX_GTE', modifiedDate_MAX_GTE)
          ..add('modifiedDate_LT', modifiedDate_LT)
          ..add('modifiedDate_MIN_LT', modifiedDate_MIN_LT)
          ..add('modifiedDate_MAX_LT', modifiedDate_MAX_LT)
          ..add('modifiedDate_LTE', modifiedDate_LTE)
          ..add('modifiedDate_MIN_LTE', modifiedDate_MIN_LTE)
          ..add('modifiedDate_MAX_LTE', modifiedDate_MAX_LTE))
        .toString();
  }
}

class GUserProjectsNodeAggregationWhereInputBuilder
    implements
        Builder<GUserProjectsNodeAggregationWhereInput,
            GUserProjectsNodeAggregationWhereInputBuilder> {
  _$GUserProjectsNodeAggregationWhereInput? _$v;

  ListBuilder<GUserProjectsNodeAggregationWhereInput>? _AND;
  ListBuilder<GUserProjectsNodeAggregationWhereInput> get AND =>
      _$this._AND ??= new ListBuilder<GUserProjectsNodeAggregationWhereInput>();
  set AND(ListBuilder<GUserProjectsNodeAggregationWhereInput>? AND) =>
      _$this._AND = AND;

  ListBuilder<GUserProjectsNodeAggregationWhereInput>? _OR;
  ListBuilder<GUserProjectsNodeAggregationWhereInput> get OR =>
      _$this._OR ??= new ListBuilder<GUserProjectsNodeAggregationWhereInput>();
  set OR(ListBuilder<GUserProjectsNodeAggregationWhereInput>? OR) =>
      _$this._OR = OR;

  String? _id_EQUAL;
  String? get id_EQUAL => _$this._id_EQUAL;
  set id_EQUAL(String? id_EQUAL) => _$this._id_EQUAL = id_EQUAL;

  String? _title_EQUAL;
  String? get title_EQUAL => _$this._title_EQUAL;
  set title_EQUAL(String? title_EQUAL) => _$this._title_EQUAL = title_EQUAL;

  double? _title_AVERAGE_EQUAL;
  double? get title_AVERAGE_EQUAL => _$this._title_AVERAGE_EQUAL;
  set title_AVERAGE_EQUAL(double? title_AVERAGE_EQUAL) =>
      _$this._title_AVERAGE_EQUAL = title_AVERAGE_EQUAL;

  int? _title_LONGEST_EQUAL;
  int? get title_LONGEST_EQUAL => _$this._title_LONGEST_EQUAL;
  set title_LONGEST_EQUAL(int? title_LONGEST_EQUAL) =>
      _$this._title_LONGEST_EQUAL = title_LONGEST_EQUAL;

  int? _title_SHORTEST_EQUAL;
  int? get title_SHORTEST_EQUAL => _$this._title_SHORTEST_EQUAL;
  set title_SHORTEST_EQUAL(int? title_SHORTEST_EQUAL) =>
      _$this._title_SHORTEST_EQUAL = title_SHORTEST_EQUAL;

  int? _title_GT;
  int? get title_GT => _$this._title_GT;
  set title_GT(int? title_GT) => _$this._title_GT = title_GT;

  double? _title_AVERAGE_GT;
  double? get title_AVERAGE_GT => _$this._title_AVERAGE_GT;
  set title_AVERAGE_GT(double? title_AVERAGE_GT) =>
      _$this._title_AVERAGE_GT = title_AVERAGE_GT;

  int? _title_LONGEST_GT;
  int? get title_LONGEST_GT => _$this._title_LONGEST_GT;
  set title_LONGEST_GT(int? title_LONGEST_GT) =>
      _$this._title_LONGEST_GT = title_LONGEST_GT;

  int? _title_SHORTEST_GT;
  int? get title_SHORTEST_GT => _$this._title_SHORTEST_GT;
  set title_SHORTEST_GT(int? title_SHORTEST_GT) =>
      _$this._title_SHORTEST_GT = title_SHORTEST_GT;

  int? _title_GTE;
  int? get title_GTE => _$this._title_GTE;
  set title_GTE(int? title_GTE) => _$this._title_GTE = title_GTE;

  double? _title_AVERAGE_GTE;
  double? get title_AVERAGE_GTE => _$this._title_AVERAGE_GTE;
  set title_AVERAGE_GTE(double? title_AVERAGE_GTE) =>
      _$this._title_AVERAGE_GTE = title_AVERAGE_GTE;

  int? _title_LONGEST_GTE;
  int? get title_LONGEST_GTE => _$this._title_LONGEST_GTE;
  set title_LONGEST_GTE(int? title_LONGEST_GTE) =>
      _$this._title_LONGEST_GTE = title_LONGEST_GTE;

  int? _title_SHORTEST_GTE;
  int? get title_SHORTEST_GTE => _$this._title_SHORTEST_GTE;
  set title_SHORTEST_GTE(int? title_SHORTEST_GTE) =>
      _$this._title_SHORTEST_GTE = title_SHORTEST_GTE;

  int? _title_LT;
  int? get title_LT => _$this._title_LT;
  set title_LT(int? title_LT) => _$this._title_LT = title_LT;

  double? _title_AVERAGE_LT;
  double? get title_AVERAGE_LT => _$this._title_AVERAGE_LT;
  set title_AVERAGE_LT(double? title_AVERAGE_LT) =>
      _$this._title_AVERAGE_LT = title_AVERAGE_LT;

  int? _title_LONGEST_LT;
  int? get title_LONGEST_LT => _$this._title_LONGEST_LT;
  set title_LONGEST_LT(int? title_LONGEST_LT) =>
      _$this._title_LONGEST_LT = title_LONGEST_LT;

  int? _title_SHORTEST_LT;
  int? get title_SHORTEST_LT => _$this._title_SHORTEST_LT;
  set title_SHORTEST_LT(int? title_SHORTEST_LT) =>
      _$this._title_SHORTEST_LT = title_SHORTEST_LT;

  int? _title_LTE;
  int? get title_LTE => _$this._title_LTE;
  set title_LTE(int? title_LTE) => _$this._title_LTE = title_LTE;

  double? _title_AVERAGE_LTE;
  double? get title_AVERAGE_LTE => _$this._title_AVERAGE_LTE;
  set title_AVERAGE_LTE(double? title_AVERAGE_LTE) =>
      _$this._title_AVERAGE_LTE = title_AVERAGE_LTE;

  int? _title_LONGEST_LTE;
  int? get title_LONGEST_LTE => _$this._title_LONGEST_LTE;
  set title_LONGEST_LTE(int? title_LONGEST_LTE) =>
      _$this._title_LONGEST_LTE = title_LONGEST_LTE;

  int? _title_SHORTEST_LTE;
  int? get title_SHORTEST_LTE => _$this._title_SHORTEST_LTE;
  set title_SHORTEST_LTE(int? title_SHORTEST_LTE) =>
      _$this._title_SHORTEST_LTE = title_SHORTEST_LTE;

  String? _description_EQUAL;
  String? get description_EQUAL => _$this._description_EQUAL;
  set description_EQUAL(String? description_EQUAL) =>
      _$this._description_EQUAL = description_EQUAL;

  double? _description_AVERAGE_EQUAL;
  double? get description_AVERAGE_EQUAL => _$this._description_AVERAGE_EQUAL;
  set description_AVERAGE_EQUAL(double? description_AVERAGE_EQUAL) =>
      _$this._description_AVERAGE_EQUAL = description_AVERAGE_EQUAL;

  int? _description_LONGEST_EQUAL;
  int? get description_LONGEST_EQUAL => _$this._description_LONGEST_EQUAL;
  set description_LONGEST_EQUAL(int? description_LONGEST_EQUAL) =>
      _$this._description_LONGEST_EQUAL = description_LONGEST_EQUAL;

  int? _description_SHORTEST_EQUAL;
  int? get description_SHORTEST_EQUAL => _$this._description_SHORTEST_EQUAL;
  set description_SHORTEST_EQUAL(int? description_SHORTEST_EQUAL) =>
      _$this._description_SHORTEST_EQUAL = description_SHORTEST_EQUAL;

  int? _description_GT;
  int? get description_GT => _$this._description_GT;
  set description_GT(int? description_GT) =>
      _$this._description_GT = description_GT;

  double? _description_AVERAGE_GT;
  double? get description_AVERAGE_GT => _$this._description_AVERAGE_GT;
  set description_AVERAGE_GT(double? description_AVERAGE_GT) =>
      _$this._description_AVERAGE_GT = description_AVERAGE_GT;

  int? _description_LONGEST_GT;
  int? get description_LONGEST_GT => _$this._description_LONGEST_GT;
  set description_LONGEST_GT(int? description_LONGEST_GT) =>
      _$this._description_LONGEST_GT = description_LONGEST_GT;

  int? _description_SHORTEST_GT;
  int? get description_SHORTEST_GT => _$this._description_SHORTEST_GT;
  set description_SHORTEST_GT(int? description_SHORTEST_GT) =>
      _$this._description_SHORTEST_GT = description_SHORTEST_GT;

  int? _description_GTE;
  int? get description_GTE => _$this._description_GTE;
  set description_GTE(int? description_GTE) =>
      _$this._description_GTE = description_GTE;

  double? _description_AVERAGE_GTE;
  double? get description_AVERAGE_GTE => _$this._description_AVERAGE_GTE;
  set description_AVERAGE_GTE(double? description_AVERAGE_GTE) =>
      _$this._description_AVERAGE_GTE = description_AVERAGE_GTE;

  int? _description_LONGEST_GTE;
  int? get description_LONGEST_GTE => _$this._description_LONGEST_GTE;
  set description_LONGEST_GTE(int? description_LONGEST_GTE) =>
      _$this._description_LONGEST_GTE = description_LONGEST_GTE;

  int? _description_SHORTEST_GTE;
  int? get description_SHORTEST_GTE => _$this._description_SHORTEST_GTE;
  set description_SHORTEST_GTE(int? description_SHORTEST_GTE) =>
      _$this._description_SHORTEST_GTE = description_SHORTEST_GTE;

  int? _description_LT;
  int? get description_LT => _$this._description_LT;
  set description_LT(int? description_LT) =>
      _$this._description_LT = description_LT;

  double? _description_AVERAGE_LT;
  double? get description_AVERAGE_LT => _$this._description_AVERAGE_LT;
  set description_AVERAGE_LT(double? description_AVERAGE_LT) =>
      _$this._description_AVERAGE_LT = description_AVERAGE_LT;

  int? _description_LONGEST_LT;
  int? get description_LONGEST_LT => _$this._description_LONGEST_LT;
  set description_LONGEST_LT(int? description_LONGEST_LT) =>
      _$this._description_LONGEST_LT = description_LONGEST_LT;

  int? _description_SHORTEST_LT;
  int? get description_SHORTEST_LT => _$this._description_SHORTEST_LT;
  set description_SHORTEST_LT(int? description_SHORTEST_LT) =>
      _$this._description_SHORTEST_LT = description_SHORTEST_LT;

  int? _description_LTE;
  int? get description_LTE => _$this._description_LTE;
  set description_LTE(int? description_LTE) =>
      _$this._description_LTE = description_LTE;

  double? _description_AVERAGE_LTE;
  double? get description_AVERAGE_LTE => _$this._description_AVERAGE_LTE;
  set description_AVERAGE_LTE(double? description_AVERAGE_LTE) =>
      _$this._description_AVERAGE_LTE = description_AVERAGE_LTE;

  int? _description_LONGEST_LTE;
  int? get description_LONGEST_LTE => _$this._description_LONGEST_LTE;
  set description_LONGEST_LTE(int? description_LONGEST_LTE) =>
      _$this._description_LONGEST_LTE = description_LONGEST_LTE;

  int? _description_SHORTEST_LTE;
  int? get description_SHORTEST_LTE => _$this._description_SHORTEST_LTE;
  set description_SHORTEST_LTE(int? description_SHORTEST_LTE) =>
      _$this._description_SHORTEST_LTE = description_SHORTEST_LTE;

  GDateTimeBuilder? _creationDate_EQUAL;
  GDateTimeBuilder get creationDate_EQUAL =>
      _$this._creationDate_EQUAL ??= new GDateTimeBuilder();
  set creationDate_EQUAL(GDateTimeBuilder? creationDate_EQUAL) =>
      _$this._creationDate_EQUAL = creationDate_EQUAL;

  GDateTimeBuilder? _creationDate_MIN_EQUAL;
  GDateTimeBuilder get creationDate_MIN_EQUAL =>
      _$this._creationDate_MIN_EQUAL ??= new GDateTimeBuilder();
  set creationDate_MIN_EQUAL(GDateTimeBuilder? creationDate_MIN_EQUAL) =>
      _$this._creationDate_MIN_EQUAL = creationDate_MIN_EQUAL;

  GDateTimeBuilder? _creationDate_MAX_EQUAL;
  GDateTimeBuilder get creationDate_MAX_EQUAL =>
      _$this._creationDate_MAX_EQUAL ??= new GDateTimeBuilder();
  set creationDate_MAX_EQUAL(GDateTimeBuilder? creationDate_MAX_EQUAL) =>
      _$this._creationDate_MAX_EQUAL = creationDate_MAX_EQUAL;

  GDateTimeBuilder? _creationDate_GT;
  GDateTimeBuilder get creationDate_GT =>
      _$this._creationDate_GT ??= new GDateTimeBuilder();
  set creationDate_GT(GDateTimeBuilder? creationDate_GT) =>
      _$this._creationDate_GT = creationDate_GT;

  GDateTimeBuilder? _creationDate_MIN_GT;
  GDateTimeBuilder get creationDate_MIN_GT =>
      _$this._creationDate_MIN_GT ??= new GDateTimeBuilder();
  set creationDate_MIN_GT(GDateTimeBuilder? creationDate_MIN_GT) =>
      _$this._creationDate_MIN_GT = creationDate_MIN_GT;

  GDateTimeBuilder? _creationDate_MAX_GT;
  GDateTimeBuilder get creationDate_MAX_GT =>
      _$this._creationDate_MAX_GT ??= new GDateTimeBuilder();
  set creationDate_MAX_GT(GDateTimeBuilder? creationDate_MAX_GT) =>
      _$this._creationDate_MAX_GT = creationDate_MAX_GT;

  GDateTimeBuilder? _creationDate_GTE;
  GDateTimeBuilder get creationDate_GTE =>
      _$this._creationDate_GTE ??= new GDateTimeBuilder();
  set creationDate_GTE(GDateTimeBuilder? creationDate_GTE) =>
      _$this._creationDate_GTE = creationDate_GTE;

  GDateTimeBuilder? _creationDate_MIN_GTE;
  GDateTimeBuilder get creationDate_MIN_GTE =>
      _$this._creationDate_MIN_GTE ??= new GDateTimeBuilder();
  set creationDate_MIN_GTE(GDateTimeBuilder? creationDate_MIN_GTE) =>
      _$this._creationDate_MIN_GTE = creationDate_MIN_GTE;

  GDateTimeBuilder? _creationDate_MAX_GTE;
  GDateTimeBuilder get creationDate_MAX_GTE =>
      _$this._creationDate_MAX_GTE ??= new GDateTimeBuilder();
  set creationDate_MAX_GTE(GDateTimeBuilder? creationDate_MAX_GTE) =>
      _$this._creationDate_MAX_GTE = creationDate_MAX_GTE;

  GDateTimeBuilder? _creationDate_LT;
  GDateTimeBuilder get creationDate_LT =>
      _$this._creationDate_LT ??= new GDateTimeBuilder();
  set creationDate_LT(GDateTimeBuilder? creationDate_LT) =>
      _$this._creationDate_LT = creationDate_LT;

  GDateTimeBuilder? _creationDate_MIN_LT;
  GDateTimeBuilder get creationDate_MIN_LT =>
      _$this._creationDate_MIN_LT ??= new GDateTimeBuilder();
  set creationDate_MIN_LT(GDateTimeBuilder? creationDate_MIN_LT) =>
      _$this._creationDate_MIN_LT = creationDate_MIN_LT;

  GDateTimeBuilder? _creationDate_MAX_LT;
  GDateTimeBuilder get creationDate_MAX_LT =>
      _$this._creationDate_MAX_LT ??= new GDateTimeBuilder();
  set creationDate_MAX_LT(GDateTimeBuilder? creationDate_MAX_LT) =>
      _$this._creationDate_MAX_LT = creationDate_MAX_LT;

  GDateTimeBuilder? _creationDate_LTE;
  GDateTimeBuilder get creationDate_LTE =>
      _$this._creationDate_LTE ??= new GDateTimeBuilder();
  set creationDate_LTE(GDateTimeBuilder? creationDate_LTE) =>
      _$this._creationDate_LTE = creationDate_LTE;

  GDateTimeBuilder? _creationDate_MIN_LTE;
  GDateTimeBuilder get creationDate_MIN_LTE =>
      _$this._creationDate_MIN_LTE ??= new GDateTimeBuilder();
  set creationDate_MIN_LTE(GDateTimeBuilder? creationDate_MIN_LTE) =>
      _$this._creationDate_MIN_LTE = creationDate_MIN_LTE;

  GDateTimeBuilder? _creationDate_MAX_LTE;
  GDateTimeBuilder get creationDate_MAX_LTE =>
      _$this._creationDate_MAX_LTE ??= new GDateTimeBuilder();
  set creationDate_MAX_LTE(GDateTimeBuilder? creationDate_MAX_LTE) =>
      _$this._creationDate_MAX_LTE = creationDate_MAX_LTE;

  GDateTimeBuilder? _modifiedDate_EQUAL;
  GDateTimeBuilder get modifiedDate_EQUAL =>
      _$this._modifiedDate_EQUAL ??= new GDateTimeBuilder();
  set modifiedDate_EQUAL(GDateTimeBuilder? modifiedDate_EQUAL) =>
      _$this._modifiedDate_EQUAL = modifiedDate_EQUAL;

  GDateTimeBuilder? _modifiedDate_MIN_EQUAL;
  GDateTimeBuilder get modifiedDate_MIN_EQUAL =>
      _$this._modifiedDate_MIN_EQUAL ??= new GDateTimeBuilder();
  set modifiedDate_MIN_EQUAL(GDateTimeBuilder? modifiedDate_MIN_EQUAL) =>
      _$this._modifiedDate_MIN_EQUAL = modifiedDate_MIN_EQUAL;

  GDateTimeBuilder? _modifiedDate_MAX_EQUAL;
  GDateTimeBuilder get modifiedDate_MAX_EQUAL =>
      _$this._modifiedDate_MAX_EQUAL ??= new GDateTimeBuilder();
  set modifiedDate_MAX_EQUAL(GDateTimeBuilder? modifiedDate_MAX_EQUAL) =>
      _$this._modifiedDate_MAX_EQUAL = modifiedDate_MAX_EQUAL;

  GDateTimeBuilder? _modifiedDate_GT;
  GDateTimeBuilder get modifiedDate_GT =>
      _$this._modifiedDate_GT ??= new GDateTimeBuilder();
  set modifiedDate_GT(GDateTimeBuilder? modifiedDate_GT) =>
      _$this._modifiedDate_GT = modifiedDate_GT;

  GDateTimeBuilder? _modifiedDate_MIN_GT;
  GDateTimeBuilder get modifiedDate_MIN_GT =>
      _$this._modifiedDate_MIN_GT ??= new GDateTimeBuilder();
  set modifiedDate_MIN_GT(GDateTimeBuilder? modifiedDate_MIN_GT) =>
      _$this._modifiedDate_MIN_GT = modifiedDate_MIN_GT;

  GDateTimeBuilder? _modifiedDate_MAX_GT;
  GDateTimeBuilder get modifiedDate_MAX_GT =>
      _$this._modifiedDate_MAX_GT ??= new GDateTimeBuilder();
  set modifiedDate_MAX_GT(GDateTimeBuilder? modifiedDate_MAX_GT) =>
      _$this._modifiedDate_MAX_GT = modifiedDate_MAX_GT;

  GDateTimeBuilder? _modifiedDate_GTE;
  GDateTimeBuilder get modifiedDate_GTE =>
      _$this._modifiedDate_GTE ??= new GDateTimeBuilder();
  set modifiedDate_GTE(GDateTimeBuilder? modifiedDate_GTE) =>
      _$this._modifiedDate_GTE = modifiedDate_GTE;

  GDateTimeBuilder? _modifiedDate_MIN_GTE;
  GDateTimeBuilder get modifiedDate_MIN_GTE =>
      _$this._modifiedDate_MIN_GTE ??= new GDateTimeBuilder();
  set modifiedDate_MIN_GTE(GDateTimeBuilder? modifiedDate_MIN_GTE) =>
      _$this._modifiedDate_MIN_GTE = modifiedDate_MIN_GTE;

  GDateTimeBuilder? _modifiedDate_MAX_GTE;
  GDateTimeBuilder get modifiedDate_MAX_GTE =>
      _$this._modifiedDate_MAX_GTE ??= new GDateTimeBuilder();
  set modifiedDate_MAX_GTE(GDateTimeBuilder? modifiedDate_MAX_GTE) =>
      _$this._modifiedDate_MAX_GTE = modifiedDate_MAX_GTE;

  GDateTimeBuilder? _modifiedDate_LT;
  GDateTimeBuilder get modifiedDate_LT =>
      _$this._modifiedDate_LT ??= new GDateTimeBuilder();
  set modifiedDate_LT(GDateTimeBuilder? modifiedDate_LT) =>
      _$this._modifiedDate_LT = modifiedDate_LT;

  GDateTimeBuilder? _modifiedDate_MIN_LT;
  GDateTimeBuilder get modifiedDate_MIN_LT =>
      _$this._modifiedDate_MIN_LT ??= new GDateTimeBuilder();
  set modifiedDate_MIN_LT(GDateTimeBuilder? modifiedDate_MIN_LT) =>
      _$this._modifiedDate_MIN_LT = modifiedDate_MIN_LT;

  GDateTimeBuilder? _modifiedDate_MAX_LT;
  GDateTimeBuilder get modifiedDate_MAX_LT =>
      _$this._modifiedDate_MAX_LT ??= new GDateTimeBuilder();
  set modifiedDate_MAX_LT(GDateTimeBuilder? modifiedDate_MAX_LT) =>
      _$this._modifiedDate_MAX_LT = modifiedDate_MAX_LT;

  GDateTimeBuilder? _modifiedDate_LTE;
  GDateTimeBuilder get modifiedDate_LTE =>
      _$this._modifiedDate_LTE ??= new GDateTimeBuilder();
  set modifiedDate_LTE(GDateTimeBuilder? modifiedDate_LTE) =>
      _$this._modifiedDate_LTE = modifiedDate_LTE;

  GDateTimeBuilder? _modifiedDate_MIN_LTE;
  GDateTimeBuilder get modifiedDate_MIN_LTE =>
      _$this._modifiedDate_MIN_LTE ??= new GDateTimeBuilder();
  set modifiedDate_MIN_LTE(GDateTimeBuilder? modifiedDate_MIN_LTE) =>
      _$this._modifiedDate_MIN_LTE = modifiedDate_MIN_LTE;

  GDateTimeBuilder? _modifiedDate_MAX_LTE;
  GDateTimeBuilder get modifiedDate_MAX_LTE =>
      _$this._modifiedDate_MAX_LTE ??= new GDateTimeBuilder();
  set modifiedDate_MAX_LTE(GDateTimeBuilder? modifiedDate_MAX_LTE) =>
      _$this._modifiedDate_MAX_LTE = modifiedDate_MAX_LTE;

  GUserProjectsNodeAggregationWhereInputBuilder();

  GUserProjectsNodeAggregationWhereInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _AND = $v.AND?.toBuilder();
      _OR = $v.OR?.toBuilder();
      _id_EQUAL = $v.id_EQUAL;
      _title_EQUAL = $v.title_EQUAL;
      _title_AVERAGE_EQUAL = $v.title_AVERAGE_EQUAL;
      _title_LONGEST_EQUAL = $v.title_LONGEST_EQUAL;
      _title_SHORTEST_EQUAL = $v.title_SHORTEST_EQUAL;
      _title_GT = $v.title_GT;
      _title_AVERAGE_GT = $v.title_AVERAGE_GT;
      _title_LONGEST_GT = $v.title_LONGEST_GT;
      _title_SHORTEST_GT = $v.title_SHORTEST_GT;
      _title_GTE = $v.title_GTE;
      _title_AVERAGE_GTE = $v.title_AVERAGE_GTE;
      _title_LONGEST_GTE = $v.title_LONGEST_GTE;
      _title_SHORTEST_GTE = $v.title_SHORTEST_GTE;
      _title_LT = $v.title_LT;
      _title_AVERAGE_LT = $v.title_AVERAGE_LT;
      _title_LONGEST_LT = $v.title_LONGEST_LT;
      _title_SHORTEST_LT = $v.title_SHORTEST_LT;
      _title_LTE = $v.title_LTE;
      _title_AVERAGE_LTE = $v.title_AVERAGE_LTE;
      _title_LONGEST_LTE = $v.title_LONGEST_LTE;
      _title_SHORTEST_LTE = $v.title_SHORTEST_LTE;
      _description_EQUAL = $v.description_EQUAL;
      _description_AVERAGE_EQUAL = $v.description_AVERAGE_EQUAL;
      _description_LONGEST_EQUAL = $v.description_LONGEST_EQUAL;
      _description_SHORTEST_EQUAL = $v.description_SHORTEST_EQUAL;
      _description_GT = $v.description_GT;
      _description_AVERAGE_GT = $v.description_AVERAGE_GT;
      _description_LONGEST_GT = $v.description_LONGEST_GT;
      _description_SHORTEST_GT = $v.description_SHORTEST_GT;
      _description_GTE = $v.description_GTE;
      _description_AVERAGE_GTE = $v.description_AVERAGE_GTE;
      _description_LONGEST_GTE = $v.description_LONGEST_GTE;
      _description_SHORTEST_GTE = $v.description_SHORTEST_GTE;
      _description_LT = $v.description_LT;
      _description_AVERAGE_LT = $v.description_AVERAGE_LT;
      _description_LONGEST_LT = $v.description_LONGEST_LT;
      _description_SHORTEST_LT = $v.description_SHORTEST_LT;
      _description_LTE = $v.description_LTE;
      _description_AVERAGE_LTE = $v.description_AVERAGE_LTE;
      _description_LONGEST_LTE = $v.description_LONGEST_LTE;
      _description_SHORTEST_LTE = $v.description_SHORTEST_LTE;
      _creationDate_EQUAL = $v.creationDate_EQUAL?.toBuilder();
      _creationDate_MIN_EQUAL = $v.creationDate_MIN_EQUAL?.toBuilder();
      _creationDate_MAX_EQUAL = $v.creationDate_MAX_EQUAL?.toBuilder();
      _creationDate_GT = $v.creationDate_GT?.toBuilder();
      _creationDate_MIN_GT = $v.creationDate_MIN_GT?.toBuilder();
      _creationDate_MAX_GT = $v.creationDate_MAX_GT?.toBuilder();
      _creationDate_GTE = $v.creationDate_GTE?.toBuilder();
      _creationDate_MIN_GTE = $v.creationDate_MIN_GTE?.toBuilder();
      _creationDate_MAX_GTE = $v.creationDate_MAX_GTE?.toBuilder();
      _creationDate_LT = $v.creationDate_LT?.toBuilder();
      _creationDate_MIN_LT = $v.creationDate_MIN_LT?.toBuilder();
      _creationDate_MAX_LT = $v.creationDate_MAX_LT?.toBuilder();
      _creationDate_LTE = $v.creationDate_LTE?.toBuilder();
      _creationDate_MIN_LTE = $v.creationDate_MIN_LTE?.toBuilder();
      _creationDate_MAX_LTE = $v.creationDate_MAX_LTE?.toBuilder();
      _modifiedDate_EQUAL = $v.modifiedDate_EQUAL?.toBuilder();
      _modifiedDate_MIN_EQUAL = $v.modifiedDate_MIN_EQUAL?.toBuilder();
      _modifiedDate_MAX_EQUAL = $v.modifiedDate_MAX_EQUAL?.toBuilder();
      _modifiedDate_GT = $v.modifiedDate_GT?.toBuilder();
      _modifiedDate_MIN_GT = $v.modifiedDate_MIN_GT?.toBuilder();
      _modifiedDate_MAX_GT = $v.modifiedDate_MAX_GT?.toBuilder();
      _modifiedDate_GTE = $v.modifiedDate_GTE?.toBuilder();
      _modifiedDate_MIN_GTE = $v.modifiedDate_MIN_GTE?.toBuilder();
      _modifiedDate_MAX_GTE = $v.modifiedDate_MAX_GTE?.toBuilder();
      _modifiedDate_LT = $v.modifiedDate_LT?.toBuilder();
      _modifiedDate_MIN_LT = $v.modifiedDate_MIN_LT?.toBuilder();
      _modifiedDate_MAX_LT = $v.modifiedDate_MAX_LT?.toBuilder();
      _modifiedDate_LTE = $v.modifiedDate_LTE?.toBuilder();
      _modifiedDate_MIN_LTE = $v.modifiedDate_MIN_LTE?.toBuilder();
      _modifiedDate_MAX_LTE = $v.modifiedDate_MAX_LTE?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsNodeAggregationWhereInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsNodeAggregationWhereInput;
  }

  @override
  void update(
      void Function(GUserProjectsNodeAggregationWhereInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsNodeAggregationWhereInput build() => _build();

  _$GUserProjectsNodeAggregationWhereInput _build() {
    _$GUserProjectsNodeAggregationWhereInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsNodeAggregationWhereInput._(
              AND: _AND?.build(),
              OR: _OR?.build(),
              id_EQUAL: id_EQUAL,
              title_EQUAL: title_EQUAL,
              title_AVERAGE_EQUAL: title_AVERAGE_EQUAL,
              title_LONGEST_EQUAL: title_LONGEST_EQUAL,
              title_SHORTEST_EQUAL: title_SHORTEST_EQUAL,
              title_GT: title_GT,
              title_AVERAGE_GT: title_AVERAGE_GT,
              title_LONGEST_GT: title_LONGEST_GT,
              title_SHORTEST_GT: title_SHORTEST_GT,
              title_GTE: title_GTE,
              title_AVERAGE_GTE: title_AVERAGE_GTE,
              title_LONGEST_GTE: title_LONGEST_GTE,
              title_SHORTEST_GTE: title_SHORTEST_GTE,
              title_LT: title_LT,
              title_AVERAGE_LT: title_AVERAGE_LT,
              title_LONGEST_LT: title_LONGEST_LT,
              title_SHORTEST_LT: title_SHORTEST_LT,
              title_LTE: title_LTE,
              title_AVERAGE_LTE: title_AVERAGE_LTE,
              title_LONGEST_LTE: title_LONGEST_LTE,
              title_SHORTEST_LTE: title_SHORTEST_LTE,
              description_EQUAL: description_EQUAL,
              description_AVERAGE_EQUAL: description_AVERAGE_EQUAL,
              description_LONGEST_EQUAL: description_LONGEST_EQUAL,
              description_SHORTEST_EQUAL: description_SHORTEST_EQUAL,
              description_GT: description_GT,
              description_AVERAGE_GT: description_AVERAGE_GT,
              description_LONGEST_GT: description_LONGEST_GT,
              description_SHORTEST_GT: description_SHORTEST_GT,
              description_GTE: description_GTE,
              description_AVERAGE_GTE: description_AVERAGE_GTE,
              description_LONGEST_GTE: description_LONGEST_GTE,
              description_SHORTEST_GTE: description_SHORTEST_GTE,
              description_LT: description_LT,
              description_AVERAGE_LT: description_AVERAGE_LT,
              description_LONGEST_LT: description_LONGEST_LT,
              description_SHORTEST_LT: description_SHORTEST_LT,
              description_LTE: description_LTE,
              description_AVERAGE_LTE: description_AVERAGE_LTE,
              description_LONGEST_LTE: description_LONGEST_LTE,
              description_SHORTEST_LTE: description_SHORTEST_LTE,
              creationDate_EQUAL: _creationDate_EQUAL?.build(),
              creationDate_MIN_EQUAL: _creationDate_MIN_EQUAL?.build(),
              creationDate_MAX_EQUAL: _creationDate_MAX_EQUAL?.build(),
              creationDate_GT: _creationDate_GT?.build(),
              creationDate_MIN_GT: _creationDate_MIN_GT?.build(),
              creationDate_MAX_GT: _creationDate_MAX_GT?.build(),
              creationDate_GTE: _creationDate_GTE?.build(),
              creationDate_MIN_GTE: _creationDate_MIN_GTE?.build(),
              creationDate_MAX_GTE: _creationDate_MAX_GTE?.build(),
              creationDate_LT: _creationDate_LT?.build(),
              creationDate_MIN_LT: _creationDate_MIN_LT?.build(),
              creationDate_MAX_LT: _creationDate_MAX_LT?.build(),
              creationDate_LTE: _creationDate_LTE?.build(),
              creationDate_MIN_LTE: _creationDate_MIN_LTE?.build(),
              creationDate_MAX_LTE: _creationDate_MAX_LTE?.build(),
              modifiedDate_EQUAL: _modifiedDate_EQUAL?.build(),
              modifiedDate_MIN_EQUAL: _modifiedDate_MIN_EQUAL?.build(),
              modifiedDate_MAX_EQUAL: _modifiedDate_MAX_EQUAL?.build(),
              modifiedDate_GT: _modifiedDate_GT?.build(),
              modifiedDate_MIN_GT: _modifiedDate_MIN_GT?.build(),
              modifiedDate_MAX_GT: _modifiedDate_MAX_GT?.build(),
              modifiedDate_GTE: _modifiedDate_GTE?.build(),
              modifiedDate_MIN_GTE: _modifiedDate_MIN_GTE?.build(),
              modifiedDate_MAX_GTE: _modifiedDate_MAX_GTE?.build(),
              modifiedDate_LT: _modifiedDate_LT?.build(),
              modifiedDate_MIN_LT: _modifiedDate_MIN_LT?.build(),
              modifiedDate_MAX_LT: _modifiedDate_MAX_LT?.build(),
              modifiedDate_LTE: _modifiedDate_LTE?.build(),
              modifiedDate_MIN_LTE: _modifiedDate_MIN_LTE?.build(),
              modifiedDate_MAX_LTE: _modifiedDate_MAX_LTE?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'AND';
        _AND?.build();
        _$failedField = 'OR';
        _OR?.build();

        _$failedField = 'creationDate_EQUAL';
        _creationDate_EQUAL?.build();
        _$failedField = 'creationDate_MIN_EQUAL';
        _creationDate_MIN_EQUAL?.build();
        _$failedField = 'creationDate_MAX_EQUAL';
        _creationDate_MAX_EQUAL?.build();
        _$failedField = 'creationDate_GT';
        _creationDate_GT?.build();
        _$failedField = 'creationDate_MIN_GT';
        _creationDate_MIN_GT?.build();
        _$failedField = 'creationDate_MAX_GT';
        _creationDate_MAX_GT?.build();
        _$failedField = 'creationDate_GTE';
        _creationDate_GTE?.build();
        _$failedField = 'creationDate_MIN_GTE';
        _creationDate_MIN_GTE?.build();
        _$failedField = 'creationDate_MAX_GTE';
        _creationDate_MAX_GTE?.build();
        _$failedField = 'creationDate_LT';
        _creationDate_LT?.build();
        _$failedField = 'creationDate_MIN_LT';
        _creationDate_MIN_LT?.build();
        _$failedField = 'creationDate_MAX_LT';
        _creationDate_MAX_LT?.build();
        _$failedField = 'creationDate_LTE';
        _creationDate_LTE?.build();
        _$failedField = 'creationDate_MIN_LTE';
        _creationDate_MIN_LTE?.build();
        _$failedField = 'creationDate_MAX_LTE';
        _creationDate_MAX_LTE?.build();
        _$failedField = 'modifiedDate_EQUAL';
        _modifiedDate_EQUAL?.build();
        _$failedField = 'modifiedDate_MIN_EQUAL';
        _modifiedDate_MIN_EQUAL?.build();
        _$failedField = 'modifiedDate_MAX_EQUAL';
        _modifiedDate_MAX_EQUAL?.build();
        _$failedField = 'modifiedDate_GT';
        _modifiedDate_GT?.build();
        _$failedField = 'modifiedDate_MIN_GT';
        _modifiedDate_MIN_GT?.build();
        _$failedField = 'modifiedDate_MAX_GT';
        _modifiedDate_MAX_GT?.build();
        _$failedField = 'modifiedDate_GTE';
        _modifiedDate_GTE?.build();
        _$failedField = 'modifiedDate_MIN_GTE';
        _modifiedDate_MIN_GTE?.build();
        _$failedField = 'modifiedDate_MAX_GTE';
        _modifiedDate_MAX_GTE?.build();
        _$failedField = 'modifiedDate_LT';
        _modifiedDate_LT?.build();
        _$failedField = 'modifiedDate_MIN_LT';
        _modifiedDate_MIN_LT?.build();
        _$failedField = 'modifiedDate_MAX_LT';
        _modifiedDate_MAX_LT?.build();
        _$failedField = 'modifiedDate_LTE';
        _modifiedDate_LTE?.build();
        _$failedField = 'modifiedDate_MIN_LTE';
        _modifiedDate_MIN_LTE?.build();
        _$failedField = 'modifiedDate_MAX_LTE';
        _modifiedDate_MAX_LTE?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsNodeAggregationWhereInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsUpdateConnectionInput
    extends GUserProjectsUpdateConnectionInput {
  @override
  final GProjectUpdateInput? node;

  factory _$GUserProjectsUpdateConnectionInput(
          [void Function(GUserProjectsUpdateConnectionInputBuilder)?
              updates]) =>
      (new GUserProjectsUpdateConnectionInputBuilder()..update(updates))
          ._build();

  _$GUserProjectsUpdateConnectionInput._({this.node}) : super._();

  @override
  GUserProjectsUpdateConnectionInput rebuild(
          void Function(GUserProjectsUpdateConnectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsUpdateConnectionInputBuilder toBuilder() =>
      new GUserProjectsUpdateConnectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsUpdateConnectionInput && node == other.node;
  }

  @override
  int get hashCode {
    return $jf($jc(0, node.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsUpdateConnectionInput')
          ..add('node', node))
        .toString();
  }
}

class GUserProjectsUpdateConnectionInputBuilder
    implements
        Builder<GUserProjectsUpdateConnectionInput,
            GUserProjectsUpdateConnectionInputBuilder> {
  _$GUserProjectsUpdateConnectionInput? _$v;

  GProjectUpdateInputBuilder? _node;
  GProjectUpdateInputBuilder get node =>
      _$this._node ??= new GProjectUpdateInputBuilder();
  set node(GProjectUpdateInputBuilder? node) => _$this._node = node;

  GUserProjectsUpdateConnectionInputBuilder();

  GUserProjectsUpdateConnectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _node = $v.node?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsUpdateConnectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsUpdateConnectionInput;
  }

  @override
  void update(
      void Function(GUserProjectsUpdateConnectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsUpdateConnectionInput build() => _build();

  _$GUserProjectsUpdateConnectionInput _build() {
    _$GUserProjectsUpdateConnectionInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsUpdateConnectionInput._(node: _node?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'node';
        _node?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsUpdateConnectionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserProjectsUpdateFieldInput extends GUserProjectsUpdateFieldInput {
  @override
  final GUserProjectsConnectionWhere? where;
  @override
  final GUserProjectsUpdateConnectionInput? Gupdate;
  @override
  final BuiltList<GUserProjectsConnectFieldInput>? connect;
  @override
  final BuiltList<GUserProjectsDisconnectFieldInput>? disconnect;
  @override
  final BuiltList<GUserProjectsCreateFieldInput>? create;
  @override
  final BuiltList<GUserProjectsDeleteFieldInput>? delete;
  @override
  final BuiltList<GUserProjectsConnectOrCreateFieldInput>? connectOrCreate;

  factory _$GUserProjectsUpdateFieldInput(
          [void Function(GUserProjectsUpdateFieldInputBuilder)? updates]) =>
      (new GUserProjectsUpdateFieldInputBuilder()..update(updates))._build();

  _$GUserProjectsUpdateFieldInput._(
      {this.where,
      this.Gupdate,
      this.connect,
      this.disconnect,
      this.create,
      this.delete,
      this.connectOrCreate})
      : super._();

  @override
  GUserProjectsUpdateFieldInput rebuild(
          void Function(GUserProjectsUpdateFieldInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserProjectsUpdateFieldInputBuilder toBuilder() =>
      new GUserProjectsUpdateFieldInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserProjectsUpdateFieldInput &&
        where == other.where &&
        Gupdate == other.Gupdate &&
        connect == other.connect &&
        disconnect == other.disconnect &&
        create == other.create &&
        delete == other.delete &&
        connectOrCreate == other.connectOrCreate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, where.hashCode), Gupdate.hashCode),
                        connect.hashCode),
                    disconnect.hashCode),
                create.hashCode),
            delete.hashCode),
        connectOrCreate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserProjectsUpdateFieldInput')
          ..add('where', where)
          ..add('Gupdate', Gupdate)
          ..add('connect', connect)
          ..add('disconnect', disconnect)
          ..add('create', create)
          ..add('delete', delete)
          ..add('connectOrCreate', connectOrCreate))
        .toString();
  }
}

class GUserProjectsUpdateFieldInputBuilder
    implements
        Builder<GUserProjectsUpdateFieldInput,
            GUserProjectsUpdateFieldInputBuilder> {
  _$GUserProjectsUpdateFieldInput? _$v;

  GUserProjectsConnectionWhereBuilder? _where;
  GUserProjectsConnectionWhereBuilder get where =>
      _$this._where ??= new GUserProjectsConnectionWhereBuilder();
  set where(GUserProjectsConnectionWhereBuilder? where) =>
      _$this._where = where;

  GUserProjectsUpdateConnectionInputBuilder? _Gupdate;
  GUserProjectsUpdateConnectionInputBuilder get Gupdate =>
      _$this._Gupdate ??= new GUserProjectsUpdateConnectionInputBuilder();
  set Gupdate(GUserProjectsUpdateConnectionInputBuilder? Gupdate) =>
      _$this._Gupdate = Gupdate;

  ListBuilder<GUserProjectsConnectFieldInput>? _connect;
  ListBuilder<GUserProjectsConnectFieldInput> get connect =>
      _$this._connect ??= new ListBuilder<GUserProjectsConnectFieldInput>();
  set connect(ListBuilder<GUserProjectsConnectFieldInput>? connect) =>
      _$this._connect = connect;

  ListBuilder<GUserProjectsDisconnectFieldInput>? _disconnect;
  ListBuilder<GUserProjectsDisconnectFieldInput> get disconnect =>
      _$this._disconnect ??=
          new ListBuilder<GUserProjectsDisconnectFieldInput>();
  set disconnect(ListBuilder<GUserProjectsDisconnectFieldInput>? disconnect) =>
      _$this._disconnect = disconnect;

  ListBuilder<GUserProjectsCreateFieldInput>? _create;
  ListBuilder<GUserProjectsCreateFieldInput> get create =>
      _$this._create ??= new ListBuilder<GUserProjectsCreateFieldInput>();
  set create(ListBuilder<GUserProjectsCreateFieldInput>? create) =>
      _$this._create = create;

  ListBuilder<GUserProjectsDeleteFieldInput>? _delete;
  ListBuilder<GUserProjectsDeleteFieldInput> get delete =>
      _$this._delete ??= new ListBuilder<GUserProjectsDeleteFieldInput>();
  set delete(ListBuilder<GUserProjectsDeleteFieldInput>? delete) =>
      _$this._delete = delete;

  ListBuilder<GUserProjectsConnectOrCreateFieldInput>? _connectOrCreate;
  ListBuilder<GUserProjectsConnectOrCreateFieldInput> get connectOrCreate =>
      _$this._connectOrCreate ??=
          new ListBuilder<GUserProjectsConnectOrCreateFieldInput>();
  set connectOrCreate(
          ListBuilder<GUserProjectsConnectOrCreateFieldInput>?
              connectOrCreate) =>
      _$this._connectOrCreate = connectOrCreate;

  GUserProjectsUpdateFieldInputBuilder();

  GUserProjectsUpdateFieldInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _where = $v.where?.toBuilder();
      _Gupdate = $v.Gupdate?.toBuilder();
      _connect = $v.connect?.toBuilder();
      _disconnect = $v.disconnect?.toBuilder();
      _create = $v.create?.toBuilder();
      _delete = $v.delete?.toBuilder();
      _connectOrCreate = $v.connectOrCreate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserProjectsUpdateFieldInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserProjectsUpdateFieldInput;
  }

  @override
  void update(void Function(GUserProjectsUpdateFieldInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserProjectsUpdateFieldInput build() => _build();

  _$GUserProjectsUpdateFieldInput _build() {
    _$GUserProjectsUpdateFieldInput _$result;
    try {
      _$result = _$v ??
          new _$GUserProjectsUpdateFieldInput._(
              where: _where?.build(),
              Gupdate: _Gupdate?.build(),
              connect: _connect?.build(),
              disconnect: _disconnect?.build(),
              create: _create?.build(),
              delete: _delete?.build(),
              connectOrCreate: _connectOrCreate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'where';
        _where?.build();
        _$failedField = 'Gupdate';
        _Gupdate?.build();
        _$failedField = 'connect';
        _connect?.build();
        _$failedField = 'disconnect';
        _disconnect?.build();
        _$failedField = 'create';
        _create?.build();
        _$failedField = 'delete';
        _delete?.build();
        _$failedField = 'connectOrCreate';
        _connectOrCreate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserProjectsUpdateFieldInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserRelationInput extends GUserRelationInput {
  @override
  final BuiltList<GUserProjectsCreateFieldInput>? projects;

  factory _$GUserRelationInput(
          [void Function(GUserRelationInputBuilder)? updates]) =>
      (new GUserRelationInputBuilder()..update(updates))._build();

  _$GUserRelationInput._({this.projects}) : super._();

  @override
  GUserRelationInput rebuild(
          void Function(GUserRelationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserRelationInputBuilder toBuilder() =>
      new GUserRelationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserRelationInput && projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc(0, projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserRelationInput')
          ..add('projects', projects))
        .toString();
  }
}

class GUserRelationInputBuilder
    implements Builder<GUserRelationInput, GUserRelationInputBuilder> {
  _$GUserRelationInput? _$v;

  ListBuilder<GUserProjectsCreateFieldInput>? _projects;
  ListBuilder<GUserProjectsCreateFieldInput> get projects =>
      _$this._projects ??= new ListBuilder<GUserProjectsCreateFieldInput>();
  set projects(ListBuilder<GUserProjectsCreateFieldInput>? projects) =>
      _$this._projects = projects;

  GUserRelationInputBuilder();

  GUserRelationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserRelationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserRelationInput;
  }

  @override
  void update(void Function(GUserRelationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserRelationInput build() => _build();

  _$GUserRelationInput _build() {
    _$GUserRelationInput _$result;
    try {
      _$result =
          _$v ?? new _$GUserRelationInput._(projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserRelationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserSort extends GUserSort {
  @override
  final GSortDirection? id;
  @override
  final GSortDirection? username;
  @override
  final GSortDirection? displayName;

  factory _$GUserSort([void Function(GUserSortBuilder)? updates]) =>
      (new GUserSortBuilder()..update(updates))._build();

  _$GUserSort._({this.id, this.username, this.displayName}) : super._();

  @override
  GUserSort rebuild(void Function(GUserSortBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserSortBuilder toBuilder() => new GUserSortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserSort &&
        id == other.id &&
        username == other.username &&
        displayName == other.displayName;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, id.hashCode), username.hashCode), displayName.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserSort')
          ..add('id', id)
          ..add('username', username)
          ..add('displayName', displayName))
        .toString();
  }
}

class GUserSortBuilder implements Builder<GUserSort, GUserSortBuilder> {
  _$GUserSort? _$v;

  GSortDirection? _id;
  GSortDirection? get id => _$this._id;
  set id(GSortDirection? id) => _$this._id = id;

  GSortDirection? _username;
  GSortDirection? get username => _$this._username;
  set username(GSortDirection? username) => _$this._username = username;

  GSortDirection? _displayName;
  GSortDirection? get displayName => _$this._displayName;
  set displayName(GSortDirection? displayName) =>
      _$this._displayName = displayName;

  GUserSortBuilder();

  GUserSortBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _username = $v.username;
      _displayName = $v.displayName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserSort other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserSort;
  }

  @override
  void update(void Function(GUserSortBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserSort build() => _build();

  _$GUserSort _build() {
    final _$result = _$v ??
        new _$GUserSort._(id: id, username: username, displayName: displayName);
    replace(_$result);
    return _$result;
  }
}

class _$GUserUniqueWhere extends GUserUniqueWhere {
  @override
  final String? id;
  @override
  final String? username;

  factory _$GUserUniqueWhere(
          [void Function(GUserUniqueWhereBuilder)? updates]) =>
      (new GUserUniqueWhereBuilder()..update(updates))._build();

  _$GUserUniqueWhere._({this.id, this.username}) : super._();

  @override
  GUserUniqueWhere rebuild(void Function(GUserUniqueWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserUniqueWhereBuilder toBuilder() =>
      new GUserUniqueWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserUniqueWhere &&
        id == other.id &&
        username == other.username;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), username.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserUniqueWhere')
          ..add('id', id)
          ..add('username', username))
        .toString();
  }
}

class GUserUniqueWhereBuilder
    implements Builder<GUserUniqueWhere, GUserUniqueWhereBuilder> {
  _$GUserUniqueWhere? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  GUserUniqueWhereBuilder();

  GUserUniqueWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _username = $v.username;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserUniqueWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserUniqueWhere;
  }

  @override
  void update(void Function(GUserUniqueWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserUniqueWhere build() => _build();

  _$GUserUniqueWhere _build() {
    final _$result =
        _$v ?? new _$GUserUniqueWhere._(id: id, username: username);
    replace(_$result);
    return _$result;
  }
}

class _$GUserUpdateInput extends GUserUpdateInput {
  @override
  final String? username;
  @override
  final String? displayName;
  @override
  final BuiltList<GUserProjectsUpdateFieldInput>? projects;

  factory _$GUserUpdateInput(
          [void Function(GUserUpdateInputBuilder)? updates]) =>
      (new GUserUpdateInputBuilder()..update(updates))._build();

  _$GUserUpdateInput._({this.username, this.displayName, this.projects})
      : super._();

  @override
  GUserUpdateInput rebuild(void Function(GUserUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserUpdateInputBuilder toBuilder() =>
      new GUserUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserUpdateInput &&
        username == other.username &&
        displayName == other.displayName &&
        projects == other.projects;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, username.hashCode), displayName.hashCode),
        projects.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserUpdateInput')
          ..add('username', username)
          ..add('displayName', displayName)
          ..add('projects', projects))
        .toString();
  }
}

class GUserUpdateInputBuilder
    implements Builder<GUserUpdateInput, GUserUpdateInputBuilder> {
  _$GUserUpdateInput? _$v;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  ListBuilder<GUserProjectsUpdateFieldInput>? _projects;
  ListBuilder<GUserProjectsUpdateFieldInput> get projects =>
      _$this._projects ??= new ListBuilder<GUserProjectsUpdateFieldInput>();
  set projects(ListBuilder<GUserProjectsUpdateFieldInput>? projects) =>
      _$this._projects = projects;

  GUserUpdateInputBuilder();

  GUserUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _username = $v.username;
      _displayName = $v.displayName;
      _projects = $v.projects?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserUpdateInput;
  }

  @override
  void update(void Function(GUserUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserUpdateInput build() => _build();

  _$GUserUpdateInput _build() {
    _$GUserUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GUserUpdateInput._(
              username: username,
              displayName: displayName,
              projects: _projects?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'projects';
        _projects?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserWhere extends GUserWhere {
  @override
  final BuiltList<GUserWhere>? OR;
  @override
  final BuiltList<GUserWhere>? AND;
  @override
  final String? id;
  @override
  final String? id_NOT;
  @override
  final BuiltList<String>? id_IN;
  @override
  final BuiltList<String>? id_NOT_IN;
  @override
  final String? id_CONTAINS;
  @override
  final String? id_NOT_CONTAINS;
  @override
  final String? id_STARTS_WITH;
  @override
  final String? id_NOT_STARTS_WITH;
  @override
  final String? id_ENDS_WITH;
  @override
  final String? id_NOT_ENDS_WITH;
  @override
  final String? username;
  @override
  final String? username_NOT;
  @override
  final BuiltList<String>? username_IN;
  @override
  final BuiltList<String>? username_NOT_IN;
  @override
  final String? username_CONTAINS;
  @override
  final String? username_NOT_CONTAINS;
  @override
  final String? username_STARTS_WITH;
  @override
  final String? username_NOT_STARTS_WITH;
  @override
  final String? username_ENDS_WITH;
  @override
  final String? username_NOT_ENDS_WITH;
  @override
  final String? displayName;
  @override
  final String? displayName_NOT;
  @override
  final BuiltList<String>? displayName_IN;
  @override
  final BuiltList<String>? displayName_NOT_IN;
  @override
  final String? displayName_CONTAINS;
  @override
  final String? displayName_NOT_CONTAINS;
  @override
  final String? displayName_STARTS_WITH;
  @override
  final String? displayName_NOT_STARTS_WITH;
  @override
  final String? displayName_ENDS_WITH;
  @override
  final String? displayName_NOT_ENDS_WITH;
  @override
  final GUserProjectsAggregateInput? projectsAggregate;
  @override
  final GProjectWhere? projects_ALL;
  @override
  final GProjectWhere? projects_NONE;
  @override
  final GProjectWhere? projects_SINGLE;
  @override
  final GProjectWhere? projects_SOME;
  @override
  final GUserProjectsConnectionWhere? projectsConnection_ALL;
  @override
  final GUserProjectsConnectionWhere? projectsConnection_NONE;
  @override
  final GUserProjectsConnectionWhere? projectsConnection_SINGLE;
  @override
  final GUserProjectsConnectionWhere? projectsConnection_SOME;

  factory _$GUserWhere([void Function(GUserWhereBuilder)? updates]) =>
      (new GUserWhereBuilder()..update(updates))._build();

  _$GUserWhere._(
      {this.OR,
      this.AND,
      this.id,
      this.id_NOT,
      this.id_IN,
      this.id_NOT_IN,
      this.id_CONTAINS,
      this.id_NOT_CONTAINS,
      this.id_STARTS_WITH,
      this.id_NOT_STARTS_WITH,
      this.id_ENDS_WITH,
      this.id_NOT_ENDS_WITH,
      this.username,
      this.username_NOT,
      this.username_IN,
      this.username_NOT_IN,
      this.username_CONTAINS,
      this.username_NOT_CONTAINS,
      this.username_STARTS_WITH,
      this.username_NOT_STARTS_WITH,
      this.username_ENDS_WITH,
      this.username_NOT_ENDS_WITH,
      this.displayName,
      this.displayName_NOT,
      this.displayName_IN,
      this.displayName_NOT_IN,
      this.displayName_CONTAINS,
      this.displayName_NOT_CONTAINS,
      this.displayName_STARTS_WITH,
      this.displayName_NOT_STARTS_WITH,
      this.displayName_ENDS_WITH,
      this.displayName_NOT_ENDS_WITH,
      this.projectsAggregate,
      this.projects_ALL,
      this.projects_NONE,
      this.projects_SINGLE,
      this.projects_SOME,
      this.projectsConnection_ALL,
      this.projectsConnection_NONE,
      this.projectsConnection_SINGLE,
      this.projectsConnection_SOME})
      : super._();

  @override
  GUserWhere rebuild(void Function(GUserWhereBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserWhereBuilder toBuilder() => new GUserWhereBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserWhere &&
        OR == other.OR &&
        AND == other.AND &&
        id == other.id &&
        id_NOT == other.id_NOT &&
        id_IN == other.id_IN &&
        id_NOT_IN == other.id_NOT_IN &&
        id_CONTAINS == other.id_CONTAINS &&
        id_NOT_CONTAINS == other.id_NOT_CONTAINS &&
        id_STARTS_WITH == other.id_STARTS_WITH &&
        id_NOT_STARTS_WITH == other.id_NOT_STARTS_WITH &&
        id_ENDS_WITH == other.id_ENDS_WITH &&
        id_NOT_ENDS_WITH == other.id_NOT_ENDS_WITH &&
        username == other.username &&
        username_NOT == other.username_NOT &&
        username_IN == other.username_IN &&
        username_NOT_IN == other.username_NOT_IN &&
        username_CONTAINS == other.username_CONTAINS &&
        username_NOT_CONTAINS == other.username_NOT_CONTAINS &&
        username_STARTS_WITH == other.username_STARTS_WITH &&
        username_NOT_STARTS_WITH == other.username_NOT_STARTS_WITH &&
        username_ENDS_WITH == other.username_ENDS_WITH &&
        username_NOT_ENDS_WITH == other.username_NOT_ENDS_WITH &&
        displayName == other.displayName &&
        displayName_NOT == other.displayName_NOT &&
        displayName_IN == other.displayName_IN &&
        displayName_NOT_IN == other.displayName_NOT_IN &&
        displayName_CONTAINS == other.displayName_CONTAINS &&
        displayName_NOT_CONTAINS == other.displayName_NOT_CONTAINS &&
        displayName_STARTS_WITH == other.displayName_STARTS_WITH &&
        displayName_NOT_STARTS_WITH == other.displayName_NOT_STARTS_WITH &&
        displayName_ENDS_WITH == other.displayName_ENDS_WITH &&
        displayName_NOT_ENDS_WITH == other.displayName_NOT_ENDS_WITH &&
        projectsAggregate == other.projectsAggregate &&
        projects_ALL == other.projects_ALL &&
        projects_NONE == other.projects_NONE &&
        projects_SINGLE == other.projects_SINGLE &&
        projects_SOME == other.projects_SOME &&
        projectsConnection_ALL == other.projectsConnection_ALL &&
        projectsConnection_NONE == other.projectsConnection_NONE &&
        projectsConnection_SINGLE == other.projectsConnection_SINGLE &&
        projectsConnection_SOME == other.projectsConnection_SOME;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, OR.hashCode), AND.hashCode), id.hashCode), id_NOT.hashCode), id_IN.hashCode), id_NOT_IN.hashCode), id_CONTAINS.hashCode), id_NOT_CONTAINS.hashCode), id_STARTS_WITH.hashCode), id_NOT_STARTS_WITH.hashCode), id_ENDS_WITH.hashCode), id_NOT_ENDS_WITH.hashCode), username.hashCode), username_NOT.hashCode), username_IN.hashCode), username_NOT_IN.hashCode), username_CONTAINS.hashCode), username_NOT_CONTAINS.hashCode), username_STARTS_WITH.hashCode), username_NOT_STARTS_WITH.hashCode), username_ENDS_WITH.hashCode), username_NOT_ENDS_WITH.hashCode),
                                                                                displayName.hashCode),
                                                                            displayName_NOT.hashCode),
                                                                        displayName_IN.hashCode),
                                                                    displayName_NOT_IN.hashCode),
                                                                displayName_CONTAINS.hashCode),
                                                            displayName_NOT_CONTAINS.hashCode),
                                                        displayName_STARTS_WITH.hashCode),
                                                    displayName_NOT_STARTS_WITH.hashCode),
                                                displayName_ENDS_WITH.hashCode),
                                            displayName_NOT_ENDS_WITH.hashCode),
                                        projectsAggregate.hashCode),
                                    projects_ALL.hashCode),
                                projects_NONE.hashCode),
                            projects_SINGLE.hashCode),
                        projects_SOME.hashCode),
                    projectsConnection_ALL.hashCode),
                projectsConnection_NONE.hashCode),
            projectsConnection_SINGLE.hashCode),
        projectsConnection_SOME.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserWhere')
          ..add('OR', OR)
          ..add('AND', AND)
          ..add('id', id)
          ..add('id_NOT', id_NOT)
          ..add('id_IN', id_IN)
          ..add('id_NOT_IN', id_NOT_IN)
          ..add('id_CONTAINS', id_CONTAINS)
          ..add('id_NOT_CONTAINS', id_NOT_CONTAINS)
          ..add('id_STARTS_WITH', id_STARTS_WITH)
          ..add('id_NOT_STARTS_WITH', id_NOT_STARTS_WITH)
          ..add('id_ENDS_WITH', id_ENDS_WITH)
          ..add('id_NOT_ENDS_WITH', id_NOT_ENDS_WITH)
          ..add('username', username)
          ..add('username_NOT', username_NOT)
          ..add('username_IN', username_IN)
          ..add('username_NOT_IN', username_NOT_IN)
          ..add('username_CONTAINS', username_CONTAINS)
          ..add('username_NOT_CONTAINS', username_NOT_CONTAINS)
          ..add('username_STARTS_WITH', username_STARTS_WITH)
          ..add('username_NOT_STARTS_WITH', username_NOT_STARTS_WITH)
          ..add('username_ENDS_WITH', username_ENDS_WITH)
          ..add('username_NOT_ENDS_WITH', username_NOT_ENDS_WITH)
          ..add('displayName', displayName)
          ..add('displayName_NOT', displayName_NOT)
          ..add('displayName_IN', displayName_IN)
          ..add('displayName_NOT_IN', displayName_NOT_IN)
          ..add('displayName_CONTAINS', displayName_CONTAINS)
          ..add('displayName_NOT_CONTAINS', displayName_NOT_CONTAINS)
          ..add('displayName_STARTS_WITH', displayName_STARTS_WITH)
          ..add('displayName_NOT_STARTS_WITH', displayName_NOT_STARTS_WITH)
          ..add('displayName_ENDS_WITH', displayName_ENDS_WITH)
          ..add('displayName_NOT_ENDS_WITH', displayName_NOT_ENDS_WITH)
          ..add('projectsAggregate', projectsAggregate)
          ..add('projects_ALL', projects_ALL)
          ..add('projects_NONE', projects_NONE)
          ..add('projects_SINGLE', projects_SINGLE)
          ..add('projects_SOME', projects_SOME)
          ..add('projectsConnection_ALL', projectsConnection_ALL)
          ..add('projectsConnection_NONE', projectsConnection_NONE)
          ..add('projectsConnection_SINGLE', projectsConnection_SINGLE)
          ..add('projectsConnection_SOME', projectsConnection_SOME))
        .toString();
  }
}

class GUserWhereBuilder implements Builder<GUserWhere, GUserWhereBuilder> {
  _$GUserWhere? _$v;

  ListBuilder<GUserWhere>? _OR;
  ListBuilder<GUserWhere> get OR =>
      _$this._OR ??= new ListBuilder<GUserWhere>();
  set OR(ListBuilder<GUserWhere>? OR) => _$this._OR = OR;

  ListBuilder<GUserWhere>? _AND;
  ListBuilder<GUserWhere> get AND =>
      _$this._AND ??= new ListBuilder<GUserWhere>();
  set AND(ListBuilder<GUserWhere>? AND) => _$this._AND = AND;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _id_NOT;
  String? get id_NOT => _$this._id_NOT;
  set id_NOT(String? id_NOT) => _$this._id_NOT = id_NOT;

  ListBuilder<String>? _id_IN;
  ListBuilder<String> get id_IN => _$this._id_IN ??= new ListBuilder<String>();
  set id_IN(ListBuilder<String>? id_IN) => _$this._id_IN = id_IN;

  ListBuilder<String>? _id_NOT_IN;
  ListBuilder<String> get id_NOT_IN =>
      _$this._id_NOT_IN ??= new ListBuilder<String>();
  set id_NOT_IN(ListBuilder<String>? id_NOT_IN) =>
      _$this._id_NOT_IN = id_NOT_IN;

  String? _id_CONTAINS;
  String? get id_CONTAINS => _$this._id_CONTAINS;
  set id_CONTAINS(String? id_CONTAINS) => _$this._id_CONTAINS = id_CONTAINS;

  String? _id_NOT_CONTAINS;
  String? get id_NOT_CONTAINS => _$this._id_NOT_CONTAINS;
  set id_NOT_CONTAINS(String? id_NOT_CONTAINS) =>
      _$this._id_NOT_CONTAINS = id_NOT_CONTAINS;

  String? _id_STARTS_WITH;
  String? get id_STARTS_WITH => _$this._id_STARTS_WITH;
  set id_STARTS_WITH(String? id_STARTS_WITH) =>
      _$this._id_STARTS_WITH = id_STARTS_WITH;

  String? _id_NOT_STARTS_WITH;
  String? get id_NOT_STARTS_WITH => _$this._id_NOT_STARTS_WITH;
  set id_NOT_STARTS_WITH(String? id_NOT_STARTS_WITH) =>
      _$this._id_NOT_STARTS_WITH = id_NOT_STARTS_WITH;

  String? _id_ENDS_WITH;
  String? get id_ENDS_WITH => _$this._id_ENDS_WITH;
  set id_ENDS_WITH(String? id_ENDS_WITH) => _$this._id_ENDS_WITH = id_ENDS_WITH;

  String? _id_NOT_ENDS_WITH;
  String? get id_NOT_ENDS_WITH => _$this._id_NOT_ENDS_WITH;
  set id_NOT_ENDS_WITH(String? id_NOT_ENDS_WITH) =>
      _$this._id_NOT_ENDS_WITH = id_NOT_ENDS_WITH;

  String? _username;
  String? get username => _$this._username;
  set username(String? username) => _$this._username = username;

  String? _username_NOT;
  String? get username_NOT => _$this._username_NOT;
  set username_NOT(String? username_NOT) => _$this._username_NOT = username_NOT;

  ListBuilder<String>? _username_IN;
  ListBuilder<String> get username_IN =>
      _$this._username_IN ??= new ListBuilder<String>();
  set username_IN(ListBuilder<String>? username_IN) =>
      _$this._username_IN = username_IN;

  ListBuilder<String>? _username_NOT_IN;
  ListBuilder<String> get username_NOT_IN =>
      _$this._username_NOT_IN ??= new ListBuilder<String>();
  set username_NOT_IN(ListBuilder<String>? username_NOT_IN) =>
      _$this._username_NOT_IN = username_NOT_IN;

  String? _username_CONTAINS;
  String? get username_CONTAINS => _$this._username_CONTAINS;
  set username_CONTAINS(String? username_CONTAINS) =>
      _$this._username_CONTAINS = username_CONTAINS;

  String? _username_NOT_CONTAINS;
  String? get username_NOT_CONTAINS => _$this._username_NOT_CONTAINS;
  set username_NOT_CONTAINS(String? username_NOT_CONTAINS) =>
      _$this._username_NOT_CONTAINS = username_NOT_CONTAINS;

  String? _username_STARTS_WITH;
  String? get username_STARTS_WITH => _$this._username_STARTS_WITH;
  set username_STARTS_WITH(String? username_STARTS_WITH) =>
      _$this._username_STARTS_WITH = username_STARTS_WITH;

  String? _username_NOT_STARTS_WITH;
  String? get username_NOT_STARTS_WITH => _$this._username_NOT_STARTS_WITH;
  set username_NOT_STARTS_WITH(String? username_NOT_STARTS_WITH) =>
      _$this._username_NOT_STARTS_WITH = username_NOT_STARTS_WITH;

  String? _username_ENDS_WITH;
  String? get username_ENDS_WITH => _$this._username_ENDS_WITH;
  set username_ENDS_WITH(String? username_ENDS_WITH) =>
      _$this._username_ENDS_WITH = username_ENDS_WITH;

  String? _username_NOT_ENDS_WITH;
  String? get username_NOT_ENDS_WITH => _$this._username_NOT_ENDS_WITH;
  set username_NOT_ENDS_WITH(String? username_NOT_ENDS_WITH) =>
      _$this._username_NOT_ENDS_WITH = username_NOT_ENDS_WITH;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  String? _displayName_NOT;
  String? get displayName_NOT => _$this._displayName_NOT;
  set displayName_NOT(String? displayName_NOT) =>
      _$this._displayName_NOT = displayName_NOT;

  ListBuilder<String>? _displayName_IN;
  ListBuilder<String> get displayName_IN =>
      _$this._displayName_IN ??= new ListBuilder<String>();
  set displayName_IN(ListBuilder<String>? displayName_IN) =>
      _$this._displayName_IN = displayName_IN;

  ListBuilder<String>? _displayName_NOT_IN;
  ListBuilder<String> get displayName_NOT_IN =>
      _$this._displayName_NOT_IN ??= new ListBuilder<String>();
  set displayName_NOT_IN(ListBuilder<String>? displayName_NOT_IN) =>
      _$this._displayName_NOT_IN = displayName_NOT_IN;

  String? _displayName_CONTAINS;
  String? get displayName_CONTAINS => _$this._displayName_CONTAINS;
  set displayName_CONTAINS(String? displayName_CONTAINS) =>
      _$this._displayName_CONTAINS = displayName_CONTAINS;

  String? _displayName_NOT_CONTAINS;
  String? get displayName_NOT_CONTAINS => _$this._displayName_NOT_CONTAINS;
  set displayName_NOT_CONTAINS(String? displayName_NOT_CONTAINS) =>
      _$this._displayName_NOT_CONTAINS = displayName_NOT_CONTAINS;

  String? _displayName_STARTS_WITH;
  String? get displayName_STARTS_WITH => _$this._displayName_STARTS_WITH;
  set displayName_STARTS_WITH(String? displayName_STARTS_WITH) =>
      _$this._displayName_STARTS_WITH = displayName_STARTS_WITH;

  String? _displayName_NOT_STARTS_WITH;
  String? get displayName_NOT_STARTS_WITH =>
      _$this._displayName_NOT_STARTS_WITH;
  set displayName_NOT_STARTS_WITH(String? displayName_NOT_STARTS_WITH) =>
      _$this._displayName_NOT_STARTS_WITH = displayName_NOT_STARTS_WITH;

  String? _displayName_ENDS_WITH;
  String? get displayName_ENDS_WITH => _$this._displayName_ENDS_WITH;
  set displayName_ENDS_WITH(String? displayName_ENDS_WITH) =>
      _$this._displayName_ENDS_WITH = displayName_ENDS_WITH;

  String? _displayName_NOT_ENDS_WITH;
  String? get displayName_NOT_ENDS_WITH => _$this._displayName_NOT_ENDS_WITH;
  set displayName_NOT_ENDS_WITH(String? displayName_NOT_ENDS_WITH) =>
      _$this._displayName_NOT_ENDS_WITH = displayName_NOT_ENDS_WITH;

  GUserProjectsAggregateInputBuilder? _projectsAggregate;
  GUserProjectsAggregateInputBuilder get projectsAggregate =>
      _$this._projectsAggregate ??= new GUserProjectsAggregateInputBuilder();
  set projectsAggregate(
          GUserProjectsAggregateInputBuilder? projectsAggregate) =>
      _$this._projectsAggregate = projectsAggregate;

  GProjectWhereBuilder? _projects_ALL;
  GProjectWhereBuilder get projects_ALL =>
      _$this._projects_ALL ??= new GProjectWhereBuilder();
  set projects_ALL(GProjectWhereBuilder? projects_ALL) =>
      _$this._projects_ALL = projects_ALL;

  GProjectWhereBuilder? _projects_NONE;
  GProjectWhereBuilder get projects_NONE =>
      _$this._projects_NONE ??= new GProjectWhereBuilder();
  set projects_NONE(GProjectWhereBuilder? projects_NONE) =>
      _$this._projects_NONE = projects_NONE;

  GProjectWhereBuilder? _projects_SINGLE;
  GProjectWhereBuilder get projects_SINGLE =>
      _$this._projects_SINGLE ??= new GProjectWhereBuilder();
  set projects_SINGLE(GProjectWhereBuilder? projects_SINGLE) =>
      _$this._projects_SINGLE = projects_SINGLE;

  GProjectWhereBuilder? _projects_SOME;
  GProjectWhereBuilder get projects_SOME =>
      _$this._projects_SOME ??= new GProjectWhereBuilder();
  set projects_SOME(GProjectWhereBuilder? projects_SOME) =>
      _$this._projects_SOME = projects_SOME;

  GUserProjectsConnectionWhereBuilder? _projectsConnection_ALL;
  GUserProjectsConnectionWhereBuilder get projectsConnection_ALL =>
      _$this._projectsConnection_ALL ??=
          new GUserProjectsConnectionWhereBuilder();
  set projectsConnection_ALL(
          GUserProjectsConnectionWhereBuilder? projectsConnection_ALL) =>
      _$this._projectsConnection_ALL = projectsConnection_ALL;

  GUserProjectsConnectionWhereBuilder? _projectsConnection_NONE;
  GUserProjectsConnectionWhereBuilder get projectsConnection_NONE =>
      _$this._projectsConnection_NONE ??=
          new GUserProjectsConnectionWhereBuilder();
  set projectsConnection_NONE(
          GUserProjectsConnectionWhereBuilder? projectsConnection_NONE) =>
      _$this._projectsConnection_NONE = projectsConnection_NONE;

  GUserProjectsConnectionWhereBuilder? _projectsConnection_SINGLE;
  GUserProjectsConnectionWhereBuilder get projectsConnection_SINGLE =>
      _$this._projectsConnection_SINGLE ??=
          new GUserProjectsConnectionWhereBuilder();
  set projectsConnection_SINGLE(
          GUserProjectsConnectionWhereBuilder? projectsConnection_SINGLE) =>
      _$this._projectsConnection_SINGLE = projectsConnection_SINGLE;

  GUserProjectsConnectionWhereBuilder? _projectsConnection_SOME;
  GUserProjectsConnectionWhereBuilder get projectsConnection_SOME =>
      _$this._projectsConnection_SOME ??=
          new GUserProjectsConnectionWhereBuilder();
  set projectsConnection_SOME(
          GUserProjectsConnectionWhereBuilder? projectsConnection_SOME) =>
      _$this._projectsConnection_SOME = projectsConnection_SOME;

  GUserWhereBuilder();

  GUserWhereBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _OR = $v.OR?.toBuilder();
      _AND = $v.AND?.toBuilder();
      _id = $v.id;
      _id_NOT = $v.id_NOT;
      _id_IN = $v.id_IN?.toBuilder();
      _id_NOT_IN = $v.id_NOT_IN?.toBuilder();
      _id_CONTAINS = $v.id_CONTAINS;
      _id_NOT_CONTAINS = $v.id_NOT_CONTAINS;
      _id_STARTS_WITH = $v.id_STARTS_WITH;
      _id_NOT_STARTS_WITH = $v.id_NOT_STARTS_WITH;
      _id_ENDS_WITH = $v.id_ENDS_WITH;
      _id_NOT_ENDS_WITH = $v.id_NOT_ENDS_WITH;
      _username = $v.username;
      _username_NOT = $v.username_NOT;
      _username_IN = $v.username_IN?.toBuilder();
      _username_NOT_IN = $v.username_NOT_IN?.toBuilder();
      _username_CONTAINS = $v.username_CONTAINS;
      _username_NOT_CONTAINS = $v.username_NOT_CONTAINS;
      _username_STARTS_WITH = $v.username_STARTS_WITH;
      _username_NOT_STARTS_WITH = $v.username_NOT_STARTS_WITH;
      _username_ENDS_WITH = $v.username_ENDS_WITH;
      _username_NOT_ENDS_WITH = $v.username_NOT_ENDS_WITH;
      _displayName = $v.displayName;
      _displayName_NOT = $v.displayName_NOT;
      _displayName_IN = $v.displayName_IN?.toBuilder();
      _displayName_NOT_IN = $v.displayName_NOT_IN?.toBuilder();
      _displayName_CONTAINS = $v.displayName_CONTAINS;
      _displayName_NOT_CONTAINS = $v.displayName_NOT_CONTAINS;
      _displayName_STARTS_WITH = $v.displayName_STARTS_WITH;
      _displayName_NOT_STARTS_WITH = $v.displayName_NOT_STARTS_WITH;
      _displayName_ENDS_WITH = $v.displayName_ENDS_WITH;
      _displayName_NOT_ENDS_WITH = $v.displayName_NOT_ENDS_WITH;
      _projectsAggregate = $v.projectsAggregate?.toBuilder();
      _projects_ALL = $v.projects_ALL?.toBuilder();
      _projects_NONE = $v.projects_NONE?.toBuilder();
      _projects_SINGLE = $v.projects_SINGLE?.toBuilder();
      _projects_SOME = $v.projects_SOME?.toBuilder();
      _projectsConnection_ALL = $v.projectsConnection_ALL?.toBuilder();
      _projectsConnection_NONE = $v.projectsConnection_NONE?.toBuilder();
      _projectsConnection_SINGLE = $v.projectsConnection_SINGLE?.toBuilder();
      _projectsConnection_SOME = $v.projectsConnection_SOME?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserWhere other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserWhere;
  }

  @override
  void update(void Function(GUserWhereBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserWhere build() => _build();

  _$GUserWhere _build() {
    _$GUserWhere _$result;
    try {
      _$result = _$v ??
          new _$GUserWhere._(
              OR: _OR?.build(),
              AND: _AND?.build(),
              id: id,
              id_NOT: id_NOT,
              id_IN: _id_IN?.build(),
              id_NOT_IN: _id_NOT_IN?.build(),
              id_CONTAINS: id_CONTAINS,
              id_NOT_CONTAINS: id_NOT_CONTAINS,
              id_STARTS_WITH: id_STARTS_WITH,
              id_NOT_STARTS_WITH: id_NOT_STARTS_WITH,
              id_ENDS_WITH: id_ENDS_WITH,
              id_NOT_ENDS_WITH: id_NOT_ENDS_WITH,
              username: username,
              username_NOT: username_NOT,
              username_IN: _username_IN?.build(),
              username_NOT_IN: _username_NOT_IN?.build(),
              username_CONTAINS: username_CONTAINS,
              username_NOT_CONTAINS: username_NOT_CONTAINS,
              username_STARTS_WITH: username_STARTS_WITH,
              username_NOT_STARTS_WITH: username_NOT_STARTS_WITH,
              username_ENDS_WITH: username_ENDS_WITH,
              username_NOT_ENDS_WITH: username_NOT_ENDS_WITH,
              displayName: displayName,
              displayName_NOT: displayName_NOT,
              displayName_IN: _displayName_IN?.build(),
              displayName_NOT_IN: _displayName_NOT_IN?.build(),
              displayName_CONTAINS: displayName_CONTAINS,
              displayName_NOT_CONTAINS: displayName_NOT_CONTAINS,
              displayName_STARTS_WITH: displayName_STARTS_WITH,
              displayName_NOT_STARTS_WITH: displayName_NOT_STARTS_WITH,
              displayName_ENDS_WITH: displayName_ENDS_WITH,
              displayName_NOT_ENDS_WITH: displayName_NOT_ENDS_WITH,
              projectsAggregate: _projectsAggregate?.build(),
              projects_ALL: _projects_ALL?.build(),
              projects_NONE: _projects_NONE?.build(),
              projects_SINGLE: _projects_SINGLE?.build(),
              projects_SOME: _projects_SOME?.build(),
              projectsConnection_ALL: _projectsConnection_ALL?.build(),
              projectsConnection_NONE: _projectsConnection_NONE?.build(),
              projectsConnection_SINGLE: _projectsConnection_SINGLE?.build(),
              projectsConnection_SOME: _projectsConnection_SOME?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'OR';
        _OR?.build();
        _$failedField = 'AND';
        _AND?.build();

        _$failedField = 'id_IN';
        _id_IN?.build();
        _$failedField = 'id_NOT_IN';
        _id_NOT_IN?.build();

        _$failedField = 'username_IN';
        _username_IN?.build();
        _$failedField = 'username_NOT_IN';
        _username_NOT_IN?.build();

        _$failedField = 'displayName_IN';
        _displayName_IN?.build();
        _$failedField = 'displayName_NOT_IN';
        _displayName_NOT_IN?.build();

        _$failedField = 'projectsAggregate';
        _projectsAggregate?.build();
        _$failedField = 'projects_ALL';
        _projects_ALL?.build();
        _$failedField = 'projects_NONE';
        _projects_NONE?.build();
        _$failedField = 'projects_SINGLE';
        _projects_SINGLE?.build();
        _$failedField = 'projects_SOME';
        _projects_SOME?.build();
        _$failedField = 'projectsConnection_ALL';
        _projectsConnection_ALL?.build();
        _$failedField = 'projectsConnection_NONE';
        _projectsConnection_NONE?.build();
        _$failedField = 'projectsConnection_SINGLE';
        _projectsConnection_SINGLE?.build();
        _$failedField = 'projectsConnection_SOME';
        _projectsConnection_SOME?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserWhere', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: always_put_control_body_on_new_line,always_specify_types,annotate_overrides,avoid_annotating_with_dynamic,avoid_as,avoid_catches_without_on_clauses,avoid_returning_this,deprecated_member_use_from_same_package,lines_longer_than_80_chars,no_leading_underscores_for_local_identifiers,omit_local_variable_types,prefer_expression_function_bodies,sort_constructors_first,test_types_in_equals,unnecessary_const,unnecessary_new,unnecessary_lambdas
